var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.356,1,1.881]],["body/controllers/AppController.html",[0,2.434,1,3.206,2,1.644,3,0.389,4,0.389,5,0.33,6,3.015,7,0.451,8,3.847,9,2.911,10,3.312,11,3.312,12,0.389,13,2.098,14,4.464,15,2.031,16,0.038,17,1.224,18,3.652,19,3.312,20,3.312,21,2.098,22,0.928,23,0.748,24,1.11,25,2.698,26,3.015,27,0.389,28,0.389,29,1.822,30,2.595,31,2.031,32,1.644,33,3.652,34,0.022,35,0.029,36,0.022]],["title/modules/AppModule.html",[37,1.356,38,1.881]],["body/modules/AppModule.html",[1,3.16,2,2.056,3,0.377,4,0.377,5,0.32,16,0.038,23,0.889,24,1.076,25,2.827,26,2.922,27,0.377,28,0.377,34,0.022,35,0.028,36,0.022,37,2.277,38,3.718,39,1.767,40,1.767,41,2.211,42,2.211,43,1.767,44,3.16,45,2.211,46,2.922,47,2.922,48,2.922,49,2.827,50,3.151,51,2.854,52,2.211,53,2.211,54,3.54,55,3.771,56,3.54,57,2.922,58,1.076,59,1.969,60,3.54]],["title/injectables/AppService.html",[25,1.503,61,1.112]],["body/injectables/AppService.html",[3,0.415,4,0.415,5,0.352,7,0.482,8,4.009,9,3.034,12,0.415,13,2.186,14,4.571,16,0.038,17,1.307,19,3.451,20,3.451,21,2.186,22,0.956,23,0.626,24,1.185,25,2.424,27,0.415,28,0.415,32,1.755,34,0.024,35,0.03,36,0.024,61,1.794,62,2.168,63,3.219,64,3.451,65,4.857,66,3.899,67,3.899,68,3.899]],["title/injectables/CurrenciesService.html",[61,1.112,69,1.503]],["body/injectables/CurrenciesService.html",[3,0.182,4,0.357,5,0.154,7,0.211,10,1.918,12,0.182,13,1.215,16,0.039,17,1.603,21,1.983,22,0.929,23,0.433,24,0.519,27,0.182,28,0.182,29,2.067,31,2.304,32,1.865,34,0.011,35,0.017,36,0.011,61,0.997,62,0.95,64,1.918,69,1.347,70,1.107,71,1.41,72,1.686,73,3.804,74,4.405,75,3.771,76,4.162,77,2.699,78,2.699,79,0.744,80,4.018,81,3.347,82,3.347,83,3.347,84,3.347,85,3.498,86,2.699,87,3.804,88,3.804,89,2.115,90,1.708,91,3.808,92,3.804,93,2.699,94,1.686,95,0.821,96,0.89,97,1.215,98,2.699,99,1.497,100,1.048,101,1.708,102,2.699,103,2.699,104,3.804,105,1.26,106,2.699,107,1.708,108,2.228,109,1.708,110,2.699,111,2.699,112,1.918,113,2.699,114,3.804,115,1.708,116,2.228,117,3.42,118,1.708,119,2.699,120,1.501,121,1.918,122,3.13,123,2.378,124,1.708,125,2.228,126,3.804,127,2.699,128,2.699,129,2.378,130,2.699,131,1.41,132,2.699,133,1.41,134,1.686,135,1.708,136,1.708,137,1.708,138,1.861,139,3.42,140,1.708,141,2.228,142,1.708,143,3.347,144,1.708,145,3.347,146,1.708,147,2.228,148,1.708,149,1.708,150,2.699,151,1.708,152,1.708,153,1.708,154,1.708,155,3.347,156,1.708,157,1.708,158,1.708,159,1.708,160,1.708,161,1.708,162,1.708,163,1.708,164,1.708,165,1.708,166,2.699,167,2.699,168,1.708,169,1.708,170,1.708]],["title/interfaces/DetailedProductListItem.html",[171,0.484,172,1.356]],["body/interfaces/DetailedProductListItem.html",[3,0.439,4,0.256,5,0.217,7,0.642,12,0.256,16,0.039,22,0.961,23,0.385,27,0.483,34,0.015,35,0.022,36,0.015,58,1.617,70,0.54,79,0.963,95,1.529,96,0.973,97,1.574,99,1.617,100,1.327,105,1.649,171,0.728,172,1.856,173,0.977,174,1.334,175,1.334,176,1.962,177,1.944,178,1.733,179,1.783,180,2.058,181,2.52,182,1.617,183,2.52,184,2.336,185,2.048,186,2.184,187,2.168,188,1.574,189,2.294,190,2.184,191,1.424,192,1.334,193,2.679,194,2.184,195,1.499,196,0.963,197,1.856,198,2.184,199,1.334,200,1.197,201,1.08,202,1.499,203,0.661,204,1.499,205,1.334,206,1.334]],["title/interfaces/ExternalExchangeRates.html",[134,1.881,171,0.484]],["body/interfaces/ExternalExchangeRates.html",[3,0.365,4,0.476,5,0.309,7,0.423,10,4.121,12,0.365,16,0.038,22,1.034,27,0.365,34,0.021,35,0.028,36,0.021,70,0.77,75,3.99,76,4.721,79,1.232,96,1.106,99,1.359,100,0.944,105,1.707,108,2.827,112,2.433,116,3.691,117,4.635,120,2.486,123,3.177,134,2.793,171,0.55,173,1.395,207,2.827,208,2.827,209,3.425,210,4.471,211,4.471,212,4.471,213,4.471,214,3.425]],["title/interfaces/OrderCheckoutDto.html",[171,0.484,201,1.356]],["body/interfaces/OrderCheckoutDto.html",[3,0.387,4,0.27,5,0.228,7,0.526,12,0.27,16,0.039,22,0.925,23,0.406,27,0.495,34,0.016,35,0.022,36,0.016,58,1.671,70,0.569,79,1.001,95,1.105,96,0.859,99,1.641,100,1.171,105,1.641,171,0.746,172,2.091,173,1.031,174,1.408,175,1.408,176,1.892,177,1.408,178,1.604,179,1.842,180,2.121,181,1.408,182,1.413,183,1.408,184,1.913,185,2.004,186,1.581,187,2.091,188,1.139,189,2.364,190,1.581,191,1.48,192,1.408,193,2.848,194,2.27,195,1.581,196,1.171,197,2.429,198,2.27,199,2.021,200,1.813,201,1.636,202,2.27,203,1.001,204,2.902,205,2.021,206,2.583]],["title/classes/ProductDto.html",[28,0.321,215,1.356]],["body/classes/ProductDto.html",[3,0.307,4,0.307,5,0.26,7,0.639,12,0.307,15,2.738,16,0.038,17,1.731,22,0.989,23,0.463,27,0.425,28,0.425,34,0.018,35,0.025,36,0.018,79,1.098,95,1.571,96,1.044,97,2.216,99,1.571,100,1.258,105,1.571,171,0.463,176,1.175,178,1.788,182,1.571,185,2.176,188,1.299,191,1.859,203,1.424,215,1.794,216,1.802,217,2.05,218,3.89,219,2.886,220,2.886,221,2.886,222,2.886,223,2.886,224,2.886,225,2.831,226,3.29,227,2.831,228,2.05,229,1.802,230,2.382,231,2.382,232,2.382]],["title/interfaces/ProductPriceDto.html",[171,0.484,191,1.227]],["body/interfaces/ProductPriceDto.html",[3,0.339,4,0.339,5,0.287,7,0.593,12,0.339,16,0.038,22,0.994,23,0.511,27,0.453,28,0.453,34,0.02,35,0.026,36,0.02,79,1.173,95,1.294,96,0.86,97,1.431,99,1.758,100,1.412,105,1.758,171,0.511,173,1.295,176,1.734,178,1.791,182,1.294,185,2.088,188,1.916,191,1.955,203,1.173,215,1.431,217,2.259,218,3.642,225,2.259,226,2.625,227,3.025,228,2.259,229,1.986,230,2.625,231,3.514,232,3.514]],["title/interfaces/ProductPriceWithTotal.html",[171,0.484,184,1.356]],["body/interfaces/ProductPriceWithTotal.html",[3,0.395,4,0.278,5,0.235,7,0.534,12,0.278,16,0.039,22,0.851,23,0.418,27,0.501,34,0.016,35,0.023,36,0.016,58,1.572,70,0.586,79,1.022,95,1.128,96,0.526,99,1.759,100,1.371,105,1.654,171,0.756,172,1.67,173,1.061,174,1.449,175,1.449,176,2.106,177,1.449,178,1.654,179,1.733,180,1.851,181,1.449,182,1.572,183,1.449,184,2.119,185,2.026,186,1.627,187,1.944,188,1.173,189,2.063,190,1.627,191,1.76,192,1.449,193,3.121,194,2.94,195,2.317,196,1.19,197,1.944,198,2.317,199,1.449,200,1.3,201,1.173,202,1.627,203,0.718,204,1.627,205,1.449,206,1.449]],["title/controllers/ProductsController.html",[0,1.356,233,1.881]],["body/controllers/ProductsController.html",[0,2.314,2,1.649,3,0.39,4,0.39,5,0.331,7,0.453,11,3.318,12,0.39,13,2.102,15,2.037,16,0.038,17,1.228,21,2.437,23,0.75,24,1.114,27,0.39,28,0.39,29,1.828,30,2.603,32,1.649,34,0.023,35,0.029,36,0.023,72,2.917,89,2.037,138,2.037,196,1.541,225,3.318,233,2.917,234,3.024,235,3.024,236,4.469,237,3.664,238,2.437,239,3.024,240,3.664,241,3.664]],["title/modules/ProductsModule.html",[37,1.356,49,1.503]],["body/modules/ProductsModule.html",[2,1.838,3,0.319,4,0.319,5,0.27,7,0.505,16,0.038,23,0.84,24,0.909,27,0.319,28,0.435,34,0.018,35,0.025,36,0.018,37,2.093,39,1.492,40,1.492,41,1.868,42,1.868,43,1.492,44,2.905,45,2.905,49,2.758,51,2.551,52,1.868,53,1.868,95,1.414,99,1.414,105,1.414,129,2.125,182,1.414,185,1.894,196,0.824,203,1.282,215,1.346,233,2.905,238,2.644,239,2.468,242,2.468,243,2.468,244,2.468,245,2.99,246,2.99,247,2.468,248,2.99,249,2.125,250,2.468,251,2.468,252,4.651,253,2.99,254,4.319,255,4.084,256,2.99,257,2.99,258,2.99,259,2.99,260,2.902,261,2.99,262,4.084,263,3.371,264,2.99,265,2.99,266,2.99,267,2.99,268,2.99]],["title/injectables/ProductsService.html",[61,1.112,238,1.356]],["body/injectables/ProductsService.html",[3,0.296,4,0.296,5,0.251,7,0.344,12,0.296,13,1.748,16,0.039,17,1.624,21,2.561,22,0.954,23,0.624,24,0.846,27,0.296,28,0.296,29,2.234,31,1.547,32,2.015,34,0.017,35,0.024,36,0.017,61,1.435,62,1.547,64,2.76,72,2.426,80,1.976,85,3.181,89,2.489,94,2.796,95,1.361,96,0.905,97,2.015,131,2.296,138,1.547,178,1.181,188,2.377,196,1.548,203,1.234,215,2.377,236,4,238,1.748,247,2.296,269,2.296,270,3.885,271,3.885,272,3.885,273,3.885,274,2.781,275,2.781,276,2.781,277,3.885,278,3.885,279,2.781,280,3.443,281,3.885,282,2.781,283,3.885,284,2.781,285,2.781,286,2.781,287,2.781,288,2.781,289,2.296]],["title/controllers/ShoppingCartController.html",[0,1.356,290,1.881]],["body/controllers/ShoppingCartController.html",[0,1.883,2,1.108,3,0.262,4,0.262,5,0.222,7,0.304,11,2.53,12,0.262,13,1.603,15,2.327,16,0.038,17,1.402,21,2.283,22,1.002,23,0.672,24,0.748,27,0.262,28,0.262,29,2.531,30,1.749,31,1.369,32,1.883,34,0.015,35,0.022,36,0.015,58,1.685,59,2.55,70,1.031,72,2.224,89,1.369,94,2.224,95,1.083,96,0.72,97,2.064,105,1.59,120,2.327,121,2.53,138,1.369,179,1.881,180,2.288,189,1.98,196,0.981,203,1.398,235,2.032,260,2.53,280,2.53,290,2.224,291,2.032,292,3.785,293,2.032,294,3.561,295,2.461,296,4.586,297,4.184,298,2.461,299,3.561,300,2.032,301,4.017,302,2.55,303,3.561,304,2.461,305,2.53,306,2.53,307,3.561,308,2.461,309,2.461,310,2.288,311,2.032,312,2.032,313,2.032,314,2.461,315,2.461,316,1.228,317,2.461,318,2.461,319,2.461,320,2.461,321,2.461]],["title/classes/ShoppingCartDto.html",[28,0.321,316,1.503]],["body/classes/ShoppingCartDto.html",[3,0.373,4,0.373,5,0.316,7,0.432,12,0.373,16,0.038,17,1.519,22,0.909,27,0.483,28,0.373,34,0.022,35,0.028,36,0.022,58,1.748,70,1.131,79,1.249,96,0.916,100,0.964,171,0.562,176,1.425,178,1.529,179,1.926,182,1.529,187,2.04,196,1.249,200,1.745,203,1.556,216,2.185,316,2.262,322,2.796,323,2.485,324,3.573,325,3.497,326,2.796,327,3.497,328,2.185]],["title/modules/ShoppingCartModule.html",[37,1.356,50,1.675]],["body/modules/ShoppingCartModule.html",[2,1.948,3,0.347,4,0.347,5,0.294,16,0.038,23,0.908,24,0.991,27,0.347,28,0.347,34,0.02,35,0.027,36,0.02,37,2.187,39,1.627,40,1.627,41,2.037,42,2.037,43,1.627,44,3.035,45,2.037,49,2.764,50,3.262,51,2.704,52,2.037,53,2.037,55,3.573,57,2.691,58,1.316,59,1.813,69,2.764,70,0.733,91,3.573,250,3.573,251,3.573,290,3.035,310,2.764,311,2.691,329,2.691,330,3.26,331,2.691,332,3.26,333,4.329,334,3.26,335,2.691,336,4.329,337,3.26,338,4.011,339,3.26,340,3.26]],["title/interfaces/ShoppingCartProductListItem.html",[171,0.484,326,1.675]],["body/interfaces/ShoppingCartProductListItem.html",[3,0.376,4,0.376,5,0.319,7,0.436,12,0.376,16,0.038,22,0.965,27,0.486,28,0.376,34,0.022,35,0.028,36,0.022,58,1.721,70,0.794,79,1.256,96,0.921,100,1.392,171,0.567,173,1.438,178,1.721,179,1.897,182,1.775,187,1.589,196,0.973,200,2.275,203,1.471,316,1.761,322,1.963,323,2.508,324,2.508,326,2.809,328,3.335]],["title/injectables/ShoppingCartService.html",[61,1.112,310,1.503]],["body/injectables/ShoppingCartService.html",[3,0.192,4,0.112,5,0.095,7,0.223,12,0.112,13,0.813,16,0.039,17,1.512,21,2.226,22,0.959,23,0.659,24,0.319,27,0.112,28,0.112,29,2.351,31,1.767,32,1.846,34,0.006,35,0.011,36,0.006,58,1.504,59,2.567,61,0.667,62,0.584,69,1.958,70,1.038,79,0.498,80,3.796,85,2.466,89,1.569,94,2.658,95,1.335,96,0.887,97,1.915,99,0.722,100,1.243,105,0.319,120,1.93,121,1.283,122,2.258,123,1.688,125,1.491,129,0.746,133,0.867,138,1.767,139,3.811,141,1.491,147,1.491,172,1.27,177,0.584,178,1.459,179,1.658,180,1.408,181,1.321,182,1.335,183,1.569,184,1.069,185,0.736,192,0.584,193,1.569,196,1.024,197,0.473,199,0.584,201,0.473,203,1.024,205,1.767,206,1.569,215,1.915,238,1.672,254,0.867,260,1.283,289,1.491,292,3.067,293,0.867,300,1.491,301,2.329,302,1.767,305,1.283,306,0.746,310,0.901,312,1.961,313,0.867,316,2.046,324,3.024,326,2.442,328,2.168,335,0.867,341,0.867,342,1.806,343,1.806,344,3.716,345,2.376,346,1.806,347,1.806,348,2.376,349,2.376,350,1.806,351,2.376,352,1.05,353,1.806,354,1.05,355,3.471,356,1.05,357,1.806,358,1.05,359,2.821,360,1.806,361,1.05,362,1.806,363,1.05,364,4.256,365,1.05,366,1.05,367,1.05,368,1.806,369,1.05,370,1.806,371,1.05,372,1.05,373,1.05,374,1.05,375,1.05,376,1.05,377,1.05,378,1.05,379,1.05,380,0.746,381,0.867,382,1.806,383,1.05,384,1.05,385,1.05,386,1.05,387,1.05,388,1.806,389,1.806,390,1.05,391,1.05,392,3.178,393,1.806,394,1.05,395,3.471,396,1.05,397,1.05,398,1.806,399,1.05,400,1.05,401,1.806,402,1.806,403,1.806,404,1.05,405,1.05,406,1.05,407,1.05,408,1.806,409,1.05,410,1.05,411,1.05,412,1.806,413,1.05,414,1.806,415,1.05,416,1.806,417,1.806,418,2.376,419,1.05,420,1.05,421,1.05,422,1.05,423,1.05,424,1.806,425,1.05,426,1.05,427,1.806,428,1.05,429,1.806,430,3.178,431,1.806,432,1.05,433,2.821,434,2.376,435,1.05,436,1.05,437,1.05,438,1.05,439,1.05]],["title/classes/ShoppingCartUpdateDto.html",[28,0.321,302,1.675]],["body/classes/ShoppingCartUpdateDto.html",[3,0.318,4,0.318,5,0.269,7,0.369,12,0.318,15,2.583,16,0.038,17,1.557,22,0.737,23,0.746,27,0.318,28,0.495,34,0.018,35,0.025,36,0.018,58,1.412,70,1.123,79,1.123,96,0.938,100,1.376,112,2.896,120,2.267,176,1.661,178,1.518,179,1.885,182,1.641,187,1.835,196,1.123,216,1.863,218,3.3,227,2.896,228,2.119,229,1.863,249,2.119,280,2.896,302,2.267,322,2.776,328,2.901,380,3.3,381,2.462,440,2.462,441,4.077,442,4.077,443,4.645,444,4.077,445,2.982,446,4.077,447,4.077,448,2.982,449,2.982,450,2.982,451,4.077,452,4.077,453,4.077,454,4.645,455,4.077,456,2.982,457,2.982,458,2.982]],["title/interfaces/TotalPrice.html",[171,0.484,197,1.356]],["body/interfaces/TotalPrice.html",[3,0.396,4,0.279,5,0.236,7,0.535,12,0.279,16,0.039,22,0.936,23,0.42,27,0.502,34,0.016,35,0.023,36,0.016,58,1.62,70,0.588,79,1.026,95,1.132,96,0.752,99,1.76,100,1.373,105,1.745,171,0.758,172,1.675,173,1.066,174,1.455,175,1.455,176,2.03,177,1.455,178,1.62,179,1.785,180,1.857,181,1.455,182,1.434,183,1.455,184,1.949,185,1.921,186,1.635,187,1.949,188,1.178,189,2.07,190,1.635,191,1.516,192,1.455,193,2.88,194,2.325,195,1.635,196,1.026,197,2.123,198,2.946,199,1.455,200,1.306,201,1.178,202,1.635,203,0.721,204,1.635,205,1.455,206,1.455]],["title/coverage.html",[459,2.916]],["body/coverage.html",[0,2.113,1,1.902,5,0.275,6,2.514,16,0.038,20,2.164,25,1.52,28,0.5,34,0.019,35,0.025,36,0.019,43,1.52,59,2.299,61,1.86,63,2.514,69,1.52,70,1.315,71,2.514,75,2.164,96,0.615,122,2.164,134,1.902,171,0.892,172,1.371,174,2.8,175,2.8,179,1.021,184,1.371,191,1.24,197,1.371,201,1.371,207,2.514,208,2.514,215,1.371,217,2.938,233,1.902,234,2.514,238,1.371,269,2.514,290,1.902,291,2.514,302,1.693,310,1.52,316,1.52,322,2.611,323,2.938,326,1.693,341,2.514,440,2.514,459,2.164,460,3.045,461,3.045,462,3.045,463,6.043,464,5.036,465,2.514,466,3.045,467,3.045,468,3.045,469,5.036,470,3.045,471,3.045,472,5.036,473,3.045,474,3.045,475,3.045,476,3.045]],["title/dependencies.html",[40,1.807,477,2.518]],["body/dependencies.html",[16,0.038,24,1.295,28,0.546,34,0.026,35,0.032,36,0.026,40,2.125,229,2.66,249,3.026,338,3.515,478,5.5,479,4.259,480,4.259,481,4.259,482,4.259,483,4.259,484,4.259,485,4.259,486,4.259,487,4.259,488,4.259,489,4.259,490,4.259,491,4.259]],["title/miscellaneous/enumerations.html",[492,1.573,493,2.989]],["body/miscellaneous/enumerations.html",[12,0.478,16,0.036,34,0.028,35,0.033,36,0.028,70,1.01,99,1.609,305,3.759,306,3.759,322,2.497,380,3.759,492,2.805,493,3.707,494,4.491,495,5.291]],["title/miscellaneous/functions.html",[492,1.573,496,2.989]],["body/miscellaneous/functions.html",[9,2.895,12,0.494,16,0.033,34,0.029,35,0.033,36,0.029,43,2.928,465,3.826,492,2.895,496,3.826,497,4.635]],["title/index.html",[12,0.268,498,2.518,499,2.518]],["body/index.html",[7,0.471,9,2.379,16,0.038,19,3.401,34,0.023,35,0.029,36,0.023,459,2.706,500,3.809,501,3.809,502,3.809,503,3.809,504,3.809,505,3.809,506,3.809,507,3.809,508,3.809,509,3.809,510,3.809,511,3.809,512,3.809,513,3.809,514,3.809,515,5.861,516,3.809,517,3.809,518,5.774,519,3.809,520,3.809,521,4.787,522,3.809,523,3.809,524,3.809,525,3.809,526,4.787,527,3.809,528,3.809,529,3.809,530,3.809,531,3.809,532,3.809]],["title/modules.html",[39,2.048]],["body/modules.html",[16,0.033,34,0.028,35,0.033,36,0.028,38,2.827,39,2.258,49,2.258,50,2.517,533,5.644,534,5.644,535,5.644,536,5.644]],["title/overview.html",[537,3.388]],["body/overview.html",[2,1.639,16,0.037,25,2.558,34,0.022,35,0.029,36,0.022,37,1.639,38,3.669,39,1.817,40,1.817,41,2.274,42,2.274,43,1.817,44,2.274,45,2.274,46,3.005,47,3.005,48,3.005,49,2.895,50,3.299,51,2.905,52,2.274,53,2.274,62,2.025,69,2.558,173,1.483,216,2.274,238,2.611,242,3.005,243,3.005,244,3.005,263,3.005,310,2.558,329,3.005,331,3.005,537,3.005,538,5.126,539,3.641]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":434,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["0.1.13",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["0.11.1",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["0.19.2",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":129,"title":{},"body":{"injectables/CurrenciesService.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{}}}],["1/1",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":256,"title":{},"body":{"modules/ProductsModule.html":{}}}],["100",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":127,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["13/13",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":259,"title":{},"body":{"modules/ProductsModule.html":{}}}],["150",{"_index":268,"title":{},"body":{"modules/ProductsModule.html":{}}}],["2/2",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":160,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["3",{"_index":538,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":263,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["4/4",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["6.5.4",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":126,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["7",{"_index":539,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["83",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["action",{"_index":443,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["add",{"_index":305,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["add/remove",{"_index":451,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["added",{"_index":187,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["addproductstolist",{"_index":345,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addproductstolist(productslist",{"_index":354,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["allow",{"_index":296,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["angular",{"_index":511,"title":{},"body":{"index.html":{}}}],["another",{"_index":106,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["app",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":508,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":38,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assert",{"_index":359,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertproduct",{"_index":346,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertproduct(productid",{"_index":357,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertshoppingcart",{"_index":347,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertshoppingcart(id",{"_index":360,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["async",{"_index":85,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}}}],["auto",{"_index":453,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["available",{"_index":225,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"controllers/ProductsController.html":{}}}],["await",{"_index":141,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["awsome",{"_index":264,"title":{},"body":{"modules/ProductsModule.html":{}}}],["axios",{"_index":338,"title":{},"body":{"modules/ShoppingCartModule.html":{},"dependencies.html":{}}}],["axios_instance_token",{"_index":336,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["base",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["basecurrency",{"_index":81,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["body",{"_index":307,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["bootstrap",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":403,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["browse",{"_index":536,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":533,"title":{},"body":{"modules.html":{}}}],["builddetailedproductitem",{"_index":348,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["builddetailedproductitem(product",{"_index":363,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["building",{"_index":503,"title":{},"body":{"index.html":{}}}],["cache",{"_index":111,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["calculate",{"_index":368,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculatetotalrequestedprice",{"_index":349,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculatetotalrequestedprice(detailedproductslist",{"_index":366,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculations",{"_index":116,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["car",{"_index":362,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":179,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["cart.action",{"_index":381,"title":{},"body":{"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["cart.action.ts",{"_index":495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cart.controller",{"_index":334,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["cart.controller.ts",{"_index":291,"title":{},"body":{"controllers/ShoppingCartController.html":{},"coverage.html":{}}}],["cart.controller.ts:29",{"_index":298,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["cart.controller.ts:40",{"_index":304,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["cart.controller.ts:54",{"_index":295,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["cart.dto",{"_index":379,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.dto.ts",{"_index":323,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"coverage.html":{}}}],["cart.dto.ts:12",{"_index":327,"title":{},"body":{"classes/ShoppingCartDto.html":{}}}],["cart.dto.ts:8",{"_index":325,"title":{},"body":{"classes/ShoppingCartDto.html":{}}}],["cart.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["cart.module.ts",{"_index":332,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["cart.service",{"_index":311,"title":{},"body":{"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{}}}],["cart.service.ts",{"_index":341,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:146",{"_index":365,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:186",{"_index":376,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:201",{"_index":361,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:214",{"_index":358,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:229",{"_index":356,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:267",{"_index":373,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:297",{"_index":367,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:32",{"_index":353,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:48",{"_index":371,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:63",{"_index":374,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:98",{"_index":369,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/currencies.service.ts",{"_index":71,"title":{},"body":{"injectables/CurrenciesService.html":{},"coverage.html":{}}}],["cart/currencies.service.ts:18",{"_index":118,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:22",{"_index":115,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:27",{"_index":124,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:33",{"_index":93,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:53",{"_index":101,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:69",{"_index":109,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:83",{"_index":107,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/interfaces/external",{"_index":207,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["cart/interfaces/order",{"_index":174,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["cart/interfaces/shopping",{"_index":322,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cart/shopping",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["carts",{"_index":344,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["case",{"_index":398,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["change",{"_index":452,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["checkout",{"_index":180,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["checkout(@param('id",{"_index":319,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["checkout(id",{"_index":293,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["checkout.dto",{"_index":387,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["checkout.dto.ts",{"_index":175,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["class",{"_index":28,"title":{"classes/ProductDto.html":{},"classes/ShoppingCartDto.html":{},"classes/ShoppingCartUpdateDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":216,"title":{},"body":{"classes/ProductDto.html":{},"classes/ShoppingCartDto.html":{},"classes/ShoppingCartUpdateDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":242,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":243,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":244,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_shoppingcartmodule",{"_index":329,"title":{},"body":{"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["cluster_shoppingcartmodule_imports",{"_index":330,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["cluster_shoppingcartmodule_providers",{"_index":331,"title":{},"body":{"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["combinedquantity",{"_index":430,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["const",{"_index":139,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["constructor",{"_index":89,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["constructor(@inject('products",{"_index":284,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(httpservice",{"_index":90,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["constructor(private",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}}}],["constructor(products",{"_index":274,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(productsservice",{"_index":352,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{},"coverage.html":{}}}],["controller('products",{"_index":240,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('shopping",{"_index":314,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["convert",{"_index":86,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["convert(from",{"_index":98,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["converting",{"_index":77,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["converts",{"_index":102,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["coverage",{"_index":459,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":292,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["creates",{"_index":299,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["currencies",{"_index":78,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currencies.service",{"_index":335,"title":{},"body":{"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{}}}],["currenciesmap",{"_index":166,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currenciesmap.set",{"_index":168,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currenciesservice",{"_index":69,"title":{"injectables/CurrenciesService.html":{}},"body":{"injectables/CurrenciesService.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{},"overview.html":{}}}],["currency",{"_index":105,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["currencyname",{"_index":167,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currencynames",{"_index":163,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currencynames.reduce",{"_index":165,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["current",{"_index":74,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["data",{"_index":112,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["database",{"_index":188,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"interfaces/TotalPrice.html":{}}}],["date",{"_index":117,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["date.now",{"_index":151,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["declarations",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/ProductDto.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["default",{"_index":121,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["defines",{"_index":446,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["dependencies",{"_index":40,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"index.html":{}}}],["detailed",{"_index":177,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["detailedproductlistitem",{"_index":172,"title":{"interfaces/DetailedProductListItem.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["detailedproductslist",{"_index":206,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["detailedproductslist.reduce((sum",{"_index":437,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["determinates",{"_index":231,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["development",{"_index":517,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":527,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":504,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":493,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eur",{"_index":260,"title":{},"body":{"modules/ProductsModule.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["exchagerateslastsync",{"_index":82,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchange",{"_index":75,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["exchange_rates_api_url",{"_index":339,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["exchangerates",{"_index":140,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangerates.get(from",{"_index":144,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangerates.get(to",{"_index":146,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangeratesapiurl",{"_index":92,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangeratescache",{"_index":83,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["exports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["express",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":195,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["external",{"_index":108,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["externalexchangerates",{"_index":134,"title":{"interfaces/ExternalExchangeRates.html":{}},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["externalexchangerates.data.base",{"_index":162,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["externalexchangerates.data.rates[currencyname",{"_index":169,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["externalexchangerates.status",{"_index":159,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["fetches",{"_index":73,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["findall",{"_index":236,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbyid",{"_index":272,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyid(id",{"_index":278,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyids",{"_index":273,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyids(ids",{"_index":281,"title":{},"body":{"injectables/ProductsService.html":{}}}],["flip",{"_index":512,"title":{},"body":{"index.html":{}}}],["form",{"_index":277,"title":{},"body":{"injectables/ProductsService.html":{}}}],["found",{"_index":424,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["framework",{"_index":502,"title":{},"body":{"index.html":{}}}],["fresh",{"_index":113,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["fromrate",{"_index":143,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["function",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["functions",{"_index":496,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator.util",{"_index":384,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["get(':id",{"_index":294,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["get(this.exchangeratesapiurl",{"_index":157,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["getcurrentrates",{"_index":87,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["getexchangerates",{"_index":88,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["gethello",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":498,"title":{"index.html":{}},"body":{}}],["given",{"_index":103,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["heavily",{"_index":509,"title":{},"body":{"index.html":{}}}],["hello",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["helper",{"_index":128,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["hour",{"_index":114,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["httpmodule",{"_index":333,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["https://api.exchangeratesapi.io/latest",{"_index":340,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["httpservice",{"_index":91,"title":{},"body":{"injectables/CurrenciesService.html":{},"modules/ShoppingCartModule.html":{}}}],["id",{"_index":203,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["identifier",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":283,"title":{},"body":{"injectables/ProductsService.html":{}}}],["ids.includes(product.id",{"_index":287,"title":{},"body":{"injectables/ProductsService.html":{}}}],["import",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingCartModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["inject",{"_index":131,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{}}}],["inject('exchange_rates_api_url",{"_index":137,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["injectable",{"_index":61,"title":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["injectables",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"overview.html":{}}}],["inspired",{"_index":510,"title":{},"body":{"index.html":{}}}],["installation",{"_index":514,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":516,"title":{},"body":{"index.html":{}}}],["insufficientquantityproducts",{"_index":409,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["interface",{"_index":171,"title":{"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["interfaces",{"_index":173,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{},"overview.html":{}}}],["interfaces/external",{"_index":135,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["interfaces/order",{"_index":386,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["interfaces/product.dto",{"_index":247,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["interfaces/shopping",{"_index":312,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["isenum",{"_index":456,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["isenum(shoppingcartaction",{"_index":444,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["isint",{"_index":227,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["isint()@min(0",{"_index":223,"title":{},"body":{"classes/ProductDto.html":{}}}],["isstring",{"_index":218,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["item",{"_index":254,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{}}}],["item.requestedcurrencyprice.total",{"_index":439,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["key",{"_index":214,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["last",{"_index":119,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["legend",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["licensed",{"_index":532,"title":{},"body":{"index.html":{}}}],["list",{"_index":205,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["literal",{"_index":211,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["main",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["manage",{"_index":343,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["map",{"_index":123,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"injectables/ShoppingCartService.html":{}}}],["map([[this.basecurrency",{"_index":170,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["milliseconds",{"_index":130,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["min",{"_index":228,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["min(0",{"_index":230,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["min(1",{"_index":458,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["miscellaneous",{"_index":492,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":531,"title":{},"body":{"index.html":{}}}],["mode",{"_index":521,"title":{},"body":{"index.html":{}}}],["module",{"_index":37,"title":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["modules",{"_index":39,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":198,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["multiplied",{"_index":194,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["name",{"_index":95,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["nest",{"_index":530,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"dependencies.html":{}}}],["nestjs/common/http/http.constants",{"_index":337,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["nestjs/common/utils/random",{"_index":383,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["nestjs/core",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":122,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["newlist",{"_index":436,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newlist.concat(productlistitem",{"_index":435,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart",{"_index":388,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":389,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.productslist",{"_index":390,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["nice",{"_index":258,"title":{},"body":{"modules/ProductsModule.html":{}}}],["node.js",{"_index":501,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":378,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["notfoundexception('shopping",{"_index":423,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["npm",{"_index":515,"title":{},"body":{"index.html":{}}}],["number",{"_index":100,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["object",{"_index":442,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["object.keys(externalexchangerates.data.rates",{"_index":164,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["one",{"_index":104,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["one_hour",{"_index":84,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["optional",{"_index":97,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["order",{"_index":199,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["ordercheckoutdto",{"_index":201,"title":{"interfaces/OrderCheckoutDto.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["original",{"_index":186,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["originalprice",{"_index":181,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["out",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["overview",{"_index":537,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p1",{"_index":253,"title":{},"body":{"modules/ProductsModule.html":{}}}],["p2",{"_index":261,"title":{},"body":{"modules/ProductsModule.html":{}}}],["p3",{"_index":266,"title":{},"body":{"modules/ProductsModule.html":{}}}],["package",{"_index":477,"title":{"dependencies.html":{}},"body":{}}],["pairs",{"_index":212,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["param",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["param('id",{"_index":317,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["patch",{"_index":308,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["patch(':id",{"_index":303,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["plaintoclass",{"_index":248,"title":{},"body":{"modules/ProductsModule.html":{}}}],["plaintoclass(productdto",{"_index":252,"title":{},"body":{"modules/ProductsModule.html":{}}}],["pln",{"_index":265,"title":{},"body":{"modules/ProductsModule.html":{}}}],["possible",{"_index":455,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["post",{"_index":297,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["prefix",{"_index":235,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}}}],["price",{"_index":185,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["private",{"_index":80,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}}}],["product",{"_index":178,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["product.description",{"_index":421,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.id",{"_index":289,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}}}],["product.name",{"_index":420,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.price",{"_index":415,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.price.currency",{"_index":417,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.price.value",{"_index":416,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.quantity",{"_index":414,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productdto",{"_index":215,"title":{"classes/ProductDto.html":{}},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["productid",{"_index":328,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["productindex",{"_index":427,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["production",{"_index":523,"title":{},"body":{"index.html":{}}}],["productlistitem",{"_index":412,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productlistitem.productid",{"_index":429,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productlistitem.quantity",{"_index":433,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productpricedto",{"_index":191,"title":{"interfaces/ProductPriceDto.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["productpricewithtotal",{"_index":184,"title":{"interfaces/ProductPriceWithTotal.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["products",{"_index":196,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["products.controller",{"_index":246,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":239,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/interfaces/product.dto",{"_index":192,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["products/products.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingCartModule.html":{}}}],["products/products.service",{"_index":385,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productscontroller",{"_index":233,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productslist",{"_index":324,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{}}}],["productsmodule",{"_index":49,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":238,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":500,"title":{},"body":{"index.html":{}}}],["promise",{"_index":138,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["promise.all",{"_index":410,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["promise.resolve(this.products",{"_index":285,"title":{},"body":{"injectables/ProductsService.html":{}}}],["properties",{"_index":79,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["provide",{"_index":250,"title":{},"body":{"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["quantity",{"_index":182,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["quantitytoadd",{"_index":355,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["query",{"_index":309,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["query('currency",{"_index":320,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["randomstringgenerator",{"_index":382,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["rates",{"_index":76,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["rates.interface",{"_index":136,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["rates.interface.ts",{"_index":208,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["readonly",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["reference",{"_index":213,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["reflect",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":202,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["remove",{"_index":306,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["removed",{"_index":447,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["removeproductsfromlist",{"_index":350,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["removeproductsfromlist(productslist",{"_index":372,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["representation",{"_index":200,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{}}}],["represents",{"_index":176,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["requested",{"_index":189,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"interfaces/TotalPrice.html":{}}}],["requestedcurrency",{"_index":364,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["requestedcurrencyprice",{"_index":183,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["required",{"_index":210,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["reset",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["resolves",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{}}}],["resolving",{"_index":271,"title":{},"body":{"injectables/ProductsService.html":{}}}],["responsible",{"_index":72,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{}}}],["result",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["rimraf",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}}}],["routes",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["run",{"_index":518,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":505,"title":{},"body":{"index.html":{}}}],["selected",{"_index":280,"title":{},"body":{"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["server",{"_index":506,"title":{},"body":{"index.html":{}}}],["service",{"_index":270,"title":{},"body":{"injectables/ProductsService.html":{}}}],["serviceunavailableexception",{"_index":132,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["shop",{"_index":513,"title":{},"body":{"index.html":{}}}],["shopping",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["shoppingcart",{"_index":392,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.productslist",{"_index":401,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.productslist.map(async",{"_index":411,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartaction",{"_index":380,"title":{},"body":{"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["shoppingcartaction.add",{"_index":399,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartaction.remove",{"_index":404,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcontroller",{"_index":290,"title":{"controllers/ShoppingCartController.html":{}},"body":{"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"coverage.html":{}}}],["shoppingcartdto",{"_index":316,"title":{"classes/ShoppingCartDto.html":{}},"body":{"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":204,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["shoppingcartmodule",{"_index":50,"title":{"modules/ShoppingCartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShoppingCartModule.html":{},"modules.html":{},"overview.html":{}}}],["shoppingcartproductlistitem",{"_index":326,"title":{"interfaces/ShoppingCartProductListItem.html":{}},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcartservice",{"_index":310,"title":{"injectables/ShoppingCartService.html":{}},"body":{"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{},"overview.html":{}}}],["shoppingcartupdate",{"_index":301,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdate.action",{"_index":397,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdate.productid",{"_index":406,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdate.quantity",{"_index":402,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdatedto",{"_index":302,"title":{"classes/ShoppingCartUpdateDto.html":{}},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{}}}],["side",{"_index":507,"title":{},"body":{"index.html":{}}}],["singleitemprice",{"_index":418,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["src/.../main.ts",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../shopping",{"_index":494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:19",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/interfaces/product.dto.ts",{"_index":217,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"coverage.html":{}}}],["src/products/interfaces/product.dto.ts:11",{"_index":220,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:16",{"_index":221,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:20",{"_index":222,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:26",{"_index":224,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:31",{"_index":219,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/products.controller.ts",{"_index":234,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:20",{"_index":237,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":245,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":269,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:19",{"_index":276,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:28",{"_index":282,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:37",{"_index":279,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:8",{"_index":275,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/shopping",{"_index":70,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["start",{"_index":519,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":522,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":524,"title":{},"body":{"index.html":{}}}],["started",{"_index":499,"title":{"index.html":{}},"body":{}}],["statements",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":125,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":232,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["string",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["structure",{"_index":209,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["sum",{"_index":438,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["summary",{"_index":370,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["support",{"_index":534,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":149,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["svg",{"_index":535,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":396,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["table",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["test:covlicense",{"_index":529,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":528,"title":{},"body":{"index.html":{}}}],["tests",{"_index":526,"title":{},"body":{"index.html":{}}}],["this.addproductstolist",{"_index":400,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.appservice.gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["this.assertproduct(productlistitem.productid",{"_index":413,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.assertproduct(shoppingcartupdate.productid",{"_index":394,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.assertshoppingcart(id",{"_index":393,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.basecurrency",{"_index":161,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.carts.get(id",{"_index":408,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carts.set(cart.id",{"_index":422,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carts.set(newshoppingcart.id",{"_index":391,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currenciesservice.convert",{"_index":419,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.exchagerateslastsync",{"_index":150,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.exchagerateslastsync.gettime",{"_index":152,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.exchangeratescache",{"_index":155,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.getcurrentrates",{"_index":154,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.getexchangerates",{"_index":142,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.httpservice",{"_index":156,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.one_hour",{"_index":153,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.products.filter(product",{"_index":286,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.products.find(product",{"_index":288,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.findall",{"_index":241,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbyid(productid",{"_index":425,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.removeproductsfromlist",{"_index":405,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.checkout(id",{"_index":321,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["this.shoppingcartservice.create",{"_index":315,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["this.shoppingcartservice.update(id",{"_index":318,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["this.updatecartlist(shoppingcart",{"_index":407,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["throw",{"_index":147,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["topromise",{"_index":158,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["torate",{"_index":145,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["total",{"_index":193,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["totalprice",{"_index":197,"title":{"interfaces/TotalPrice.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["transfer",{"_index":441,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transform",{"_index":454,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transform(quantity",{"_index":457,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transform(undefined)@isint()@min(1",{"_index":449,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transformer",{"_index":249,"title":{},"body":{"modules/ProductsModule.html":{},"classes/ShoppingCartUpdateDto.html":{},"dependencies.html":{}}}],["type",{"_index":96,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["unit",{"_index":525,"title":{},"body":{"index.html":{}}}],["unprocessableentityexception",{"_index":133,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["unprocessableentityexception('not",{"_index":148,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["unprocessableentityexception('product",{"_index":426,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["update",{"_index":120,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["update(id",{"_index":300,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["update.dto",{"_index":313,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["update.dto.ts",{"_index":440,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{}}}],["update.dto.ts:13",{"_index":445,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["update.dto.ts:19",{"_index":448,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["update.dto.ts:28",{"_index":450,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["updatecartlist",{"_index":351,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatecartlist(cart",{"_index":375,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist",{"_index":395,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist.findindex",{"_index":428,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist.push",{"_index":432,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist[productindex].quantity",{"_index":431,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["used",{"_index":342,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["user",{"_index":190,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["usevalue",{"_index":251,"title":{},"body":{"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{}}}],["using",{"_index":110,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["validator",{"_index":229,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"classes/ShoppingCartUpdateDto.html":{},"dependencies.html":{}}}],["value",{"_index":99,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"miscellaneous/enumerations.html":{}}}],["very",{"_index":257,"title":{},"body":{"modules/ProductsModule.html":{}}}],["void",{"_index":377,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["warehouse",{"_index":226,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["watch",{"_index":520,"title":{},"body":{"index.html":{}}}],["world",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":255,"title":{},"body":{"modules/ProductsModule.html":{}}}],["y",{"_index":262,"title":{},"body":{"modules/ProductsModule.html":{}}}],["z",{"_index":267,"title":{},"body":{"modules/ProductsModule.html":{}}}],["zoom",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Main app controller, base route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n                    Test function\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n/**\n * Main app controller, base route\n */\n@Controller()\nexport class AppController {\n  /**\n   * AppController\n   * @param appService\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Test function\n   * @returns {string}\n   */\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nShoppingCartModule\n\nShoppingCartModule\n\nAppModule -->\n\nShoppingCartModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                        \n                            ShoppingCartModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProductsModule } from './products/products.module';\nimport { ShoppingCartModule } from './shopping-cart/shopping-cart.module';\n\n@Module({\n  imports: [ProductsModule, ShoppingCartModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                resolves main app routes\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:12\n                \n            \n\n\n            \n                \n                    Test function\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * resolves main app routes\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Test function\n   * @returns {string}\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrenciesService.html":{"url":"injectables/CurrenciesService.html","title":"injectable - CurrenciesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CurrenciesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/currencies.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for fetches current exchange rates and converting currencies\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseCurrency\n                            \n                            \n                                    Private\n                                exchageRatesLastSync\n                            \n                            \n                                    Private\n                                exchangeRatesCache\n                            \n                            \n                                    Private\n                                    Readonly\n                                ONE_HOUR\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                convert\n                            \n                            \n                                    Private\n                                    Async\n                                getCurrentRates\n                            \n                            \n                                    Private\n                                    Async\n                                getExchangeRates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, exchangeRatesApiUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/shopping-cart/currencies.service.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exchangeRatesApiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(from: string, to: string, value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/currencies.service.ts:53\n                \n            \n\n\n            \n                \n                    Converts given value from one currency to another\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getCurrentRates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentRates()\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/currencies.service.ts:83\n                \n            \n\n\n            \n                \n                    Fetches current exchange rates from external source\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getExchangeRates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getExchangeRates()\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/currencies.service.ts:69\n                \n            \n\n\n            \n                \n                    Resolves exchange rates using cache if data is fresh (one hour)\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseCurrency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:22\n                            \n                        \n\n                \n                    \n                        Base currency for exchange calculations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            exchageRatesLastSync\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:18\n                            \n                        \n\n                \n                    \n                        Date of last exchange rates update\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            exchangeRatesCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:27\n                            \n                        \n\n                \n                    \n                        Current exchange rates storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            ONE_HOUR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 60 * 60 * 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:33\n                            \n                        \n\n                \n                    \n                        Helper - 1 hour in milliseconds\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpService,\n  Inject,\n  Injectable,\n  ServiceUnavailableException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { ExternalExchangeRates } from './interfaces/external-exchange-rates.interface';\n\n/**\n * Responsible for fetches current exchange rates and converting currencies\n */\n@Injectable()\nexport class CurrenciesService {\n  /**\n   * Date of last exchange rates update\n   */\n  private exchageRatesLastSync: Date;\n  /**\n   * Base currency for exchange calculations\n   */\n  private baseCurrency: string;\n  /**\n   * Current exchange rates storage\n   * @type {Map}\n   */\n  private exchangeRatesCache = new Map();\n\n  /**\n   * Helper - 1 hour in milliseconds\n   * @type {number}\n   */\n  private readonly ONE_HOUR = 60 * 60 * 1000;\n\n  /**\n   * Constructor\n   * @param httpService\n   * @param exchangeRatesApiUrl\n   */\n  constructor(\n    private readonly httpService: HttpService,\n    @Inject('EXCHANGE_RATES_API_URL')\n    private readonly exchangeRatesApiUrl: string,\n  ) {}\n\n  /**\n   * Converts given value from one currency to another\n   * @param from\n   * @param to\n   * @param value\n   * @returns {Promise}\n   */\n  async convert(from: string, to: string, value: number) {\n    const exchangeRates = await this.getExchangeRates();\n    const fromRate = exchangeRates.get(from);\n    const toRate = exchangeRates.get(to);\n\n    if (!fromRate || !toRate) {\n      throw new UnprocessableEntityException('Not supported currency');\n    }\n\n    return value * (toRate / fromRate);\n  }\n\n  /**\n   * Resolves exchange rates using cache if data is fresh (one hour)\n   * @returns {Promise>}\n   */\n  private async getExchangeRates() {\n    if (\n      !this.exchageRatesLastSync ||\n      Date.now() - this.exchageRatesLastSync.getTime() > this.ONE_HOUR\n    ) {\n      return this.getCurrentRates();\n    }\n    return this.exchangeRatesCache;\n  }\n\n  /**\n   * Fetches current exchange rates from external source\n   * @returns {Promise>}\n   */\n  private async getCurrentRates() {\n    const externalExchangeRates = await this.httpService\n      .get(this.exchangeRatesApiUrl)\n      .toPromise();\n\n    if (externalExchangeRates.status !== 200) {\n      throw new ServiceUnavailableException();\n    }\n\n    this.baseCurrency = externalExchangeRates.data.base;\n    this.exchageRatesLastSync = new Date();\n\n    const currencyNames = Object.keys(externalExchangeRates.data.rates);\n    this.exchangeRatesCache = currencyNames.reduce(\n      (currenciesMap, currencyName) => {\n        currenciesMap.set(\n          currencyName,\n          externalExchangeRates.data.rates[currencyName],\n        );\n        return currenciesMap;\n      },\n      new Map([[this.baseCurrency, 1]]),\n    );\n\n    return this.exchangeRatesCache;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailedProductListItem.html":{"url":"interfaces/DetailedProductListItem.html","title":"interface - DetailedProductListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailedProductListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents detailed product info for shopping cart checkout\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        originalPrice\n                                \n                                \n                                        quantity\n                                \n                                \n                                        requestedCurrencyPrice\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    product description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalPrice\n                                    \n                                \n                                \n                                    \n                                        originalPrice:         ProductPriceWithTotal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductPriceWithTotal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product price in original currency (as added to database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product quantity added to shopping cart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestedCurrencyPrice\n                                    \n                                \n                                \n                                    \n                                        requestedCurrencyPrice:         ProductPriceWithTotal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductPriceWithTotal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product price in requested by user currency\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExternalExchangeRates.html":{"url":"interfaces/ExternalExchangeRates.html","title":"interface - ExternalExchangeRates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExternalExchangeRates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/external-exchange-rates.interface.ts\n        \n\n            \n                Description\n            \n            \n                External source data structure for exchange rates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        base\n                                \n                                \n                                        date\n                                \n                                \n                                        rates\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base\n                                    \n                                \n                                \n                                    \n                                        base:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base currency, required for exchange calculations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of exchange rates update\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rates\n                                    \n                                \n                                \n                                    \n                                        rates:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    map of pairs currency - value in reference to base currency\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ExternalExchangeRates {\n  /**\n   * map of pairs currency - value in reference to base currency\n   */\n  rates: { [key: string]: number };\n  /**\n   * Base currency, required for exchange calculations\n   */\n  base: string;\n  /**\n   * Date of exchange rates update\n   */\n  date: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderCheckoutDto.html":{"url":"interfaces/OrderCheckoutDto.html","title":"interface - OrderCheckoutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderCheckoutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                order checkout representation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        detailedProductsList\n                                \n                                \n                                        shoppingCartId\n                                \n                                \n                                        totalPrice\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detailedProductsList\n                                    \n                                \n                                \n                                    \n                                        detailedProductsList:         DetailedProductListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DetailedProductListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    list of products added to shopping cart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shoppingCartId\n                                    \n                                \n                                \n                                    \n                                        shoppingCartId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    related shopping cart id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                    \n                                \n                                \n                                    \n                                        totalPrice:         TotalPrice\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TotalPrice\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    total price of shopping cart in requested currency\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDto.html":{"url":"classes/ProductDto.html","title":"class - ProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/product.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:31\n                            \n                        \n\n                \n                    \n                        optional product description\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:11\n                            \n                        \n\n                \n                    \n                        product id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:16\n                            \n                        \n\n                \n                    \n                        product name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductPriceDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:20\n                            \n                        \n\n                \n                    \n                        product price - currency and value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:26\n                            \n                        \n\n                \n                    \n                        product quantity available in warehouse\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString, Min } from 'class-validator';\n\nexport class ProductDto {\n  /**\n   * product id\n   */\n  @IsString()\n  id: string;\n  /**\n   * product name\n   */\n  @IsString()\n  name: string;\n  /**\n   * product price - currency and value\n   */\n  price: ProductPriceDto;\n  /**\n   * product quantity available in warehouse\n   */\n  @IsInt()\n  @Min(0)\n  quantity: number;\n  /**\n   * optional product description\n   */\n  @IsString()\n  description?: string;\n}\n\n/**\n * Represents product price (value and currency)\n */\nexport interface ProductPriceDto {\n  /**\n   * Product value\n   */\n  value: number;\n  /**\n   * Determinates in what currency product is stored in database\n   */\n  currency: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductPriceDto.html":{"url":"interfaces/ProductPriceDto.html","title":"interface - ProductPriceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProductPriceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/product.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents product price (value and currency)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currency\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determinates in what currency product is stored in database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Product value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IsInt, IsString, Min } from 'class-validator';\n\nexport class ProductDto {\n  /**\n   * product id\n   */\n  @IsString()\n  id: string;\n  /**\n   * product name\n   */\n  @IsString()\n  name: string;\n  /**\n   * product price - currency and value\n   */\n  price: ProductPriceDto;\n  /**\n   * product quantity available in warehouse\n   */\n  @IsInt()\n  @Min(0)\n  quantity: number;\n  /**\n   * optional product description\n   */\n  @IsString()\n  description?: string;\n}\n\n/**\n * Represents product price (value and currency)\n */\nexport interface ProductPriceDto {\n  /**\n   * Product value\n   */\n  value: number;\n  /**\n   * Determinates in what currency product is stored in database\n   */\n  currency: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductPriceWithTotal.html":{"url":"interfaces/ProductPriceWithTotal.html","title":"interface - ProductPriceWithTotal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProductPriceWithTotal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents product price (value and currency) and total value (value multiplied by quantity)\n\n            \n\n            \n                Extends\n            \n            \n                        ProductPriceDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents products total value (value multiplied by quantity)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n            \n                Description\n            \n            \n                Controller responsible for /products route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:20\n                \n            \n\n\n            \n                \n                    Returns all available products\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ProductsService } from './products.service';\n\n/**\n * Controller responsible for /products route\n */\n@Controller('products')\nexport class ProductsController {\n  /**\n   * Constructor\n   * @param productsService\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns all available products\n   * @returns {Promise}\n   */\n  @Get()\n  findAll() {\n    return this.productsService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService \n\nProductsService \n\n\n\nProductsModule\n\nProductsModule\n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\nimport { ProductDto } from './interfaces/product.dto';\nimport { plainToClass } from 'class-transformer';\n\n@Module({\n  controllers: [ProductsController],\n  providers: [\n    ProductsService,\n    {\n      provide: 'PRODUCTS',\n      useValue: [\n        plainToClass(ProductDto, {\n          id: 'p1',\n          name: 'Item X',\n          quantity: 10,\n          description: 'Very nice item X',\n          price: {\n            value: 15,\n            currency: 'EUR',\n          },\n        }),\n        plainToClass(ProductDto, {\n          id: 'p2',\n          name: 'Item Y',\n          quantity: 4,\n          description: 'Awsome item Y',\n          price: {\n            value: 4,\n            currency: 'PLN',\n          },\n        }),\n        plainToClass(ProductDto, {\n          id: 'p3',\n          name: 'Item Z',\n          quantity: 1,\n          price: {\n            value: 150,\n            currency: 'EUR',\n          },\n        }),\n      ],\n    },\n  ],\n  exports: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n            \n                Description\n            \n            \n                Service responsible for products resolving\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(products: ProductDto[])\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        products\n                                                  \n                                                        \n                                                                        ProductDto[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:19\n                \n            \n\n\n            \n                \n                    Resolves all products form database\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:37\n                \n            \n\n\n            \n                \n                    Returns selected product from database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByIds\n                        \n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:28\n                \n            \n\n\n            \n                \n                    Returns selected products from database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ProductDto } from './interfaces/product.dto';\n\n/**\n * Service responsible for products resolving\n */\n@Injectable()\nexport class ProductsService {\n  /**\n   * Constructor\n   * @param products\n   */\n  constructor(@Inject('PRODUCTS') private readonly products: ProductDto[]) {}\n\n  /**\n   * Resolves all products form database\n   * @returns {Promise}\n   */\n  async findAll() {\n    return Promise.resolve(this.products);\n  }\n\n  /**\n   * Returns selected products from database\n   * @param ids\n   * @returns {ProductDto[]}\n   */\n  findByIds(ids: string[]) {\n    return this.products.filter(product => ids.includes(product.id));\n  }\n\n  /**\n   * Returns selected product from database\n   * @param id\n   * @returns {ProductDto}\n   */\n  findById(id: string) {\n    return this.products.find(product => product.id === id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShoppingCartController.html":{"url":"controllers/ShoppingCartController.html","title":"controller - ShoppingCartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShoppingCartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/shopping-cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shopping-cart\n            \n\n            \n                Description\n            \n            \n                Controller responsible for /shopping-cart route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkout\n                            \n                            \n                                create\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkout\n                        \n                        \n                    \n                \n            \n            \n                \ncheckout(id: string, currency: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.controller.ts:54\n                \n            \n\n\n            \n                \n                    Allow to checkout selected shopping cart with optional requested currency, default EUR\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.controller.ts:29\n                \n            \n\n\n            \n                \n                    Creates shopping cart\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, shoppingCartUpdate: ShoppingCartUpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.controller.ts:40\n                \n            \n\n\n            \n                \n                    Allow to add and remove products from shopping cart\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingCartUpdate\n                                    \n                                                ShoppingCartUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { ShoppingCartUpdateDto } from './interfaces/shopping-cart-update.dto';\n\n/**\n * Controller responsible for /shopping-cart route\n */\n@Controller('shopping-cart')\nexport class ShoppingCartController {\n  /**\n   * Constructor\n   * @param shoppingCartService\n   */\n  constructor(private readonly shoppingCartService: ShoppingCartService) {}\n\n  /**\n   * Creates shopping cart\n   * @returns {string}\n   */\n  @Post()\n  create() {\n    return this.shoppingCartService.create();\n  }\n\n  /**\n   * Allow to add and remove products from shopping cart\n   * @param id\n   * @param shoppingCartUpdate\n   * @returns {ShoppingCartDto}\n   */\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() shoppingCartUpdate: ShoppingCartUpdateDto,\n  ) {\n    return this.shoppingCartService.update(id, shoppingCartUpdate);\n  }\n\n  /**\n   * Allow to checkout selected shopping cart with optional requested currency, default EUR\n   * @param id\n   * @param currency\n   * @returns {Promise}\n   */\n  @Get(':id')\n  checkout(@Param('id') id: string, @Query('currency') currency: string) {\n    return this.shoppingCartService.checkout(id, currency);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingCartDto.html":{"url":"classes/ShoppingCartDto.html","title":"class - ShoppingCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/shopping-cart.dto.ts\n        \n\n            \n                Description\n            \n            \n                represents shopping cart\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                productsList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart.dto.ts:8\n                            \n                        \n\n                \n                    \n                        shopping cart id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ShoppingCartProductListItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart.dto.ts:12\n                            \n                        \n\n                \n                    \n                        products added to shopping cart\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShoppingCartDto {\n  /**\n   * shopping cart id\n   */\n  id: string;\n  /**\n   * products added to shopping cart\n   */\n  productsList: ShoppingCartProductListItem[];\n}\n\n/**\n * representation of product and quantity in shopping cart\n */\nexport interface ShoppingCartProductListItem {\n  /**\n   * product id\n   */\n  productId: string;\n  /**\n   * product quantity in shopping cart\n   */\n  quantity: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShoppingCartModule.html":{"url":"modules/ShoppingCartModule.html","title":"module - ShoppingCartModule","body":"\n                   \n\n\n\n\n    Modules\n    ShoppingCartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShoppingCartModule\n\n\n\ncluster_ShoppingCartModule_imports\n\n\n\ncluster_ShoppingCartModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nShoppingCartModule\n\nShoppingCartModule\n\nShoppingCartModule -->\n\nProductsModule->ShoppingCartModule\n\n\n\n\n\nCurrenciesService\n\nCurrenciesService\n\nShoppingCartModule -->\n\nCurrenciesService->ShoppingCartModule\n\n\n\n\n\nShoppingCartService\n\nShoppingCartService\n\nShoppingCartModule -->\n\nShoppingCartService->ShoppingCartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shopping-cart/shopping-cart.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CurrenciesService\n                        \n                        \n                            ShoppingCartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ShoppingCartController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, HttpService, Module } from '@nestjs/common';\nimport { ShoppingCartController } from './shopping-cart.controller';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { ProductsModule } from '../products/products.module';\nimport { CurrenciesService } from './currencies.service';\nimport { AXIOS_INSTANCE_TOKEN } from '@nestjs/common/http/http.constants';\nimport axios from 'axios';\n\n@Module({\n  imports: [ProductsModule, HttpModule],\n  controllers: [ShoppingCartController],\n  providers: [\n    ShoppingCartService,\n    CurrenciesService,\n    HttpService,\n    {\n      provide: 'EXCHANGE_RATES_API_URL',\n      useValue: 'https://api.exchangeratesapi.io/latest',\n    },\n    {\n      provide: AXIOS_INSTANCE_TOKEN,\n      useValue: axios,\n    },\n  ],\n})\nexport class ShoppingCartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCartProductListItem.html":{"url":"interfaces/ShoppingCartProductListItem.html","title":"interface - ShoppingCartProductListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ShoppingCartProductListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/shopping-cart.dto.ts\n        \n\n            \n                Description\n            \n            \n                representation of product and quantity in shopping cart\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        productId\n                                \n                                \n                                        quantity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product quantity in shopping cart\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export class ShoppingCartDto {\n  /**\n   * shopping cart id\n   */\n  id: string;\n  /**\n   * products added to shopping cart\n   */\n  productsList: ShoppingCartProductListItem[];\n}\n\n/**\n * representation of product and quantity in shopping cart\n */\nexport interface ShoppingCartProductListItem {\n  /**\n   * product id\n   */\n  productId: string;\n  /**\n   * product quantity in shopping cart\n   */\n  quantity: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/shopping-cart.service.ts\n        \n\n            \n                Description\n            \n            \n                Used for manage shopping carts\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                carts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addProductsToList\n                            \n                            \n                                    Private\n                                assertProduct\n                            \n                            \n                                    Private\n                                assertShoppingCart\n                            \n                            \n                                    Private\n                                    Async\n                                buildDetailedProductItem\n                            \n                            \n                                    Private\n                                calculateTotalRequestedPrice\n                            \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                create\n                            \n                            \n                                    Private\n                                removeProductsFromList\n                            \n                            \n                                update\n                            \n                            \n                                    Private\n                                updateCartList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductsService, currenciesService: CurrenciesService)\n                    \n                \n                        \n                            \n                                Defined in src/shopping-cart/shopping-cart.service.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currenciesService\n                                                  \n                                                        \n                                                                        CurrenciesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addProductsToList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductsToList(productsList: ShoppingCartProductListItem[], product: ProductDto, quantityToAdd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:229\n                \n            \n\n\n            \n                \n                    Add products to shopping cart list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsList\n                                    \n                                                ShoppingCartProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantityToAdd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:214\n                \n            \n\n\n            \n                \n                    Assert product\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProductDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertShoppingCart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertShoppingCart(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:201\n                \n            \n\n\n            \n                \n                    Assert shopping car\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ShoppingCartDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            buildDetailedProductItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildDetailedProductItem(product: ProductDto, quantity: number, requestedCurrency: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:146\n                \n            \n\n\n            \n                \n                    Create detailed product info for order checkout\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestedCurrency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateTotalRequestedPrice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTotalRequestedPrice(detailedProductsList: DetailedProductListItem[])\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:297\n                \n            \n\n\n            \n                \n                    Calculate total products price\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detailedProductsList\n                                    \n                                                DetailedProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkout(id: string, requestedCurrency: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:98\n                \n            \n\n\n            \n                \n                    Get summary of shopping cart\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    requestedCurrency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'EUR'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:48\n                \n            \n\n\n            \n                \n                    Create shopping cart\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeProductsFromList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeProductsFromList(productsList: ShoppingCartProductListItem[], productId: string, quantity: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:267\n                \n            \n\n\n            \n                \n                    Remove products from shopping cart list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsList\n                                    \n                                                ShoppingCartProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, shoppingCartUpdate: ShoppingCartUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:63\n                \n            \n\n\n            \n                \n                    Update shopping cart\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingCartUpdate\n                                    \n                                                ShoppingCartUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateCartList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCartList(cart: ShoppingCartDto, productsList: ShoppingCartProductListItem[])\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:186\n                \n            \n\n\n            \n                \n                    Update shopping cart products list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cart\n                                    \n                                                ShoppingCartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productsList\n                                    \n                                                ShoppingCartProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            carts\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/shopping-cart.service.ts:32\n                            \n                        \n\n                \n                    \n                        Storage for shopping carts\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport {\n  ShoppingCartDto,\n  ShoppingCartProductListItem,\n} from './interfaces/shopping-cart.dto';\nimport { ShoppingCartAction } from './interfaces/shopping-cart.action';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\nimport { ProductsService } from '../products/products.service';\nimport { ShoppingCartUpdateDto } from './interfaces/shopping-cart-update.dto';\nimport { ProductDto } from '../products/interfaces/product.dto';\nimport {\n  DetailedProductListItem,\n  OrderCheckoutDto,\n  ProductPriceWithTotal,\n  TotalPrice,\n} from './interfaces/order-checkout.dto';\nimport { CurrenciesService } from './currencies.service';\n\n/**\n * Used for manage shopping carts\n */\n@Injectable()\nexport class ShoppingCartService {\n  /**\n   * Storage for shopping carts\n   * @type {Map}\n   */\n  private readonly carts = new Map();\n\n  /**\n   * Constructor\n   * @param productsService\n   * @param currenciesService\n   */\n  constructor(\n    private readonly productsService: ProductsService,\n    private readonly currenciesService: CurrenciesService,\n  ) {}\n\n  /**\n   * Create shopping cart\n   * @returns {string}\n   */\n  create(): string {\n    const newShoppingCart = new ShoppingCartDto();\n    newShoppingCart.id = randomStringGenerator();\n    newShoppingCart.productsList = [];\n\n    this.carts.set(newShoppingCart.id, newShoppingCart);\n    return newShoppingCart.id;\n  }\n\n  /**\n   * Update shopping cart\n   * @param {string} id\n   * @param {ShoppingCartUpdateDto} shoppingCartUpdate\n   * @returns {ShoppingCartDto}\n   */\n  update(id: string, shoppingCartUpdate: ShoppingCartUpdateDto) {\n    const shoppingCart = this.assertShoppingCart(id);\n    const product = this.assertProduct(shoppingCartUpdate.productId);\n    let updatedProductsList: ShoppingCartProductListItem[];\n\n    switch (shoppingCartUpdate.action) {\n      case ShoppingCartAction.ADD:\n        updatedProductsList = this.addProductsToList(\n          shoppingCart.productsList,\n          product,\n          shoppingCartUpdate.quantity,\n        );\n        break;\n      case ShoppingCartAction.REMOVE:\n        updatedProductsList = this.removeProductsFromList(\n          shoppingCart.productsList,\n          shoppingCartUpdate.productId,\n          shoppingCartUpdate.quantity,\n        );\n        break;\n    }\n\n    if (updatedProductsList) {\n      this.updateCartList(shoppingCart, updatedProductsList);\n    }\n\n    return this.carts.get(id);\n  }\n\n  /**\n   * Get summary of shopping cart\n   * @param id\n   * @param requestedCurrency\n   * @returns {Promise}\n   */\n  async checkout(\n    id: string,\n    requestedCurrency = 'EUR',\n  ): Promise {\n    const shoppingCart = this.assertShoppingCart(id);\n    const insufficientQuantityProducts = [];\n\n    const detailedProductsList = await Promise.all(\n      shoppingCart.productsList.map(async productListItem => {\n        const product = this.assertProduct(productListItem.productId);\n\n        if (product.quantity }\n   */\n  private async buildDetailedProductItem(\n    product: ProductDto,\n    quantity: number,\n    requestedCurrency: string,\n  ): Promise {\n    let requestedCurrencyPrice: ProductPriceWithTotal;\n    const originalPrice: ProductPriceWithTotal = {\n      ...product.price,\n      total: quantity * product.price.value,\n    };\n\n    if (requestedCurrency !== product.price.currency) {\n      const singleItemPrice = await this.currenciesService.convert(\n        product.price.currency,\n        requestedCurrency,\n        product.price.value,\n      );\n      requestedCurrencyPrice = {\n        currency: requestedCurrency,\n        value: singleItemPrice,\n        total: quantity * singleItemPrice,\n      };\n    } else {\n      requestedCurrencyPrice = { ...originalPrice };\n    }\n\n    return {\n      name: product.name,\n      quantity,\n      description: product.description,\n      originalPrice,\n      requestedCurrencyPrice,\n    };\n  }\n\n  /**\n   * Update shopping cart products list\n   * @param cart\n   * @param productsList\n   */\n  private updateCartList(\n    cart: ShoppingCartDto,\n    productsList: ShoppingCartProductListItem[],\n  ) {\n    this.carts.set(cart.id, {\n      ...cart,\n      productsList,\n    });\n  }\n\n  /**\n   * Assert shopping car\n   * @param id\n   * @returns {ShoppingCartDto}\n   */\n  private assertShoppingCart(id: string): ShoppingCartDto {\n    const shoppingCart = this.carts.get(id);\n    if (!shoppingCart) {\n      throw new NotFoundException('Shopping cart not found');\n    }\n    return shoppingCart;\n  }\n\n  /**\n   * Assert product\n   * @param productId\n   * @returns {ProductDto}\n   */\n  private assertProduct(productId: string): ProductDto {\n    const product = this.productsService.findById(productId);\n    if (!product) {\n      throw new UnprocessableEntityException('Product not found');\n    }\n    return product;\n  }\n\n  /**\n   * Add products to shopping cart list\n   * @param productsList\n   * @param product\n   * @param quantityToAdd\n   * @returns {ShoppingCartProductListItem[]}\n   */\n  private addProductsToList(\n    productsList: ShoppingCartProductListItem[],\n    product: ProductDto,\n    quantityToAdd: number,\n  ) {\n    const updatedProductsList = [...productsList];\n    const productIndex = updatedProductsList.findIndex(\n      productListItem => productListItem.productId === product.id,\n    );\n    let combinedQuantity: number;\n    if (productIndex !== -1) {\n      combinedQuantity =\n        updatedProductsList[productIndex].quantity + quantityToAdd;\n      updatedProductsList[productIndex].quantity = combinedQuantity;\n    } else {\n      combinedQuantity = quantityToAdd;\n      updatedProductsList.push({\n        productId: product.id,\n        quantity: combinedQuantity,\n      });\n    }\n\n    if (product.quantity  {\n        if (productListItem.productId === productId) {\n          productListItem.quantity =\n            productListItem.quantity > quantity\n              ? productListItem.quantity - quantity\n              : 0;\n          if (productListItem.quantity > 0) {\n            return newList.concat(productListItem);\n          }\n        }\n        return newList;\n      },\n      [],\n    );\n  }\n\n  /**\n   * Calculate total products price\n   * @param detailedProductsList\n   * @returns {number}\n   */\n  private calculateTotalRequestedPrice(\n    detailedProductsList: DetailedProductListItem[],\n  ): number {\n    return detailedProductsList.reduce((sum, item) => {\n      return sum + item.requestedCurrencyPrice.total;\n    }, 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingCartUpdateDto.html":{"url":"classes/ShoppingCartUpdateDto.html","title":"class - ShoppingCartUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingCartUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/shopping-cart-update.dto.ts\n        \n\n            \n                Description\n            \n            \n                data transfer object for shopping cart update\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ShoppingCartAction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(ShoppingCartAction)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart-update.dto.ts:13\n                            \n                        \n\n                \n                    \n                        defines if products should be added or removed from cart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart-update.dto.ts:19\n                            \n                        \n\n                \n                    \n                        represents selected product\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(undefined)@IsInt()@Min(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart-update.dto.ts:28\n                            \n                        \n\n                \n                    \n                        product add/remove quantity change\nAuto transform to number if possible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ShoppingCartAction } from './shopping-cart.action';\nimport { IsEnum, IsInt, IsString, Min } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\n/**\n * data transfer object for shopping cart update\n */\nexport class ShoppingCartUpdateDto {\n  /**\n   * defines if products should be added or removed from cart\n   */\n  @IsEnum(ShoppingCartAction)\n  action: ShoppingCartAction;\n\n  /**\n   * represents selected product\n   */\n  @IsString()\n  productId: string;\n\n  /**\n   * product add/remove quantity change\n   * Auto transform to number if possible\n   */\n  @Transform(quantity => +quantity)\n  @IsInt()\n  @Min(1)\n  quantity: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TotalPrice.html":{"url":"interfaces/TotalPrice.html","title":"interface - TotalPrice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TotalPrice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents shopping cart total value and currency\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currency\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    money currency\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    money value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/interfaces/product.dto.ts\n            \n            class\n            ProductDto\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/products/interfaces/product.dto.ts\n            \n            interface\n            ProductPriceDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/shopping-cart/currencies.service.ts\n            \n            injectable\n            CurrenciesService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/external-exchange-rates.interface.ts\n            \n            interface\n            ExternalExchangeRates\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            DetailedProductListItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            OrderCheckoutDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            ProductPriceWithTotal\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            TotalPrice\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/shopping-cart-update.dto.ts\n            \n            class\n            ShoppingCartUpdateDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/shopping-cart.dto.ts\n            \n            class\n            ShoppingCartDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/shopping-cart.dto.ts\n            \n            interface\n            ShoppingCartProductListItem\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/shopping-cart/shopping-cart.controller.ts\n            \n            controller\n            ShoppingCartController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (13/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            axios : ^0.19.2\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ShoppingCartAction   (src/.../shopping-cart.action.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shopping-cart/interfaces/shopping-cart.action.ts\n    \n        \n            \n                \n                    \n                        \n                        ShoppingCartAction\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                Value : add\n                            \n                        \n                        \n                            \n                                 REMOVE\n                            \n                        \n                        \n                            \n                                Value : remove\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap app\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nFlip Shop\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShoppingCartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ShoppingCartModule\n\n\n\ncluster_ShoppingCartModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nShoppingCartModule\n\nShoppingCartModule\n\nShoppingCartModule -->\n\nProductsModule->ShoppingCartModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAppModule -->\n\nShoppingCartModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nCurrenciesService\n\nCurrenciesService\n\nShoppingCartModule -->\n\nCurrenciesService->ShoppingCartModule\n\n\n\n\n\nShoppingCartService\n\nShoppingCartService\n\nShoppingCartModule -->\n\nShoppingCartService->ShoppingCartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
