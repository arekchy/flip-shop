var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.356,1,1.881]],["body/controllers/AppController.html",[0,2.436,1,3.21,2,1.647,3,0.39,4,0.33,5,0.33,6,3.021,7,0.452,8,3.852,9,2.915,10,3.316,11,3.316,12,0.39,13,2.101,14,4.467,15,2.286,16,0.038,17,1.227,18,3.66,19,3.316,20,3.316,21,2.101,22,0.928,23,0.943,24,1.113,25,2.7,26,3.021,27,0.39,28,0.39,29,1.491,30,2.6,31,2.035,32,1.647,33,3.66,34,0.023,35,0.029,36,0.023]],["title/modules/AppModule.html",[37,1.356,38,1.881]],["body/modules/AppModule.html",[1,3.163,2,2.059,3,0.378,4,0.32,5,0.32,16,0.038,23,1.119,24,1.079,25,2.829,26,2.929,27,0.378,28,0.378,34,0.022,35,0.028,36,0.022,37,2.279,38,3.719,39,1.771,40,1.771,41,2.216,42,2.216,43,1.771,44,3.163,45,2.216,46,2.929,47,2.929,48,2.929,49,2.829,50,3.152,51,2.858,52,2.216,53,2.216,54,3.548,55,3.777,56,3.548,57,2.929,58,1.079,59,1.973,60,3.548]],["title/injectables/AppService.html",[25,1.503,61,1.112]],["body/injectables/AppService.html",[3,0.416,4,0.352,5,0.352,7,0.483,8,4.013,9,3.037,12,0.416,13,2.188,14,4.573,16,0.038,17,1.309,19,3.454,20,3.454,21,2.188,22,0.957,23,0.789,24,1.187,25,2.426,27,0.416,28,0.416,32,1.758,34,0.024,35,0.03,36,0.024,61,1.796,62,2.172,63,3.224,64,3.454,65,4.862,66,3.906,67,3.906,68,3.906]],["title/injectables/CurrenciesService.html",[61,1.112,69,1.503]],["body/injectables/CurrenciesService.html",[3,0.185,4,0.305,5,0.157,7,0.214,10,1.941,12,0.185,13,1.23,16,0.039,17,1.611,21,1.996,22,0.933,23,0.552,24,0.527,27,0.185,28,0.185,29,1.7,31,2.321,32,1.879,34,0.011,35,0.017,36,0.011,61,1.009,62,0.964,64,1.941,69,1.363,70,1.112,71,1.432,72,1.707,73,3.837,74,4.434,75,3.785,76,4.181,77,2.732,78,2.732,79,0.753,80,4.028,81,3.381,82,3.381,83,3.381,84,3.381,85,3.515,86,2.732,87,3.837,88,3.837,89,1.914,90,1.734,91,3.831,92,3.837,93,2.732,94,1.519,95,0.831,96,0.896,97,1.23,98,2.732,99,1.504,100,1.057,101,1.734,102,1.941,103,2.732,104,3.837,105,1.269,106,2.732,107,1.734,108,2.256,109,1.734,110,2.732,111,2.732,112,1.941,113,2.732,114,3.837,115,1.734,116,2.256,117,3.446,118,1.734,119,2.732,120,1.519,121,1.941,122,2.77,123,2.402,124,1.734,125,2.256,126,3.837,127,2.732,128,2.732,129,2.402,130,2.732,131,1.432,132,2.732,133,1.432,134,1.707,135,1.734,136,1.734,137,1.734,138,1.88,139,3.446,140,1.734,141,2.256,142,1.734,143,3.381,144,1.734,145,3.381,146,1.734,147,2.256,148,1.734,149,1.734,150,2.732,151,1.734,152,1.734,153,1.734,154,1.734,155,3.381,156,1.734,157,1.734,158,1.734,159,1.734,160,1.734,161,1.734,162,1.734,163,1.734,164,1.734,165,1.734,166,1.734,167,1.734,168,1.734]],["title/interfaces/DetailedProductListItem.html",[169,0.484,170,1.356]],["body/interfaces/DetailedProductListItem.html",[3,0.44,4,0.217,5,0.217,7,0.642,12,0.257,16,0.039,22,0.962,23,0.487,27,0.484,34,0.015,35,0.022,36,0.015,58,1.619,70,0.542,79,0.966,95,1.531,96,0.975,97,1.578,99,1.619,100,1.33,105,1.651,169,0.729,170,1.861,171,0.981,172,1.34,173,1.34,174,1.965,175,1.95,176,1.735,177,1.785,178,2.063,179,2.525,180,1.619,181,2.525,182,2.339,183,2.051,184,2.19,185,2.172,186,1.578,187,2.299,188,2.19,189,1.428,190,1.34,191,2.683,192,2.19,193,1.505,194,0.966,195,1.861,196,2.19,197,1.34,198,1.202,199,1.084,200,1.505,201,0.664,202,1.505,203,1.34,204,1.34]],["title/interfaces/ExternalExchangeRates.html",[134,1.881,169,0.484]],["body/interfaces/ExternalExchangeRates.html",[3,0.366,4,0.404,5,0.31,7,0.424,10,4.123,12,0.366,16,0.038,22,1.034,27,0.366,34,0.021,35,0.028,36,0.021,70,0.772,75,3.992,76,4.724,79,1.234,96,1.107,99,1.362,100,0.946,105,1.708,108,2.834,112,2.439,116,3.697,117,4.638,120,2.49,123,3.182,134,2.797,169,0.551,171,1.398,205,2.834,206,2.834,207,3.433,208,4.478,209,4.478,210,4.478,211,4.478,212,3.433]],["title/interfaces/OrderCheckoutDto.html",[169,0.484,199,1.356]],["body/interfaces/OrderCheckoutDto.html",[3,0.388,4,0.229,5,0.229,7,0.527,12,0.271,16,0.039,22,0.927,23,0.513,27,0.496,34,0.016,35,0.022,36,0.016,58,1.673,70,0.571,79,1.004,95,1.108,96,0.861,99,1.643,100,1.174,105,1.643,169,0.747,170,2.095,171,1.035,172,1.413,173,1.413,174,1.896,175,1.413,176,1.606,177,1.844,178,2.126,179,1.413,180,1.415,181,1.413,182,1.918,183,2.007,184,1.587,185,2.095,186,1.144,187,2.369,188,1.587,189,1.484,190,1.413,191,2.851,192,2.276,193,1.587,194,1.174,195,2.432,196,2.276,197,2.026,198,1.818,199,1.64,200,2.276,201,1.004,202,2.907,203,2.026,204,2.588]],["title/classes/ProductDto.html",[28,0.321,213,1.356]],["body/classes/ProductDto.html",[3,0.297,4,0.251,5,0.251,7,0.653,12,0.297,16,0.038,17,1.77,22,0.98,27,0.414,28,0.297,29,1.134,34,0.017,35,0.024,36,0.017,79,1.071,89,1.389,94,1.548,95,1.606,96,1.067,97,2.295,99,1.551,100,1.234,102,2.762,105,1.551,169,0.447,174,1.583,176,1.79,180,1.551,183,2.152,186,1.253,189,1.824,201,1.405,213,2.182,214,1.739,215,1.978,216,3.182,217,2.784,218,3.209,219,3.697,220,3.887,221,3.209,222,3.209,223,2.762,224,3.697,225,2.784,226,2.784,227,2.784,228,2.784,229,3.209,230,2.298,231,2.298,232,2.298,233,2.298,234,2.298]],["title/interfaces/ProductPriceDto.html",[169,0.484,189,1.227]],["body/interfaces/ProductPriceDto.html",[3,0.334,4,0.283,5,0.283,7,0.589,12,0.334,16,0.039,22,0.99,27,0.449,28,0.334,29,1.278,34,0.019,35,0.026,36,0.019,79,1.162,95,1.283,96,0.852,97,1.412,99,1.753,100,1.405,102,2.229,105,1.753,169,0.504,171,1.278,174,1.718,176,1.787,180,1.283,183,2.076,186,1.899,189,1.941,201,1.162,213,1.899,215,2.229,216,2.229,218,2.589,219,2.589,221,2.589,222,2.589,223,2.229,224,3.482,229,2.589,230,2.589,231,2.589,232,2.589,233,3.482,234,3.482]],["title/interfaces/ProductPriceWithTotal.html",[169,0.484,182,1.356]],["body/interfaces/ProductPriceWithTotal.html",[3,0.396,4,0.236,5,0.236,7,0.535,12,0.279,16,0.039,22,0.852,23,0.528,27,0.502,34,0.016,35,0.023,36,0.016,58,1.574,70,0.588,79,1.025,95,1.131,96,0.528,99,1.76,100,1.373,105,1.655,169,0.757,170,1.674,171,1.065,172,1.454,173,1.454,174,2.109,175,1.454,176,1.655,177,1.735,178,1.856,179,1.454,180,1.574,181,1.454,182,2.122,183,2.029,184,1.633,185,1.948,186,1.177,187,2.068,188,1.633,189,1.763,190,1.454,191,3.124,192,2.945,193,2.323,194,1.193,195,1.948,196,2.323,197,1.454,198,1.305,199,1.177,200,1.633,201,0.721,202,1.633,203,1.454,204,1.454]],["title/controllers/ProductsController.html",[0,1.356,235,1.881]],["body/controllers/ProductsController.html",[0,2.313,2,1.647,3,0.39,4,0.33,5,0.33,7,0.452,11,3.316,12,0.39,13,2.101,15,2.286,16,0.038,17,1.227,21,2.436,23,0.943,24,1.113,27,0.39,28,0.39,29,1.491,30,2.6,32,1.647,34,0.023,35,0.029,36,0.023,72,2.915,89,1.826,138,2.035,194,1.54,216,3.316,235,2.915,236,3.021,237,3.021,238,4.467,239,3.66,240,2.436,241,3.021,242,3.66,243,3.66]],["title/modules/ProductsModule.html",[37,1.356,49,1.503]],["body/modules/ProductsModule.html",[2,1.858,3,0.324,4,0.274,5,0.274,7,0.51,16,0.038,23,1.017,24,0.924,27,0.324,28,0.324,34,0.019,35,0.025,36,0.019,37,2.111,39,1.516,40,1.516,41,1.898,42,1.898,43,1.516,44,2.929,45,2.929,49,2.77,51,2.579,52,1.898,53,1.898,95,1.426,99,1.426,105,1.426,122,2.929,129,2.159,180,1.426,183,1.91,194,0.837,201,1.292,213,2.265,235,2.929,240,2.651,241,2.508,244,2.508,245,2.508,246,2.508,247,3.039,248,3.039,249,2.508,250,2.508,251,2.508,252,3.039,253,4.343,254,4.129,255,3.039,256,3.039,257,3.039,258,3.039,259,2.933,260,3.039,261,4.129,262,3.408,263,3.039,264,3.039,265,3.039,266,3.039,267,3.039]],["title/injectables/ProductsService.html",[61,1.112,240,1.356]],["body/injectables/ProductsService.html",[3,0.294,4,0.249,5,0.249,7,0.342,12,0.294,13,1.741,16,0.039,17,1.62,21,2.558,22,0.952,23,0.782,24,0.84,27,0.294,28,0.294,29,1.817,31,1.537,32,2.008,34,0.017,35,0.024,36,0.017,61,1.429,62,1.537,64,2.748,72,2.416,80,1.964,85,3.17,89,2.226,94,2.481,95,1.357,96,0.902,97,2.008,131,2.282,138,1.537,176,1.357,186,2.372,194,1.546,201,1.229,213,2.372,238,3.989,240,1.741,249,2.282,268,2.282,269,3.868,270,3.868,271,3.868,272,3.868,273,2.764,274,2.764,275,2.764,276,3.868,277,3.868,278,2.764,279,3.434,280,3.868,281,2.764,282,3.868,283,2.764,284,2.764,285,2.764,286,2.764,287,2.764,288,2.764,289,2.282]],["title/controllers/ShoppingCartController.html",[0,1.356,290,1.881]],["body/controllers/ShoppingCartController.html",[0,1.881,2,1.105,3,0.262,4,0.222,5,0.222,7,0.303,11,2.526,12,0.262,13,1.6,15,2.61,16,0.038,17,1.4,21,2.281,22,1.001,23,0.844,24,0.746,27,0.262,28,0.262,29,2.064,30,1.744,31,1.365,32,1.881,34,0.015,35,0.022,36,0.015,58,1.684,59,2.547,70,1.03,72,2.22,89,1.225,94,1.977,95,1.081,96,0.718,97,2.062,105,1.589,120,2.324,121,2.526,138,1.365,177,1.88,178,2.286,187,1.977,194,0.98,201,1.397,237,2.027,259,2.526,279,2.526,290,2.22,291,2.027,292,3.781,293,2.027,294,3.555,295,2.455,296,4.581,297,4.179,298,2.455,299,3.555,300,2.027,301,4.013,302,2.547,303,3.555,304,2.455,305,2.526,306,2.526,307,3.555,308,2.455,309,2.455,310,2.455,311,2.455,312,2.286,313,2.027,314,2.027,315,2.027,316,2.455,317,2.455,318,1.225,319,2.455,320,2.455,321,2.455,322,2.455,323,2.455]],["title/classes/ShoppingCartDto.html",[28,0.321,318,1.503]],["body/classes/ShoppingCartDto.html",[3,0.373,4,0.316,5,0.316,7,0.433,12,0.373,16,0.038,17,1.521,22,0.91,27,0.484,28,0.373,34,0.022,35,0.028,36,0.022,58,1.749,70,1.132,79,1.251,96,0.917,100,0.966,169,0.563,174,1.428,176,1.531,177,1.927,180,1.531,185,2.043,194,1.251,198,1.749,201,1.557,214,2.19,318,2.265,324,2.8,325,2.491,326,3.577,327,3.505,328,2.8,329,3.505,330,2.19]],["title/modules/ShoppingCartModule.html",[37,1.356,50,1.675]],["body/modules/ShoppingCartModule.html",[2,1.948,3,0.347,4,0.294,5,0.294,16,0.038,23,1.142,24,0.991,27,0.347,28,0.347,34,0.02,35,0.027,36,0.02,37,2.187,39,1.627,40,1.627,41,2.036,42,2.036,43,1.627,44,3.035,45,2.036,49,2.764,50,3.262,51,2.704,52,2.036,53,2.036,55,3.573,57,2.691,58,1.316,59,1.813,69,2.764,70,0.733,91,3.573,250,3.573,251,3.573,290,3.035,312,2.764,313,2.691,331,2.691,332,3.26,333,2.691,334,3.26,335,4.328,336,3.26,337,2.691,338,4.328,339,3.26,340,4.011,341,3.26,342,3.26]],["title/interfaces/ShoppingCartProductListItem.html",[169,0.484,328,1.675]],["body/interfaces/ShoppingCartProductListItem.html",[3,0.377,4,0.319,5,0.319,7,0.437,12,0.377,16,0.038,22,0.965,27,0.486,28,0.377,34,0.022,35,0.028,36,0.022,58,1.722,70,0.795,79,1.258,96,0.923,100,1.393,169,0.568,171,1.441,176,1.722,177,1.898,180,1.776,185,1.592,194,0.975,198,2.278,201,1.472,318,1.765,324,1.967,325,2.513,326,2.513,328,2.812,330,3.338]],["title/injectables/ShoppingCartService.html",[61,1.112,312,1.503]],["body/injectables/ShoppingCartService.html",[3,0.196,4,0.097,5,0.097,7,0.227,12,0.114,13,0.826,16,0.039,17,1.522,21,2.238,22,0.962,23,0.835,24,0.325,27,0.114,28,0.114,29,1.931,31,1.788,32,1.861,34,0.007,35,0.011,36,0.007,58,1.512,59,2.584,61,0.678,62,0.595,69,1.975,70,1.045,79,0.506,80,3.81,85,2.492,89,1.426,94,2.385,95,1.345,96,0.894,97,1.93,99,0.733,100,1.251,105,0.325,120,2.086,121,1.304,122,2.008,123,1.712,125,1.515,129,0.761,133,0.884,138,1.788,139,3.835,141,1.515,147,1.515,170,1.286,175,0.595,176,1.441,177,1.643,178,1.426,179,1.34,180,1.345,181,1.589,182,1.085,183,0.748,190,0.595,191,1.589,194,1.034,195,0.482,197,0.595,199,0.482,201,1.091,203,1.788,204,1.34,213,1.93,240,1.688,253,0.884,259,1.304,289,1.515,292,3.097,293,0.884,300,0.884,301,2.358,302,1.788,305,1.304,306,0.761,312,0.916,314,1.989,315,0.884,318,2.063,326,2.938,328,2.459,330,2.191,337,0.884,343,0.884,344,1.836,345,1.836,346,3.751,347,1.836,348,1.836,349,1.836,350,1.836,351,1.836,352,1.836,353,1.836,354,1.07,355,1.836,356,1.836,357,3.507,358,1.07,359,1.836,360,1.07,361,2.857,362,1.836,363,1.07,364,1.836,365,1.836,366,4.288,367,1.07,368,1.836,369,1.07,370,1.836,371,1.07,372,1.836,373,1.07,374,1.07,375,1.07,376,1.07,377,1.836,378,1.07,379,1.07,380,1.07,381,1.07,382,0.761,383,0.884,384,1.836,385,1.07,386,1.07,387,1.07,388,1.07,389,1.07,390,1.836,391,1.836,392,1.07,393,1.07,394,3.215,395,1.836,396,1.07,397,3.507,398,1.07,399,1.07,400,1.836,401,1.07,402,1.07,403,1.836,404,1.836,405,1.07,406,1.07,407,1.07,408,1.07,409,1.836,410,1.07,411,1.07,412,1.07,413,1.07,414,1.07,415,1.836,416,1.07,417,1.836,418,1.07,419,2.41,420,1.07,421,1.07,422,1.07,423,1.07,424,1.07,425,1.836,426,1.07,427,1.07,428,1.836,429,1.07,430,1.836,431,3.215,432,1.836,433,1.07,434,2.857,435,2.41,436,1.07,437,1.07,438,1.07,439,1.07,440,1.07]],["title/classes/ShoppingCartUpdateDto.html",[28,0.321,302,1.675]],["body/classes/ShoppingCartUpdateDto.html",[3,0.32,4,0.271,5,0.271,7,0.372,12,0.32,15,2.914,16,0.038,17,1.563,22,0.741,23,0.942,27,0.32,28,0.497,34,0.019,35,0.025,36,0.019,58,1.418,70,1.126,79,1.13,96,0.942,100,1.38,112,2.913,120,2.28,174,1.67,176,1.523,177,1.888,180,1.645,185,1.845,194,1.13,214,1.878,223,2.913,279,2.913,302,2.28,324,2.786,330,2.914,382,3.314,383,2.482,441,2.482,442,4.1,443,4.664,444,4.1,445,3.007,446,4.1,447,4.1,448,4.664,449,3.007,450,3.007,451,3.007,452,4.1,453,4.1,454,4.1,455,4.664,456,4.1,457,3.007,458,4.1,459,2.482,460,2.482,461,3.007]],["title/interfaces/TotalPrice.html",[169,0.484,195,1.356]],["body/interfaces/TotalPrice.html",[3,0.398,4,0.237,5,0.237,7,0.536,12,0.28,16,0.039,22,0.937,23,0.531,27,0.503,34,0.016,35,0.023,36,0.016,58,1.622,70,0.591,79,1.028,95,1.135,96,0.754,99,1.761,100,1.375,105,1.746,169,0.759,170,1.68,171,1.07,172,1.461,173,1.461,174,2.033,175,1.461,176,1.622,177,1.787,178,1.862,179,1.461,180,1.437,181,1.461,182,1.953,183,1.925,184,1.641,185,1.953,186,1.182,187,2.075,188,1.641,189,1.52,190,1.461,191,2.883,192,2.331,193,1.641,194,1.028,195,2.127,196,2.951,197,1.461,198,1.311,199,1.182,200,1.641,201,0.724,202,1.641,203,1.461,204,1.461]],["title/coverage.html",[462,2.916]],["body/coverage.html",[0,2.116,1,1.908,5,0.276,6,2.521,16,0.038,20,2.17,25,1.524,28,0.501,34,0.019,35,0.026,36,0.019,43,1.524,59,2.304,61,1.862,63,2.521,69,1.524,70,1.315,71,2.521,75,2.17,96,0.617,122,1.908,134,1.908,169,0.893,170,1.375,172,2.804,173,2.804,177,1.024,182,1.375,189,1.244,195,1.375,199,1.375,205,2.521,206,2.521,213,1.375,215,2.944,235,1.908,236,2.521,240,1.375,268,2.521,290,1.908,291,2.521,302,1.699,312,1.524,318,1.524,324,2.615,325,2.944,328,1.699,343,2.521,441,2.521,462,2.17,463,3.055,464,3.055,465,3.055,466,6.065,467,5.042,468,2.521,469,3.055,470,3.055,471,5.042,472,3.055,473,3.055,474,5.042,475,3.055,476,3.055,477,3.055,478,3.055]],["title/dependencies.html",[40,1.807,479,2.518]],["body/dependencies.html",[16,0.038,24,1.296,28,0.546,34,0.026,35,0.032,36,0.026,40,2.127,340,3.519,459,3.519,460,3.519,480,5.503,481,4.263,482,4.263,483,4.263,484,4.263,485,4.263,486,4.263,487,4.263,488,4.263,489,4.263,490,4.263,491,4.263,492,4.263,493,4.263]],["title/miscellaneous/enumerations.html",[494,1.573,495,2.989]],["body/miscellaneous/enumerations.html",[12,0.479,16,0.036,34,0.028,35,0.033,36,0.028,70,1.01,99,1.609,305,3.761,306,3.761,324,2.499,382,3.761,494,2.807,495,3.709,496,4.494,497,5.293]],["title/miscellaneous/functions.html",[494,1.573,498,2.989]],["body/miscellaneous/functions.html",[9,2.896,12,0.494,16,0.033,34,0.029,35,0.033,36,0.029,43,2.928,468,3.828,494,2.896,498,3.828,499,4.637]],["title/index.html",[12,0.268,500,2.518,501,2.518]],["body/index.html",[4,0.313,7,0.428,9,2.164,16,0.037,19,3.2,34,0.021,35,0.028,36,0.021,462,2.461,502,3.464,503,3.464,504,4.504,505,3.464,506,3.464,507,3.464,508,3.464,509,3.464,510,3.464,511,3.464,512,3.464,513,3.464,514,5.006,515,3.464,516,3.464,517,3.464,518,3.464,519,5.735,520,3.464,521,3.464,522,5.632,523,3.464,524,3.464,525,4.504,526,3.464,527,3.464,528,3.464,529,3.464,530,4.504,531,3.464,532,3.464,533,3.464,534,4.504,535,4.504,536,3.464,537,3.464,538,3.464,539,3.464,540,3.464,541,2.859,542,3.464,543,3.464,544,3.464,545,3.464,546,3.464,547,3.464,548,3.464,549,3.464,550,3.464,551,3.464,552,3.464,553,3.464,554,3.464,555,3.464,556,3.464,557,3.464,558,3.464,559,3.464]],["title/modules.html",[39,2.048]],["body/modules.html",[16,0.033,34,0.028,35,0.033,36,0.028,38,2.829,39,2.26,49,2.26,50,2.518,541,4.66,560,5.645,561,5.645,562,5.645]],["title/overview.html",[563,3.388]],["body/overview.html",[2,1.642,16,0.037,25,2.56,34,0.022,35,0.029,36,0.022,37,1.642,38,3.671,39,1.82,40,1.82,41,2.279,42,2.279,43,1.82,44,2.279,45,2.279,46,3.012,47,3.012,48,3.012,49,2.896,50,3.3,51,2.909,52,2.279,53,2.279,62,2.029,69,2.56,171,1.486,214,2.279,240,2.613,244,3.012,245,3.012,246,3.012,262,3.012,312,2.56,331,3.012,333,3.012,563,3.012,564,5.131,565,3.648]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":435,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["0.1.13",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["0.11.1",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0.19.2",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":129,"title":{},"body":{"injectables/CurrenciesService.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{}}}],["1/1",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":255,"title":{},"body":{"modules/ProductsModule.html":{}}}],["100",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":127,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["13/13",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":258,"title":{},"body":{"modules/ProductsModule.html":{}}}],["150",{"_index":267,"title":{},"body":{"modules/ProductsModule.html":{}}}],["2/2",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":158,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["3",{"_index":564,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":262,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["4/4",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["6.5.4",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":126,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["7",{"_index":565,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["action",{"_index":443,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["add",{"_index":305,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["add/remove",{"_index":452,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["added",{"_index":185,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["addproductstolist",{"_index":347,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addproductstolist(productslist",{"_index":356,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["allow",{"_index":296,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["amazing",{"_index":542,"title":{},"body":{"index.html":{}}}],["angular",{"_index":513,"title":{},"body":{"index.html":{}}}],["another",{"_index":106,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["app",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":510,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":38,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assert",{"_index":361,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertproduct",{"_index":348,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertproduct(productid",{"_index":359,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertshoppingcart",{"_index":349,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertshoppingcart(id",{"_index":362,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["async",{"_index":85,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}}}],["author",{"_index":552,"title":{},"body":{"index.html":{}}}],["auto",{"_index":454,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["available",{"_index":216,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"controllers/ProductsController.html":{}}}],["await",{"_index":141,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["awsome",{"_index":263,"title":{},"body":{"modules/ProductsModule.html":{}}}],["axios",{"_index":340,"title":{},"body":{"modules/ShoppingCartModule.html":{},"dependencies.html":{}}}],["axios_instance_token",{"_index":338,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["backers",{"_index":543,"title":{},"body":{"index.html":{}}}],["base",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["basecurrency",{"_index":81,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["body",{"_index":307,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["bootstrap",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":404,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["browse",{"_index":562,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":560,"title":{},"body":{"modules.html":{}}}],["builddetailedproductitem",{"_index":350,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["builddetailedproductitem(product",{"_index":365,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["building",{"_index":505,"title":{},"body":{"index.html":{}}}],["cache",{"_index":111,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["calculate",{"_index":370,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculatetotalrequestedprice",{"_index":351,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculatetotalrequestedprice(detailedproductslist",{"_index":368,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculations",{"_index":116,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["car",{"_index":364,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":177,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["cart.action",{"_index":383,"title":{},"body":{"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["cart.action.ts",{"_index":497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cart.controller",{"_index":336,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["cart.controller.ts",{"_index":291,"title":{},"body":{"controllers/ShoppingCartController.html":{},"coverage.html":{}}}],["cart.controller.ts:23",{"_index":298,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["cart.controller.ts:34",{"_index":304,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["cart.controller.ts:48",{"_index":295,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["cart.dto",{"_index":381,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.dto.ts",{"_index":325,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"coverage.html":{}}}],["cart.dto.ts:12",{"_index":329,"title":{},"body":{"classes/ShoppingCartDto.html":{}}}],["cart.dto.ts:8",{"_index":327,"title":{},"body":{"classes/ShoppingCartDto.html":{}}}],["cart.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["cart.module.ts",{"_index":334,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["cart.service",{"_index":313,"title":{},"body":{"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{}}}],["cart.service.ts",{"_index":343,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:132",{"_index":367,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:164",{"_index":378,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:176",{"_index":363,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:189",{"_index":360,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:204",{"_index":358,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:233",{"_index":375,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:251",{"_index":369,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:26",{"_index":355,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:44",{"_index":373,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:59",{"_index":376,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:91",{"_index":371,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/currencies.service.ts",{"_index":71,"title":{},"body":{"injectables/CurrenciesService.html":{},"coverage.html":{}}}],["cart/currencies.service.ts:19",{"_index":118,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:23",{"_index":115,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:28",{"_index":124,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:34",{"_index":93,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:54",{"_index":101,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:70",{"_index":109,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:81",{"_index":107,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/interfaces/external",{"_index":205,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["cart/interfaces/order",{"_index":172,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["cart/interfaces/shopping",{"_index":324,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cart/shopping",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["carts",{"_index":346,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["case",{"_index":400,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["change",{"_index":453,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["checkout",{"_index":178,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["checkout(@param('id",{"_index":321,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["checkout(id",{"_index":293,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["checkout.dto",{"_index":389,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["checkout.dto.ts",{"_index":173,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["class",{"_index":28,"title":{"classes/ProductDto.html":{},"classes/ShoppingCartDto.html":{},"classes/ShoppingCartUpdateDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":214,"title":{},"body":{"classes/ProductDto.html":{},"classes/ShoppingCartDto.html":{},"classes/ShoppingCartUpdateDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":244,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":245,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":246,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_shoppingcartmodule",{"_index":331,"title":{},"body":{"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["cluster_shoppingcartmodule_imports",{"_index":332,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["cluster_shoppingcartmodule_providers",{"_index":333,"title":{},"body":{"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["combinedquantity",{"_index":431,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["const",{"_index":139,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["constructor",{"_index":89,"title":{},"body":{"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["constructor(@inject('products",{"_index":283,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(httpservice",{"_index":90,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["constructor(input",{"_index":218,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["constructor(private",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}}}],["constructor(products",{"_index":273,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(productsservice",{"_index":354,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{},"coverage.html":{}}}],["controller('products",{"_index":242,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('shopping",{"_index":316,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["convert",{"_index":86,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["convert(from",{"_index":98,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["converting",{"_index":77,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["converts",{"_index":102,"title":{},"body":{"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["coverage",{"_index":462,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":292,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["creates",{"_index":299,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["currencies",{"_index":78,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currencies.service",{"_index":337,"title":{},"body":{"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{}}}],["currenciesmap",{"_index":167,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currenciesmap.set(currencyname",{"_index":165,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currenciesservice",{"_index":69,"title":{"injectables/CurrenciesService.html":{}},"body":{"injectables/CurrenciesService.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{},"overview.html":{}}}],["currency",{"_index":105,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["currencyname",{"_index":164,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currencynames",{"_index":161,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currencynames.reduce((currenciesmap",{"_index":163,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["current",{"_index":74,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["data",{"_index":112,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["database",{"_index":186,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"interfaces/TotalPrice.html":{}}}],["date",{"_index":117,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["date.now",{"_index":151,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["declarations",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["default",{"_index":121,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["defines",{"_index":446,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["dependencies",{"_index":40,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"index.html":{}}}],["detailed",{"_index":175,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["detailedproductlistitem",{"_index":170,"title":{"interfaces/DetailedProductListItem.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["detailedproductslist",{"_index":204,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["detailedproductslist.reduce((sum",{"_index":438,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["determinates",{"_index":233,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["development",{"_index":521,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":531,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":506,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":495,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eur",{"_index":259,"title":{},"body":{"modules/ProductsModule.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["exchagerateslastsync",{"_index":82,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchange",{"_index":75,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["exchange_rates_api_url",{"_index":341,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["exchangerates",{"_index":140,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangerates.get(from",{"_index":144,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangerates.get(to",{"_index":146,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangeratesapiurl",{"_index":92,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangeratescache",{"_index":83,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["exports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["express",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":193,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["external",{"_index":108,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["externalexchangerates",{"_index":134,"title":{"interfaces/ExternalExchangeRates.html":{}},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["externalexchangerates.data.base",{"_index":160,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["externalexchangerates.data.rates[currencyname",{"_index":166,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["externalexchangerates.status",{"_index":157,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["fetches",{"_index":73,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["filter",{"_index":286,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findall",{"_index":238,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbyid",{"_index":271,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyid(id",{"_index":277,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyids",{"_index":272,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyids(ids",{"_index":280,"title":{},"body":{"injectables/ProductsService.html":{}}}],["form",{"_index":276,"title":{},"body":{"injectables/ProductsService.html":{}}}],["found",{"_index":425,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["framework",{"_index":504,"title":{},"body":{"index.html":{}}}],["fresh",{"_index":113,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["fromrate",{"_index":143,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["function",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["functions",{"_index":498,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator.util",{"_index":386,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["get(':id",{"_index":294,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["getcurrentrates",{"_index":87,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["getexchangerates",{"_index":88,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["gethello",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":500,"title":{"index.html":{}},"body":{}}],["given",{"_index":103,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["grow",{"_index":538,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":511,"title":{},"body":{"index.html":{}}}],["hello",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["helper",{"_index":128,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["here",{"_index":549,"title":{},"body":{"index.html":{}}}],["hour",{"_index":114,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["httpmodule",{"_index":335,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["https://api.exchangeratesapi.io/latest",{"_index":342,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["https://nestjs.com",{"_index":556,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":91,"title":{},"body":{"injectables/CurrenciesService.html":{},"modules/ShoppingCartModule.html":{}}}],["id",{"_index":201,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["identifier",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":282,"title":{},"body":{"injectables/ProductsService.html":{}}}],["ids.includes(product.id",{"_index":287,"title":{},"body":{"injectables/ProductsService.html":{}}}],["import",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingCartModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["inject",{"_index":131,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{}}}],["inject('exchange_rates_api_url",{"_index":137,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["injectable",{"_index":61,"title":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["injectables",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"overview.html":{}}}],["input",{"_index":224,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["inspired",{"_index":512,"title":{},"body":{"index.html":{}}}],["installation",{"_index":518,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":520,"title":{},"body":{"index.html":{}}}],["insufficientquantityproducts",{"_index":410,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["interface",{"_index":169,"title":{"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["interfaces",{"_index":171,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{},"overview.html":{}}}],["interfaces/external",{"_index":135,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["interfaces/order",{"_index":388,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["interfaces/product.dto",{"_index":249,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["interfaces/shopping",{"_index":314,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["isenum",{"_index":457,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["isenum(shoppingcartaction",{"_index":444,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["isnumber",{"_index":458,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["isstring",{"_index":448,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["item",{"_index":253,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{}}}],["item.requestedcurrencyprice.total",{"_index":440,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["join",{"_index":545,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":553,"title":{},"body":{"index.html":{}}}],["key",{"_index":212,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["last",{"_index":119,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["legend",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["license",{"_index":559,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":535,"title":{},"body":{"index.html":{}}}],["list",{"_index":203,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["literal",{"_index":209,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["main",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["manage",{"_index":345,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["map",{"_index":123,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"injectables/ShoppingCartService.html":{}}}],["map([[this.basecurrency",{"_index":168,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["map(async",{"_index":412,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["milliseconds",{"_index":130,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["miscellaneous",{"_index":494,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":534,"title":{},"body":{"index.html":{}}}],["mode",{"_index":525,"title":{},"body":{"index.html":{}}}],["module",{"_index":37,"title":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["modules",{"_index":39,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":196,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["more",{"_index":548,"title":{},"body":{"index.html":{}}}],["multiplied",{"_index":192,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["myśliwiec",{"_index":554,"title":{},"body":{"index.html":{}}}],["name",{"_index":95,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["nest",{"_index":514,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":558,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"dependencies.html":{}}}],["nestjs/common/http/http.constants",{"_index":339,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["nestjs/common/utils/random",{"_index":385,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["nestjs/core",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":122,"title":{},"body":{"injectables/CurrenciesService.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["newlist",{"_index":437,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newlist.concat(productlistitem",{"_index":436,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart",{"_index":390,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":391,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.productslist",{"_index":392,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["nice",{"_index":257,"title":{},"body":{"modules/ProductsModule.html":{}}}],["node.js",{"_index":503,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":380,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["notfoundexception('shopping",{"_index":424,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["npm",{"_index":519,"title":{},"body":{"index.html":{}}}],["number",{"_index":100,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["object",{"_index":223,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["object.assign(this",{"_index":230,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["object.freeze(this",{"_index":232,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["object.freeze(this.price",{"_index":231,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["object.keys(externalexchangerates.data.rates",{"_index":162,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["one",{"_index":104,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["one_hour",{"_index":84,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["open",{"_index":536,"title":{},"body":{"index.html":{}}}],["optional",{"_index":97,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["order",{"_index":197,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["ordercheckoutdto",{"_index":199,"title":{"interfaces/OrderCheckoutDto.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["original",{"_index":184,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["originalprice",{"_index":179,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["out",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["overview",{"_index":563,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p1",{"_index":252,"title":{},"body":{"modules/ProductsModule.html":{}}}],["p2",{"_index":260,"title":{},"body":{"modules/ProductsModule.html":{}}}],["p3",{"_index":265,"title":{},"body":{"modules/ProductsModule.html":{}}}],["package",{"_index":479,"title":{"dependencies.html":{}},"body":{}}],["pairs",{"_index":210,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["param",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["param('id",{"_index":319,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["parseintpipe",{"_index":308,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["patch",{"_index":309,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["patch(':id",{"_index":303,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["pick",{"_index":219,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["plain",{"_index":222,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["please",{"_index":546,"title":{},"body":{"index.html":{}}}],["pln",{"_index":264,"title":{},"body":{"modules/ProductsModule.html":{}}}],["possible",{"_index":456,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["post",{"_index":297,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["prefix",{"_index":237,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}}}],["price",{"_index":183,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["private",{"_index":80,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}}}],["product",{"_index":176,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["product.description",{"_index":422,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.id",{"_index":289,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}}}],["product.name",{"_index":421,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.price",{"_index":416,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.price.currency",{"_index":418,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.price.value",{"_index":417,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.quantity",{"_index":415,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productdto",{"_index":213,"title":{"classes/ProductDto.html":{}},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["productid",{"_index":330,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["productindex",{"_index":428,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["production",{"_index":527,"title":{},"body":{"index.html":{}}}],["productlistitem",{"_index":413,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productlistitem.productid",{"_index":430,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productlistitem.quantity",{"_index":434,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productpricedto",{"_index":189,"title":{"interfaces/ProductPriceDto.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["productpricewithtotal",{"_index":182,"title":{"interfaces/ProductPriceWithTotal.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["products",{"_index":194,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["products.controller",{"_index":248,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":241,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/interfaces/product.dto",{"_index":190,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["products/products.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingCartModule.html":{}}}],["products/products.service",{"_index":387,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productscontroller",{"_index":235,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productslist",{"_index":326,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{}}}],["productsmodule",{"_index":49,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":240,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":502,"title":{},"body":{"index.html":{}}}],["project",{"_index":537,"title":{},"body":{"index.html":{}}}],["promise",{"_index":138,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["promise.all(shoppingcart.productslist",{"_index":411,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["promise.resolve(this.products",{"_index":284,"title":{},"body":{"injectables/ProductsService.html":{}}}],["properties",{"_index":79,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["provide",{"_index":250,"title":{},"body":{"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["quantity",{"_index":180,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["quantitytoadd",{"_index":357,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["query",{"_index":310,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["query('currency",{"_index":322,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["randomstringgenerator",{"_index":384,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["rates",{"_index":76,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["rates.interface",{"_index":136,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["rates.interface.ts",{"_index":206,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["read",{"_index":547,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["reference",{"_index":211,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["reflect",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":200,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["remove",{"_index":306,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["removed",{"_index":447,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["removeproductsfromlist",{"_index":352,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["removeproductsfromlist(productslist",{"_index":374,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["repository",{"_index":517,"title":{},"body":{"index.html":{}}}],["representation",{"_index":198,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{}}}],["represents",{"_index":174,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["requested",{"_index":187,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"interfaces/TotalPrice.html":{}}}],["requestedcurrency",{"_index":366,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["requestedcurrencyprice",{"_index":181,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["required",{"_index":208,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["reset",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["resolves",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{}}}],["resolving",{"_index":270,"title":{},"body":{"injectables/ProductsService.html":{}}}],["responsible",{"_index":72,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{}}}],["result",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["rimraf",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}}}],["routes",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["run",{"_index":522,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":507,"title":{},"body":{"index.html":{}}}],["selected",{"_index":279,"title":{},"body":{"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["server",{"_index":508,"title":{},"body":{"index.html":{}}}],["service",{"_index":269,"title":{},"body":{"injectables/ProductsService.html":{}}}],["serviceunavailableexception",{"_index":132,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["shop",{"_index":217,"title":{},"body":{"classes/ProductDto.html":{}}}],["shopping",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["shoppingcart",{"_index":394,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartaction",{"_index":382,"title":{},"body":{"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["shoppingcartaction.add",{"_index":401,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartaction.remove",{"_index":405,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcontroller",{"_index":290,"title":{"controllers/ShoppingCartController.html":{}},"body":{"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"coverage.html":{}}}],["shoppingcartdto",{"_index":318,"title":{"classes/ShoppingCartDto.html":{}},"body":{"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":202,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["shoppingcartmodule",{"_index":50,"title":{"modules/ShoppingCartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShoppingCartModule.html":{},"modules.html":{},"overview.html":{}}}],["shoppingcartproductlistitem",{"_index":328,"title":{"interfaces/ShoppingCartProductListItem.html":{}},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcartservice",{"_index":312,"title":{"injectables/ShoppingCartService.html":{}},"body":{"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{},"overview.html":{}}}],["shoppingcartupdate",{"_index":301,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdate.action",{"_index":399,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdate.productid",{"_index":407,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdate.quantity",{"_index":403,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdatedto",{"_index":302,"title":{"classes/ShoppingCartUpdateDto.html":{}},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{}}}],["side",{"_index":509,"title":{},"body":{"index.html":{}}}],["singleitemprice",{"_index":419,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"index.html":{}}}],["sponsors",{"_index":540,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../shopping",{"_index":496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:19",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/interfaces/product.dto.ts",{"_index":215,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"coverage.html":{}}}],["src/products/interfaces/product.dto.ts:12",{"_index":226,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:16",{"_index":227,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:20",{"_index":228,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:24",{"_index":220,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:8",{"_index":225,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/products.controller.ts",{"_index":236,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:22",{"_index":239,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":247,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":268,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:21",{"_index":275,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:30",{"_index":281,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:42",{"_index":278,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:8",{"_index":274,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/shopping",{"_index":70,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["start",{"_index":523,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":526,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":528,"title":{},"body":{"index.html":{}}}],["started",{"_index":501,"title":{"index.html":{}},"body":{}}],["starter",{"_index":516,"title":{},"body":{"index.html":{}}}],["statements",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":550,"title":{},"body":{"index.html":{}}}],["storage",{"_index":125,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":234,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["string",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["structure",{"_index":207,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["sum",{"_index":439,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["summary",{"_index":372,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["support",{"_index":541,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":149,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["svg",{"_index":561,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":398,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["table",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":221,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["test",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["test:covsupport",{"_index":533,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":532,"title":{},"body":{"index.html":{}}}],["tests",{"_index":530,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":539,"title":{},"body":{"index.html":{}}}],["this.addproductstolist(shoppingcart.productslist",{"_index":402,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.appservice.gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["this.assertproduct(productlistitem.productid",{"_index":414,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.assertproduct(shoppingcartupdate.productid",{"_index":396,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.assertshoppingcart(id",{"_index":395,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.basecurrency",{"_index":159,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.carts.get(id",{"_index":409,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carts.set(cart.id",{"_index":423,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carts.set(newshoppingcart.id",{"_index":393,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currenciesservice.convert(product.price.currency",{"_index":420,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.exchagerateslastsync",{"_index":150,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.exchagerateslastsync.gettime",{"_index":152,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.exchangeratescache",{"_index":155,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.getcurrentrates",{"_index":154,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.getexchangerates",{"_index":142,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.httpservice.get(this.exchangeratesapiurl).topromise",{"_index":156,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.one_hour",{"_index":153,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.products",{"_index":285,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.products.find(product",{"_index":288,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.findall",{"_index":243,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbyid(productid",{"_index":426,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.removeproductsfromlist(shoppingcart.productslist",{"_index":406,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.checkout(id",{"_index":323,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["this.shoppingcartservice.create",{"_index":317,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["this.shoppingcartservice.update(id",{"_index":320,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["this.updatecartlist(shoppingcart",{"_index":408,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["throw",{"_index":147,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["torate",{"_index":145,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["total",{"_index":191,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["totalprice",{"_index":195,"title":{"interfaces/TotalPrice.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["touch",{"_index":551,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":442,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transform",{"_index":455,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transform(quantity",{"_index":461,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transform(undefined)@isnumber",{"_index":450,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transformer",{"_index":460,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{},"dependencies.html":{}}}],["twitter",{"_index":557,"title":{},"body":{"index.html":{}}}],["type",{"_index":96,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["typescript",{"_index":515,"title":{},"body":{"index.html":{}}}],["unit",{"_index":529,"title":{},"body":{"index.html":{}}}],["unprocessableentityexception",{"_index":133,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["unprocessableentityexception('not",{"_index":148,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["unprocessableentityexception('product",{"_index":427,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["update",{"_index":120,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["update(id",{"_index":300,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["update.dto",{"_index":315,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["update.dto.ts",{"_index":441,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{}}}],["update.dto.ts:14",{"_index":445,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["update.dto.ts:20",{"_index":449,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["update.dto.ts:28",{"_index":451,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["updatecartlist",{"_index":353,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatecartlist(cart",{"_index":377,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist",{"_index":397,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist.findindex(productlistitem",{"_index":429,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist.push",{"_index":433,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist[productindex].quantity",{"_index":432,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["used",{"_index":344,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["usepipes",{"_index":311,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["user",{"_index":188,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["usevalue",{"_index":251,"title":{},"body":{"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{}}}],["using",{"_index":110,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["validator",{"_index":459,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{},"dependencies.html":{}}}],["value",{"_index":99,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"miscellaneous/enumerations.html":{}}}],["very",{"_index":256,"title":{},"body":{"modules/ProductsModule.html":{}}}],["void",{"_index":379,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["warehouse",{"_index":229,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["watch",{"_index":524,"title":{},"body":{"index.html":{}}}],["website",{"_index":555,"title":{},"body":{"index.html":{}}}],["world",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":254,"title":{},"body":{"modules/ProductsModule.html":{}}}],["y",{"_index":261,"title":{},"body":{"modules/ProductsModule.html":{}}}],["you'd",{"_index":544,"title":{},"body":{"index.html":{}}}],["z",{"_index":266,"title":{},"body":{"modules/ProductsModule.html":{}}}],["zoom",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Main app controller, base route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n                    Test function\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n/**\n * Main app controller, base route\n */\n@Controller()\nexport class AppController {\n  /**\n   * AppController\n   * @param appService\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Test function\n   * @returns {string}\n   */\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nShoppingCartModule\n\nShoppingCartModule\n\nAppModule -->\n\nShoppingCartModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                        \n                            ShoppingCartModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProductsModule } from './products/products.module';\nimport { ShoppingCartModule } from './shopping-cart/shopping-cart.module';\n\n@Module({\n  imports: [ProductsModule, ShoppingCartModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                resolves main app routes\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:12\n                \n            \n\n\n            \n                \n                    Test function\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * resolves main app routes\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Test function\n   * @returns {string}\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrenciesService.html":{"url":"injectables/CurrenciesService.html","title":"injectable - CurrenciesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CurrenciesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/currencies.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for fetches current exchange rates and converting currencies\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseCurrency\n                            \n                            \n                                    Private\n                                exchageRatesLastSync\n                            \n                            \n                                    Private\n                                exchangeRatesCache\n                            \n                            \n                                    Private\n                                    Readonly\n                                ONE_HOUR\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                convert\n                            \n                            \n                                    Private\n                                    Async\n                                getCurrentRates\n                            \n                            \n                                    Private\n                                    Async\n                                getExchangeRates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, exchangeRatesApiUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/shopping-cart/currencies.service.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exchangeRatesApiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(from: string, to: string, value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/currencies.service.ts:54\n                \n            \n\n\n            \n                \n                    Converts given value from one currency to another\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getCurrentRates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentRates()\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/currencies.service.ts:81\n                \n            \n\n\n            \n                \n                    Fetches current exchange rates from external source\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getExchangeRates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getExchangeRates()\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/currencies.service.ts:70\n                \n            \n\n\n            \n                \n                    Resolves exchange rates using cache if data is fresh (one hour)\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseCurrency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:23\n                            \n                        \n\n                \n                    \n                        Base currency for exchange calculations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            exchageRatesLastSync\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:19\n                            \n                        \n\n                \n                    \n                        Date of last exchange rates update\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            exchangeRatesCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:28\n                            \n                        \n\n                \n                    \n                        Current exchange rates storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            ONE_HOUR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 60 * 60 * 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:34\n                            \n                        \n\n                \n                    \n                        Helper - 1 hour in milliseconds\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpService,\n  Inject,\n  Injectable,\n  ServiceUnavailableException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { ExternalExchangeRates } from './interfaces/external-exchange-rates.interface';\n\n/**\n * Responsible for fetches current exchange rates and converting currencies\n */\n@Injectable()\nexport class CurrenciesService {\n\n  /**\n   * Date of last exchange rates update\n   */\n  private exchageRatesLastSync: Date;\n  /**\n   * Base currency for exchange calculations\n   */\n  private baseCurrency: string;\n  /**\n   * Current exchange rates storage\n   * @type {Map}\n   */\n  private exchangeRatesCache = new Map();\n\n  /**\n   * Helper - 1 hour in milliseconds\n   * @type {number}\n   */\n  private readonly ONE_HOUR = 60 * 60 * 1000;\n\n  /**\n   * Constructor\n   * @param httpService\n   * @param exchangeRatesApiUrl\n   */\n  constructor(\n    private readonly httpService: HttpService,\n    @Inject('EXCHANGE_RATES_API_URL') private readonly exchangeRatesApiUrl: string,\n  ) {\n  }\n\n  /**\n   * Converts given value from one currency to another\n   * @param from\n   * @param to\n   * @param value\n   * @returns {Promise}\n   */\n  async convert(from: string, to: string, value: number) {\n    const exchangeRates = await this.getExchangeRates();\n    const fromRate = exchangeRates.get(from);\n    const toRate = exchangeRates.get(to);\n\n    if (!fromRate || !toRate) {\n      throw new UnprocessableEntityException('Not supported currency');\n    }\n\n    return value * (toRate / fromRate);\n  }\n\n  /**\n   * Resolves exchange rates using cache if data is fresh (one hour)\n   * @returns {Promise>}\n   */\n  private async getExchangeRates() {\n    if (!this.exchageRatesLastSync || (Date.now() - this.exchageRatesLastSync.getTime()) > this.ONE_HOUR) {\n      return this.getCurrentRates();\n    }\n    return this.exchangeRatesCache;\n  }\n\n  /**\n   * Fetches current exchange rates from external source\n   * @returns {Promise>}\n   */\n  private async getCurrentRates() {\n    const externalExchangeRates = await this.httpService.get(this.exchangeRatesApiUrl).toPromise();\n\n    if (externalExchangeRates.status !== 200) {\n      throw new ServiceUnavailableException();\n    }\n\n    this.baseCurrency = externalExchangeRates.data.base;\n    this.exchageRatesLastSync = new Date();\n\n    const currencyNames = Object.keys(externalExchangeRates.data.rates);\n    this.exchangeRatesCache = currencyNames.reduce((currenciesMap, currencyName) => {\n      currenciesMap.set(currencyName, externalExchangeRates.data.rates[currencyName]);\n      return currenciesMap;\n    }, new Map([[this.baseCurrency, 1]]));\n\n    return this.exchangeRatesCache;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailedProductListItem.html":{"url":"interfaces/DetailedProductListItem.html","title":"interface - DetailedProductListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailedProductListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents detailed product info for shopping cart checkout\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        originalPrice\n                                \n                                \n                                        quantity\n                                \n                                \n                                        requestedCurrencyPrice\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    product description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalPrice\n                                    \n                                \n                                \n                                    \n                                        originalPrice:         ProductPriceWithTotal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductPriceWithTotal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product price in original currency (as added to database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product quantity added to shopping cart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestedCurrencyPrice\n                                    \n                                \n                                \n                                    \n                                        requestedCurrencyPrice:         ProductPriceWithTotal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductPriceWithTotal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product price in requested by user currency\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExternalExchangeRates.html":{"url":"interfaces/ExternalExchangeRates.html","title":"interface - ExternalExchangeRates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExternalExchangeRates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/external-exchange-rates.interface.ts\n        \n\n            \n                Description\n            \n            \n                External source data structure for exchange rates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        base\n                                \n                                \n                                        date\n                                \n                                \n                                        rates\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base\n                                    \n                                \n                                \n                                    \n                                        base:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base currency, required for exchange calculations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of exchange rates update\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rates\n                                    \n                                \n                                \n                                    \n                                        rates:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    map of pairs currency - value in reference to base currency\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ExternalExchangeRates {\n  /**\n   * map of pairs currency - value in reference to base currency\n   */\n  rates: { [key: string]: number };\n  /**\n   * Base currency, required for exchange calculations\n   */\n  base: string;\n  /**\n   * Date of exchange rates update\n   */\n  date: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderCheckoutDto.html":{"url":"interfaces/OrderCheckoutDto.html","title":"interface - OrderCheckoutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderCheckoutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                order checkout representation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        detailedProductsList\n                                \n                                \n                                        shoppingCartId\n                                \n                                \n                                        totalPrice\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detailedProductsList\n                                    \n                                \n                                \n                                    \n                                        detailedProductsList:         DetailedProductListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DetailedProductListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    list of products added to shopping cart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shoppingCartId\n                                    \n                                \n                                \n                                    \n                                        shoppingCartId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    related shopping cart id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                    \n                                \n                                \n                                    \n                                        totalPrice:         TotalPrice\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TotalPrice\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    total price of shopping cart in requested currency\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDto.html":{"url":"classes/ProductDto.html","title":"class - ProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/product.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents product available in shop\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: Pick)\n                    \n                \n                        \n                            \n                                Defined in src/products/interfaces/product.dto.ts:24\n                            \n                        \n\n                \n                    \n                            Takes plain object and converts to ProductDto\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        Pick\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:24\n                            \n                        \n\n                \n                    \n                        optional product description\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:8\n                            \n                        \n\n                \n                    \n                        product id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:12\n                            \n                        \n\n                \n                    \n                        product name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductPriceDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:16\n                            \n                        \n\n                \n                    \n                        product price - currency and value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:20\n                            \n                        \n\n                \n                    \n                        product quantity available in warehouse\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductDto {\n  /**\n   * product id\n   */\n  id: string;\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price - currency and value\n   */\n  price: ProductPriceDto;\n  /**\n   * product quantity available in warehouse\n   */\n  quantity: number;\n  /**\n   * optional product description\n   */\n  description?: string;\n\n  /**\n   * Takes plain object and converts to ProductDto\n   * @param input\n   */\n  constructor(input: Pick) {\n    Object.assign(this, input);\n    Object.freeze(this.price);\n    Object.freeze(this);\n  }\n}\n\n/**\n * Represents product price (value and currency)\n */\nexport interface ProductPriceDto {\n  /**\n   * Product value\n   */\n  value: number;\n  /**\n   * Determinates in what currency product is stored in database\n   */\n  currency: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductPriceDto.html":{"url":"interfaces/ProductPriceDto.html","title":"interface - ProductPriceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProductPriceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/product.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents product price (value and currency)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currency\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determinates in what currency product is stored in database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Product value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export class ProductDto {\n  /**\n   * product id\n   */\n  id: string;\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price - currency and value\n   */\n  price: ProductPriceDto;\n  /**\n   * product quantity available in warehouse\n   */\n  quantity: number;\n  /**\n   * optional product description\n   */\n  description?: string;\n\n  /**\n   * Takes plain object and converts to ProductDto\n   * @param input\n   */\n  constructor(input: Pick) {\n    Object.assign(this, input);\n    Object.freeze(this.price);\n    Object.freeze(this);\n  }\n}\n\n/**\n * Represents product price (value and currency)\n */\nexport interface ProductPriceDto {\n  /**\n   * Product value\n   */\n  value: number;\n  /**\n   * Determinates in what currency product is stored in database\n   */\n  currency: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductPriceWithTotal.html":{"url":"interfaces/ProductPriceWithTotal.html","title":"interface - ProductPriceWithTotal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProductPriceWithTotal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents product price (value and currency) and total value (value multiplied by quantity)\n\n            \n\n            \n                Extends\n            \n            \n                        ProductPriceDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents products total value (value multiplied by quantity)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n            \n                Description\n            \n            \n                Controller responsible for /products route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:22\n                \n            \n\n\n            \n                \n                    Returns all available products\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ProductsService } from './products.service';\n\n/**\n * Controller responsible for /products route\n */\n@Controller('products')\nexport class ProductsController {\n\n  /**\n   * Constructor\n   * @param productsService\n   */\n  constructor(private productsService: ProductsService) {\n  }\n\n  /**\n   * Returns all available products\n   * @returns {Promise}\n   */\n  @Get()\n  findAll() {\n    return this.productsService.findAll();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService \n\nProductsService \n\n\n\nProductsModule\n\nProductsModule\n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\nimport { ProductDto } from './interfaces/product.dto';\n\n@Module({\n  controllers: [ProductsController],\n  providers: [\n    ProductsService,\n    {\n      provide: 'PRODUCTS',\n      useValue: [\n        new ProductDto({\n          id: 'p1',\n          name: 'Item X',\n          quantity: 10,\n          description: 'Very nice item X',\n          price: {\n            value: 15,\n            currency: 'EUR',\n          },\n        }),\n        new ProductDto({\n          id: 'p2',\n          name: 'Item Y',\n          quantity: 4,\n          description: 'Awsome item Y',\n          price: {\n            value: 4,\n            currency: 'PLN',\n          },\n        }),\n        new ProductDto({\n          id: 'p3',\n          name: 'Item Z',\n          quantity: 1,\n          price: {\n            value: 150,\n            currency: 'EUR',\n          },\n        }),\n      ],\n    }\n  ],\n  exports: [ProductsService],\n})\nexport class ProductsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n            \n                Description\n            \n            \n                Service responsible for products resolving\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(products: ProductDto[])\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        products\n                                                  \n                                                        \n                                                                        ProductDto[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:21\n                \n            \n\n\n            \n                \n                    Resolves all products form database\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:42\n                \n            \n\n\n            \n                \n                    Returns selected product from database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByIds\n                        \n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:30\n                \n            \n\n\n            \n                \n                    Returns selected products from database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ProductDto } from './interfaces/product.dto';\n\n/**\n * Service responsible for products resolving\n */\n@Injectable()\nexport class ProductsService {\n\n  /**\n   * Constructor\n   * @param products\n   */\n  constructor(@Inject('PRODUCTS') private readonly products: ProductDto[]) {\n  }\n\n  /**\n   * Resolves all products form database\n   * @returns {Promise}\n   */\n  async findAll() {\n    return Promise.resolve(this.products);\n  }\n\n  /**\n   * Returns selected products from database\n   * @param ids\n   * @returns {ProductDto[]}\n   */\n  findByIds(ids: string[]) {\n    return this.products\n      .filter(\n        product => ids.includes(product.id),\n      );\n  }\n\n  /**\n   * Returns selected product from database\n   * @param id\n   * @returns {ProductDto}\n   */\n  findById(id: string) {\n    return this.products.find(product => product.id === id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShoppingCartController.html":{"url":"controllers/ShoppingCartController.html","title":"controller - ShoppingCartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShoppingCartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/shopping-cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shopping-cart\n            \n\n            \n                Description\n            \n            \n                Controller responsible for /shopping-cart route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkout\n                            \n                            \n                                create\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkout\n                        \n                        \n                    \n                \n            \n            \n                \ncheckout(id: string, currency: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.controller.ts:48\n                \n            \n\n\n            \n                \n                    Allow to checkout selected shopping cart with optional requested currency, default EUR\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.controller.ts:23\n                \n            \n\n\n            \n                \n                    Creates shopping cart\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, shoppingCartUpdate: ShoppingCartUpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.controller.ts:34\n                \n            \n\n\n            \n                \n                    Allow to add and remove products from shopping cart\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingCartUpdate\n                                    \n                                                ShoppingCartUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, ParseIntPipe, Patch, Post, Query, UsePipes } from '@nestjs/common';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { ShoppingCartUpdateDto } from './interfaces/shopping-cart-update.dto';\n\n/**\n * Controller responsible for /shopping-cart route\n */\n@Controller('shopping-cart')\nexport class ShoppingCartController {\n\n  /**\n   * Constructor\n   * @param shoppingCartService\n   */\n  constructor(private readonly shoppingCartService: ShoppingCartService) {\n  }\n\n  /**\n   * Creates shopping cart\n   * @returns {string}\n   */\n  @Post()\n  create() {\n    return this.shoppingCartService.create();\n  }\n\n  /**\n   * Allow to add and remove products from shopping cart\n   * @param id\n   * @param shoppingCartUpdate\n   * @returns {ShoppingCartDto}\n   */\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() shoppingCartUpdate: ShoppingCartUpdateDto,\n  ) {\n    return this.shoppingCartService.update(id, shoppingCartUpdate);\n  }\n\n  /**\n   * Allow to checkout selected shopping cart with optional requested currency, default EUR\n   * @param id\n   * @param currency\n   * @returns {Promise}\n   */\n  @Get(':id')\n  checkout(@Param('id') id: string, @Query('currency') currency: string) {\n    return this.shoppingCartService.checkout(id, currency);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingCartDto.html":{"url":"classes/ShoppingCartDto.html","title":"class - ShoppingCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/shopping-cart.dto.ts\n        \n\n            \n                Description\n            \n            \n                represents shopping cart\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                productsList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart.dto.ts:8\n                            \n                        \n\n                \n                    \n                        shopping cart id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ShoppingCartProductListItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart.dto.ts:12\n                            \n                        \n\n                \n                    \n                        products added to shopping cart\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShoppingCartDto {\n  /**\n   * shopping cart id\n   */\n  id: string;\n  /**\n   * products added to shopping cart\n   */\n  productsList: ShoppingCartProductListItem[];\n}\n\n/**\n * representation of product and quantity in shopping cart\n */\nexport interface ShoppingCartProductListItem {\n  /**\n   * product id\n   */\n  productId: string;\n  /**\n   * product quantity in shopping cart\n   */\n  quantity: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShoppingCartModule.html":{"url":"modules/ShoppingCartModule.html","title":"module - ShoppingCartModule","body":"\n                   \n\n\n\n\n    Modules\n    ShoppingCartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShoppingCartModule\n\n\n\ncluster_ShoppingCartModule_imports\n\n\n\ncluster_ShoppingCartModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nShoppingCartModule\n\nShoppingCartModule\n\nShoppingCartModule -->\n\nProductsModule->ShoppingCartModule\n\n\n\n\n\nCurrenciesService\n\nCurrenciesService\n\nShoppingCartModule -->\n\nCurrenciesService->ShoppingCartModule\n\n\n\n\n\nShoppingCartService\n\nShoppingCartService\n\nShoppingCartModule -->\n\nShoppingCartService->ShoppingCartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shopping-cart/shopping-cart.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CurrenciesService\n                        \n                        \n                            ShoppingCartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ShoppingCartController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, HttpService, Module } from '@nestjs/common';\nimport { ShoppingCartController } from './shopping-cart.controller';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { ProductsModule } from '../products/products.module';\nimport { CurrenciesService } from './currencies.service';\nimport { AXIOS_INSTANCE_TOKEN } from '@nestjs/common/http/http.constants';\nimport axios from 'axios';\n\n@Module({\n  imports: [ProductsModule, HttpModule],\n  controllers: [ShoppingCartController],\n  providers: [\n    ShoppingCartService,\n    CurrenciesService,\n    HttpService,\n    {\n      provide: 'EXCHANGE_RATES_API_URL',\n      useValue: 'https://api.exchangeratesapi.io/latest',\n    },\n    {\n      provide: AXIOS_INSTANCE_TOKEN,\n      useValue: axios,\n    },\n  ],\n})\nexport class ShoppingCartModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCartProductListItem.html":{"url":"interfaces/ShoppingCartProductListItem.html","title":"interface - ShoppingCartProductListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ShoppingCartProductListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/shopping-cart.dto.ts\n        \n\n            \n                Description\n            \n            \n                representation of product and quantity in shopping cart\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        productId\n                                \n                                \n                                        quantity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product quantity in shopping cart\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export class ShoppingCartDto {\n  /**\n   * shopping cart id\n   */\n  id: string;\n  /**\n   * products added to shopping cart\n   */\n  productsList: ShoppingCartProductListItem[];\n}\n\n/**\n * representation of product and quantity in shopping cart\n */\nexport interface ShoppingCartProductListItem {\n  /**\n   * product id\n   */\n  productId: string;\n  /**\n   * product quantity in shopping cart\n   */\n  quantity: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/shopping-cart.service.ts\n        \n\n            \n                Description\n            \n            \n                Used for manage shopping carts\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                carts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addProductsToList\n                            \n                            \n                                    Private\n                                assertProduct\n                            \n                            \n                                    Private\n                                assertShoppingCart\n                            \n                            \n                                    Private\n                                    Async\n                                buildDetailedProductItem\n                            \n                            \n                                    Private\n                                calculateTotalRequestedPrice\n                            \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                create\n                            \n                            \n                                    Private\n                                removeProductsFromList\n                            \n                            \n                                update\n                            \n                            \n                                    Private\n                                updateCartList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductsService, currenciesService: CurrenciesService)\n                    \n                \n                        \n                            \n                                Defined in src/shopping-cart/shopping-cart.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currenciesService\n                                                  \n                                                        \n                                                                        CurrenciesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addProductsToList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductsToList(productsList: ShoppingCartProductListItem[], product: ProductDto, quantityToAdd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:204\n                \n            \n\n\n            \n                \n                    Add products to shopping cart list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsList\n                                    \n                                                ShoppingCartProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantityToAdd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:189\n                \n            \n\n\n            \n                \n                    Assert product\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProductDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertShoppingCart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertShoppingCart(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:176\n                \n            \n\n\n            \n                \n                    Assert shopping car\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ShoppingCartDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            buildDetailedProductItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildDetailedProductItem(product: ProductDto, quantity: number, requestedCurrency: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:132\n                \n            \n\n\n            \n                \n                    Create detailed product info for order checkout\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestedCurrency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateTotalRequestedPrice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTotalRequestedPrice(detailedProductsList: DetailedProductListItem[])\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:251\n                \n            \n\n\n            \n                \n                    Calculate total products price\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detailedProductsList\n                                    \n                                                DetailedProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkout(id: string, requestedCurrency: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:91\n                \n            \n\n\n            \n                \n                    Get summary of shopping cart\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    requestedCurrency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'EUR'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:44\n                \n            \n\n\n            \n                \n                    Create shopping cart\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeProductsFromList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeProductsFromList(productsList: ShoppingCartProductListItem[], productId: string, quantity: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:233\n                \n            \n\n\n            \n                \n                    Remove products from shopping cart list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsList\n                                    \n                                                ShoppingCartProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, shoppingCartUpdate: ShoppingCartUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:59\n                \n            \n\n\n            \n                \n                    Update shopping cart\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingCartUpdate\n                                    \n                                                ShoppingCartUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateCartList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCartList(cart: ShoppingCartDto, productsList: ShoppingCartProductListItem[])\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:164\n                \n            \n\n\n            \n                \n                    Update shopping cart products list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cart\n                                    \n                                                ShoppingCartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productsList\n                                    \n                                                ShoppingCartProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            carts\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/shopping-cart.service.ts:26\n                            \n                        \n\n                \n                    \n                        Storage for shopping carts\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnprocessableEntityException } from '@nestjs/common';\nimport { ShoppingCartDto, ShoppingCartProductListItem } from './interfaces/shopping-cart.dto';\nimport { ShoppingCartAction } from './interfaces/shopping-cart.action';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\nimport { ProductsService } from '../products/products.service';\nimport { ShoppingCartUpdateDto } from './interfaces/shopping-cart-update.dto';\nimport { ProductDto } from '../products/interfaces/product.dto';\nimport {\n  DetailedProductListItem,\n  OrderCheckoutDto,\n  ProductPriceWithTotal,\n  TotalPrice,\n} from './interfaces/order-checkout.dto';\nimport { CurrenciesService } from './currencies.service';\n\n/**\n * Used for manage shopping carts\n */\n@Injectable()\nexport class ShoppingCartService {\n\n  /**\n   * Storage for shopping carts\n   * @type {Map}\n   */\n  private readonly carts = new Map();\n\n  /**\n   * Constructor\n   * @param productsService\n   * @param currenciesService\n   */\n  constructor(\n    private readonly productsService: ProductsService,\n    private readonly currenciesService: CurrenciesService,\n  ) {\n  }\n\n\n  /**\n   * Create shopping cart\n   * @returns {string}\n   */\n  create(): string {\n    const newShoppingCart = new ShoppingCartDto();\n    newShoppingCart.id = randomStringGenerator();\n    newShoppingCart.productsList = [];\n\n    this.carts.set(newShoppingCart.id, newShoppingCart);\n    return newShoppingCart.id;\n  }\n\n  /**\n   * Update shopping cart\n   * @param {string} id\n   * @param {ShoppingCartUpdateDto} shoppingCartUpdate\n   * @returns {ShoppingCartDto}\n   */\n  update(\n    id: string,\n    shoppingCartUpdate: ShoppingCartUpdateDto,\n  ) {\n\n    const shoppingCart = this.assertShoppingCart(id);\n    const product = this.assertProduct(shoppingCartUpdate.productId);\n    let updatedProductsList: ShoppingCartProductListItem[];\n\n    switch (shoppingCartUpdate.action) {\n      case ShoppingCartAction.ADD:\n        updatedProductsList = this.addProductsToList(shoppingCart.productsList, product, shoppingCartUpdate.quantity);\n        break;\n      case ShoppingCartAction.REMOVE:\n        updatedProductsList = this.removeProductsFromList(shoppingCart.productsList, shoppingCartUpdate.productId, shoppingCartUpdate.quantity);\n        break;\n    }\n\n    if (updatedProductsList) {\n      this.updateCartList(shoppingCart, updatedProductsList);\n    }\n\n    return this.carts.get(id);\n  }\n\n\n  /**\n   * Get summary of shopping cart\n   * @param id\n   * @param requestedCurrency\n   * @returns {Promise}\n   */\n  async checkout(\n    id: string,\n    requestedCurrency = 'EUR',\n  ): Promise {\n    const shoppingCart = this.assertShoppingCart(id);\n    const insufficientQuantityProducts = [];\n\n    const detailedProductsList = await Promise.all(shoppingCart.productsList\n      .map(async (productListItem) => {\n        const product = this.assertProduct(productListItem.productId);\n\n        if (product.quantity }\n   */\n  private async buildDetailedProductItem(product: ProductDto, quantity: number, requestedCurrency: string): Promise {\n    let requestedCurrencyPrice: ProductPriceWithTotal;\n    const originalPrice: ProductPriceWithTotal = {\n      ...product.price,\n      total: quantity * product.price.value,\n    };\n\n    if (requestedCurrency !== product.price.currency) {\n      const singleItemPrice = await this.currenciesService.convert(product.price.currency, requestedCurrency, product.price.value);\n      requestedCurrencyPrice = {\n        currency: requestedCurrency,\n        value: singleItemPrice,\n        total: quantity * singleItemPrice,\n      };\n    } else {\n      requestedCurrencyPrice = { ...originalPrice };\n    }\n\n    return {\n      name: product.name,\n      quantity,\n      description: product.description,\n      originalPrice,\n      requestedCurrencyPrice,\n    };\n  }\n\n  /**\n   * Update shopping cart products list\n   * @param cart\n   * @param productsList\n   */\n  private updateCartList(cart: ShoppingCartDto, productsList: ShoppingCartProductListItem[]) {\n    this.carts.set(cart.id, {\n      ...cart,\n      productsList,\n    });\n  }\n\n  /**\n   * Assert shopping car\n   * @param id\n   * @returns {ShoppingCartDto}\n   */\n  private assertShoppingCart(id: string): ShoppingCartDto {\n    const shoppingCart = this.carts.get(id);\n    if (!shoppingCart) {\n      throw new NotFoundException('Shopping cart not found');\n    }\n    return shoppingCart;\n  }\n\n  /**\n   * Assert product\n   * @param productId\n   * @returns {ProductDto}\n   */\n  private assertProduct(productId: string): ProductDto {\n    const product = this.productsService.findById(productId);\n    if (!product) {\n      throw new UnprocessableEntityException('Product not found');\n    }\n    return product;\n  }\n\n  /**\n   * Add products to shopping cart list\n   * @param productsList\n   * @param product\n   * @param quantityToAdd\n   * @returns {ShoppingCartProductListItem[]}\n   */\n  private addProductsToList(productsList: ShoppingCartProductListItem[], product: ProductDto, quantityToAdd: number) {\n    const updatedProductsList = [...productsList];\n    const productIndex = updatedProductsList.findIndex(productListItem => productListItem.productId === product.id);\n    let combinedQuantity: number;\n    if (productIndex !== -1) {\n      combinedQuantity = updatedProductsList[productIndex].quantity + quantityToAdd;\n      updatedProductsList[productIndex].quantity = combinedQuantity;\n    } else {\n      combinedQuantity = quantityToAdd;\n      updatedProductsList.push({\n        productId: product.id,\n        quantity: combinedQuantity,\n      });\n    }\n\n    if (product.quantity  {\n        if (productListItem.productId === productId) {\n          productListItem.quantity = productListItem.quantity > quantity ? productListItem.quantity - quantity : 0;\n          if (productListItem.quantity > 0) {\n            return newList.concat(productListItem);\n          }\n        }\n        return newList;\n      }, []);\n  }\n\n  /**\n   * Calculate total products price\n   * @param detailedProductsList\n   * @returns {number}\n   */\n  private calculateTotalRequestedPrice(detailedProductsList: DetailedProductListItem[]): number {\n    return detailedProductsList.reduce((sum, item) => {\n      return sum + item.requestedCurrencyPrice.total;\n    }, 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingCartUpdateDto.html":{"url":"classes/ShoppingCartUpdateDto.html","title":"class - ShoppingCartUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingCartUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/shopping-cart-update.dto.ts\n        \n\n            \n                Description\n            \n            \n                data transfer object for shopping cart update\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ShoppingCartAction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(ShoppingCartAction)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart-update.dto.ts:14\n                            \n                        \n\n                \n                    \n                        defines if products should be added or removed from cart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart-update.dto.ts:20\n                            \n                        \n\n                \n                    \n                        represents selected product\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(undefined)@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart-update.dto.ts:28\n                            \n                        \n\n                \n                    \n                        product add/remove quantity change\nAuto transform to number if possible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ShoppingCartAction } from './shopping-cart.action';\nimport { IsEnum, IsNumber, IsString } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\n/**\n * data transfer object for shopping cart update\n */\nexport class ShoppingCartUpdateDto {\n\n  /**\n   * defines if products should be added or removed from cart\n   */\n  @IsEnum(ShoppingCartAction)\n  action: ShoppingCartAction;\n\n  /**\n   * represents selected product\n   */\n  @IsString()\n  productId: string;\n\n  /**\n   * product add/remove quantity change\n   * Auto transform to number if possible\n   */\n  @Transform(quantity => +quantity)\n  @IsNumber()\n  quantity: number;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TotalPrice.html":{"url":"interfaces/TotalPrice.html","title":"interface - TotalPrice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TotalPrice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents shopping cart total value and currency\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currency\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    money currency\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    money value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/interfaces/product.dto.ts\n            \n            class\n            ProductDto\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/products/interfaces/product.dto.ts\n            \n            interface\n            ProductPriceDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/shopping-cart/currencies.service.ts\n            \n            injectable\n            CurrenciesService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/external-exchange-rates.interface.ts\n            \n            interface\n            ExternalExchangeRates\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            DetailedProductListItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            OrderCheckoutDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            ProductPriceWithTotal\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            TotalPrice\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/shopping-cart-update.dto.ts\n            \n            class\n            ShoppingCartUpdateDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/shopping-cart.dto.ts\n            \n            class\n            ShoppingCartDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/shopping-cart.dto.ts\n            \n            interface\n            ShoppingCartProductListItem\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/shopping-cart/shopping-cart.controller.ts\n            \n            controller\n            ShoppingCartController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (13/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            axios : ^0.19.2\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ShoppingCartAction   (src/.../shopping-cart.action.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shopping-cart/interfaces/shopping-cart.action.ts\n    \n        \n            \n                \n                    \n                        \n                        ShoppingCartAction\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                Value : add\n                            \n                        \n                        \n                            \n                                 REMOVE\n                            \n                        \n                        \n                            \n                                Value : remove\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap app\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShoppingCartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ShoppingCartModule\n\n\n\ncluster_ShoppingCartModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nShoppingCartModule\n\nShoppingCartModule\n\nShoppingCartModule -->\n\nProductsModule->ShoppingCartModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAppModule -->\n\nShoppingCartModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nCurrenciesService\n\nCurrenciesService\n\nShoppingCartModule -->\n\nCurrenciesService->ShoppingCartModule\n\n\n\n\n\nShoppingCartService\n\nShoppingCartService\n\nShoppingCartModule -->\n\nShoppingCartService->ShoppingCartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
