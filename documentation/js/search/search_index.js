var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.356,1,1.881]],["body/controllers/AppController.html",[0,2.436,1,3.211,2,1.648,3,0.39,4,0.331,5,0.331,6,3.023,7,0.453,8,3.854,9,2.916,10,3.317,11,3.317,12,0.39,13,2.101,14,4.468,15,2.288,16,0.038,17,1.227,18,3.662,19,3.317,20,3.317,21,2.101,22,0.929,23,0.943,24,1.113,25,2.701,26,3.023,27,0.39,28,0.39,29,1.492,30,2.602,31,2.036,32,1.648,33,3.662,34,0.023,35,0.029,36,0.023]],["title/modules/AppModule.html",[37,1.356,38,1.881]],["body/modules/AppModule.html",[1,3.164,2,2.06,3,0.378,4,0.32,5,0.32,16,0.038,23,1.119,24,1.08,25,2.829,26,2.931,27,0.378,28,0.378,34,0.022,35,0.028,36,0.022,37,2.28,38,3.719,39,1.772,40,1.772,41,2.218,42,2.218,43,1.772,44,3.164,45,2.218,46,2.931,47,2.931,48,2.931,49,2.829,50,3.153,51,2.859,52,2.218,53,2.218,54,3.551,55,3.778,56,3.551,57,2.931,58,1.08,59,1.974,60,3.551]],["title/injectables/AppService.html",[25,1.503,61,1.112]],["body/injectables/AppService.html",[3,0.416,4,0.353,5,0.353,7,0.483,8,4.015,9,3.038,12,0.416,13,2.189,14,4.574,16,0.038,17,1.31,19,3.456,20,3.456,21,2.189,22,0.957,23,0.79,24,1.188,25,2.427,27,0.416,28,0.416,32,1.759,34,0.024,35,0.03,36,0.024,61,1.796,62,2.173,63,3.226,64,3.456,65,4.864,66,3.908,67,3.908,68,3.908]],["title/injectables/CurrenciesService.html",[61,1.112,69,1.503]],["body/injectables/CurrenciesService.html",[3,0.183,4,0.303,5,0.155,7,0.213,10,1.928,12,0.183,13,1.221,16,0.039,17,1.607,21,1.988,22,0.931,23,0.548,24,0.523,27,0.183,28,0.183,29,1.693,31,2.311,32,1.871,34,0.011,35,0.017,36,0.011,61,1.002,62,0.956,64,1.928,69,1.354,70,1.109,71,1.419,72,1.695,73,3.818,74,4.417,75,3.777,76,4.17,77,2.714,78,2.714,79,0.748,80,4.023,81,3.362,82,3.362,83,3.362,84,3.362,85,3.505,86,2.714,87,3.818,88,3.818,89,1.905,90,1.719,91,3.818,92,3.818,93,2.714,94,1.509,95,0.825,96,0.893,97,1.221,98,2.714,99,1.5,100,1.052,101,1.719,102,1.928,103,2.714,104,3.818,105,1.264,106,2.714,107,1.719,108,2.24,109,1.719,110,2.714,111,2.714,112,1.928,113,2.714,114,3.818,115,1.719,116,2.24,117,3.431,118,1.719,119,2.714,120,1.509,121,1.928,122,2.759,123,2.389,124,1.719,125,2.24,126,3.818,127,2.714,128,2.714,129,2.389,130,2.714,131,1.419,132,2.714,133,1.419,134,1.695,135,1.719,136,1.719,137,1.719,138,1.87,139,3.431,140,1.719,141,2.24,142,1.719,143,3.362,144,1.719,145,3.362,146,1.719,147,2.24,148,1.719,149,1.719,150,2.714,151,1.719,152,1.719,153,1.719,154,1.719,155,3.362,156,1.719,157,1.719,158,1.719,159,1.719,160,1.719,161,1.719,162,1.719,163,1.719,164,1.719,165,1.719,166,2.714,167,2.714,168,1.719,169,1.719,170,1.719]],["title/interfaces/DetailedProductListItem.html",[171,0.484,172,1.356]],["body/interfaces/DetailedProductListItem.html",[3,0.441,4,0.218,5,0.218,7,0.643,12,0.257,16,0.039,22,0.963,23,0.487,27,0.484,34,0.015,35,0.022,36,0.015,58,1.62,70,0.542,79,0.967,95,1.532,96,0.975,97,1.58,99,1.62,100,1.33,105,1.651,171,0.73,172,1.862,173,0.983,174,1.341,175,1.341,176,1.966,177,1.952,178,1.735,179,1.785,180,2.064,181,2.526,182,1.62,183,2.526,184,2.34,185,2.052,186,2.192,187,2.173,188,1.58,189,2.301,190,2.192,191,1.43,192,1.341,193,2.684,194,2.192,195,1.507,196,0.967,197,1.862,198,2.192,199,1.341,200,1.204,201,1.086,202,1.507,203,0.665,204,1.507,205,1.341,206,1.341]],["title/interfaces/ExternalExchangeRates.html",[134,1.881,171,0.484]],["body/interfaces/ExternalExchangeRates.html",[3,0.366,4,0.404,5,0.31,7,0.425,10,4.124,12,0.366,16,0.038,22,1.034,27,0.366,34,0.021,35,0.028,36,0.021,70,0.772,75,3.993,76,4.725,79,1.235,96,1.107,99,1.362,100,0.947,105,1.709,108,2.836,112,2.441,116,3.699,117,4.639,120,2.491,123,3.183,134,2.799,171,0.552,173,1.399,207,2.836,208,2.836,209,3.436,210,4.481,211,4.481,212,4.481,213,4.481,214,3.436]],["title/interfaces/OrderCheckoutDto.html",[171,0.484,201,1.356]],["body/interfaces/OrderCheckoutDto.html",[3,0.389,4,0.23,5,0.23,7,0.527,12,0.271,16,0.039,22,0.927,23,0.514,27,0.496,34,0.016,35,0.022,36,0.016,58,1.673,70,0.572,79,1.005,95,1.109,96,0.861,99,1.643,100,1.175,105,1.643,171,0.748,172,2.096,173,1.036,174,1.415,175,1.415,176,1.897,177,1.415,178,1.606,179,1.844,180,2.127,181,1.415,182,1.416,183,1.415,184,1.919,185,2.008,186,1.589,187,2.096,188,1.145,189,2.371,190,1.589,191,1.486,192,1.415,193,2.853,194,2.278,195,1.589,196,1.175,197,2.433,198,2.278,199,2.028,200,1.82,201,1.641,202,2.278,203,1.005,204,2.909,205,2.028,206,2.589]],["title/classes/ProductDto.html",[28,0.321,215,1.356]],["body/classes/ProductDto.html",[3,0.297,4,0.252,5,0.252,7,0.653,12,0.297,16,0.038,17,1.771,22,0.98,27,0.414,28,0.297,29,1.135,34,0.017,35,0.024,36,0.017,79,1.072,89,1.391,94,1.55,95,1.607,96,1.068,97,2.296,99,1.551,100,1.235,102,2.764,105,1.551,171,0.448,176,1.585,178,1.79,182,1.551,185,2.153,188,1.254,191,1.825,203,1.406,215,2.183,216,1.741,217,1.98,218,3.184,219,2.787,220,3.211,221,3.699,222,3.89,223,3.211,224,3.211,225,2.764,226,3.699,227,2.787,228,2.787,229,2.787,230,2.787,231,3.211,232,2.301,233,2.301,234,2.301,235,2.301,236,2.301]],["title/interfaces/ProductPriceDto.html",[171,0.484,191,1.227]],["body/interfaces/ProductPriceDto.html",[3,0.334,4,0.283,5,0.283,7,0.589,12,0.334,16,0.039,22,0.99,27,0.45,28,0.334,29,1.279,34,0.019,35,0.026,36,0.019,79,1.163,95,1.283,96,0.853,97,1.413,99,1.753,100,1.405,102,2.231,105,1.753,171,0.504,173,1.279,176,1.719,178,1.787,182,1.283,185,2.077,188,1.9,191,1.942,203,1.163,215,1.9,217,2.231,218,2.231,220,2.592,221,2.592,223,2.592,224,2.592,225,2.231,226,3.484,231,2.592,232,2.592,233,2.592,234,2.592,235,3.484,236,3.484]],["title/interfaces/ProductPriceWithTotal.html",[171,0.484,184,1.356]],["body/interfaces/ProductPriceWithTotal.html",[3,0.397,4,0.236,5,0.236,7,0.535,12,0.279,16,0.039,22,0.852,23,0.529,27,0.503,34,0.016,35,0.023,36,0.016,58,1.575,70,0.589,79,1.026,95,1.132,96,0.529,99,1.76,100,1.373,105,1.656,171,0.758,172,1.676,173,1.066,174,1.456,175,1.456,176,2.11,177,1.456,178,1.656,179,1.736,180,1.858,181,1.456,182,1.575,183,1.456,184,2.123,185,2.03,186,1.635,187,1.95,188,1.178,189,2.07,190,1.635,191,1.764,192,1.456,193,3.124,194,2.947,195,2.325,196,1.194,197,1.95,198,2.325,199,1.456,200,1.306,201,1.178,202,1.635,203,0.721,204,1.635,205,1.456,206,1.456]],["title/controllers/ProductsController.html",[0,1.356,237,1.881]],["body/controllers/ProductsController.html",[0,2.317,2,1.654,3,0.391,4,0.332,5,0.332,7,0.454,11,3.324,12,0.391,13,2.106,15,2.295,16,0.038,17,1.231,21,2.439,23,0.945,24,1.117,27,0.391,28,0.391,29,1.496,30,2.61,32,1.654,34,0.023,35,0.029,36,0.023,72,2.922,89,1.833,138,2.043,196,1.542,218,3.324,237,2.922,238,3.033,239,3.033,240,4.473,241,3.674,242,2.439,243,3.033,244,3.674,245,3.674]],["title/modules/ProductsModule.html",[37,1.356,49,1.503]],["body/modules/ProductsModule.html",[2,1.863,3,0.325,4,0.275,5,0.275,7,0.512,16,0.038,23,1.018,24,0.927,27,0.325,28,0.325,34,0.019,35,0.025,36,0.019,37,2.115,39,1.522,40,1.522,41,1.905,42,1.905,43,1.522,44,2.935,45,2.935,49,2.773,51,2.585,52,1.905,53,1.905,95,1.428,99,1.428,105,1.428,122,2.935,129,2.167,182,1.428,185,1.914,196,0.84,203,1.295,215,2.268,237,2.935,242,2.652,243,2.517,246,2.517,247,2.517,248,2.517,249,3.049,250,3.049,251,2.517,252,2.517,253,2.517,254,3.049,255,4.348,256,4.139,257,3.049,258,3.049,259,3.049,260,3.049,261,2.941,262,3.049,263,4.139,264,3.416,265,3.049,266,3.049,267,3.049,268,3.049,269,3.049]],["title/injectables/ProductsService.html",[61,1.112,242,1.356]],["body/injectables/ProductsService.html",[3,0.298,4,0.252,5,0.252,7,0.345,12,0.298,13,1.754,16,0.039,17,1.627,21,2.564,22,0.956,23,0.787,24,0.849,27,0.298,28,0.298,29,1.828,31,1.554,32,2.02,34,0.017,35,0.024,36,0.017,61,1.439,62,1.554,64,2.769,72,2.434,80,1.985,85,3.188,89,2.239,94,2.495,95,1.364,96,0.907,97,2.02,131,2.306,138,1.554,178,1.185,188,2.38,196,1.55,203,1.237,215,2.38,240,4.008,242,1.754,251,2.306,270,2.306,271,3.897,272,3.897,273,3.897,274,3.897,275,2.794,276,2.794,277,2.794,278,3.897,279,3.897,280,2.794,281,3.45,282,3.897,283,2.794,284,3.897,285,2.794,286,2.794,287,2.794,288,2.794,289,2.794,290,2.306]],["title/controllers/ShoppingCartController.html",[0,1.356,291,1.881]],["body/controllers/ShoppingCartController.html",[0,1.889,2,1.113,3,0.264,4,0.223,5,0.223,7,0.306,11,2.54,12,0.264,13,1.609,15,2.621,16,0.038,17,1.406,21,2.287,22,1.003,23,0.848,24,0.752,27,0.264,28,0.264,29,2.07,30,1.758,31,1.376,32,1.889,34,0.015,35,0.022,36,0.015,58,1.687,59,2.556,70,1.034,72,2.233,89,1.234,94,1.988,95,1.087,96,0.722,97,2.069,105,1.593,120,2.334,121,2.54,138,1.376,179,1.883,180,2.294,189,1.988,196,0.985,203,1.4,239,2.042,261,2.54,281,2.54,291,2.233,292,2.042,293,3.795,294,2.042,295,3.574,296,2.474,297,4.597,298,4.197,299,2.474,300,3.574,301,2.042,302,4.025,303,2.556,304,3.574,305,2.474,306,2.54,307,2.54,308,3.574,309,2.474,310,2.474,311,2.294,312,2.042,313,2.042,314,2.042,315,2.474,316,2.474,317,1.234,318,2.474,319,2.474,320,2.474,321,2.474,322,2.474]],["title/classes/ShoppingCartDto.html",[28,0.321,317,1.503]],["body/classes/ShoppingCartDto.html",[3,0.374,4,0.317,5,0.317,7,0.434,12,0.374,16,0.038,17,1.522,22,0.91,27,0.484,28,0.374,34,0.022,35,0.028,36,0.022,58,1.749,70,1.132,79,1.251,96,0.918,100,0.967,171,0.563,176,1.429,178,1.531,179,1.928,182,1.531,187,2.044,196,1.251,200,1.75,203,1.557,216,2.191,317,2.266,323,2.801,324,2.492,325,3.578,326,3.508,327,2.801,328,3.508,329,2.191]],["title/modules/ShoppingCartModule.html",[37,1.356,50,1.675]],["body/modules/ShoppingCartModule.html",[2,1.953,3,0.349,4,0.295,5,0.295,16,0.038,23,1.143,24,0.995,27,0.349,28,0.349,34,0.02,35,0.027,36,0.02,37,2.191,39,1.633,40,1.633,41,2.044,42,2.044,43,1.633,44,3.041,45,2.044,49,2.767,50,3.264,51,2.71,52,2.044,53,2.044,55,3.582,57,2.701,58,1.319,59,1.819,69,2.767,70,0.736,91,3.582,252,3.582,253,3.582,291,3.041,311,2.767,312,2.701,330,2.701,331,3.272,332,2.701,333,3.272,334,4.339,335,3.272,336,2.701,337,4.339,338,3.272,339,4.018,340,3.272,341,3.272]],["title/interfaces/ShoppingCartProductListItem.html",[171,0.484,327,1.675]],["body/interfaces/ShoppingCartProductListItem.html",[3,0.377,4,0.319,5,0.319,7,0.438,12,0.377,16,0.038,22,0.966,27,0.487,28,0.377,34,0.022,35,0.028,36,0.022,58,1.723,70,0.796,79,1.259,96,0.923,100,1.394,171,0.568,173,1.442,178,1.723,179,1.899,182,1.776,187,1.593,196,0.975,200,2.28,203,1.473,317,1.766,323,1.968,324,2.515,325,2.515,327,2.813,329,3.338]],["title/injectables/ShoppingCartService.html",[61,1.112,311,1.503]],["body/injectables/ShoppingCartService.html",[3,0.194,4,0.096,5,0.096,7,0.225,12,0.113,13,0.819,16,0.039,17,1.516,21,2.231,22,0.96,23,0.832,24,0.322,27,0.113,28,0.113,29,1.924,31,1.776,32,1.852,34,0.007,35,0.011,36,0.007,58,1.507,59,2.574,61,0.672,62,0.589,69,1.965,70,1.041,79,0.501,80,3.802,85,2.477,89,1.415,94,2.374,95,1.339,96,0.89,97,1.922,99,0.727,100,1.247,105,0.322,120,1.939,121,1.292,122,1.995,123,1.698,125,1.501,129,0.752,133,0.874,138,1.776,139,3.822,141,1.501,147,1.501,172,1.277,177,0.589,178,1.462,179,1.661,180,1.415,181,1.329,182,1.339,183,1.577,184,1.076,185,0.741,192,0.589,193,1.577,196,1.028,197,0.477,199,0.589,201,0.477,203,1.028,205,1.776,206,1.577,215,1.922,242,1.679,255,0.874,261,1.292,290,1.501,293,3.08,294,0.874,301,1.501,302,2.341,303,1.776,306,1.292,307,0.752,311,0.908,313,1.973,314,0.874,317,2.054,325,3.034,327,2.449,329,2.178,336,0.874,342,0.874,343,1.819,344,1.819,345,3.731,346,2.391,347,1.819,348,1.819,349,2.391,350,2.391,351,1.819,352,2.391,353,1.059,354,1.819,355,1.059,356,3.487,357,1.059,358,1.819,359,1.059,360,2.836,361,1.819,362,1.059,363,1.819,364,1.059,365,4.27,366,1.059,367,1.059,368,1.059,369,1.819,370,1.059,371,1.819,372,1.059,373,1.059,374,1.059,375,1.059,376,1.059,377,1.059,378,1.059,379,1.059,380,1.059,381,0.752,382,0.874,383,1.819,384,1.059,385,1.059,386,1.059,387,1.059,388,1.059,389,1.819,390,1.819,391,1.059,392,1.059,393,3.194,394,1.819,395,1.059,396,3.487,397,1.059,398,1.059,399,1.819,400,1.059,401,1.059,402,1.819,403,1.819,404,1.819,405,1.059,406,1.059,407,1.059,408,1.059,409,1.819,410,1.059,411,1.059,412,1.059,413,1.819,414,1.059,415,1.819,416,1.059,417,1.819,418,1.819,419,2.391,420,1.059,421,1.059,422,1.059,423,1.059,424,1.059,425,1.819,426,1.059,427,1.059,428,1.819,429,1.059,430,1.819,431,3.194,432,1.819,433,1.059,434,2.836,435,2.391,436,1.059,437,1.059,438,1.059,439,1.059,440,1.059]],["title/classes/ShoppingCartUpdateDto.html",[28,0.321,303,1.675]],["body/classes/ShoppingCartUpdateDto.html",[3,0.321,4,0.272,5,0.272,7,0.372,12,0.321,15,2.915,16,0.038,17,1.564,22,0.741,23,0.943,27,0.321,28,0.497,34,0.019,35,0.025,36,0.019,58,1.419,70,1.127,79,1.13,96,0.943,100,1.381,112,2.915,120,2.281,176,1.671,178,1.524,179,1.889,182,1.645,187,1.846,196,1.13,216,1.88,225,2.915,281,2.915,303,2.281,323,2.787,329,2.915,381,3.316,382,2.485,441,2.485,442,4.102,443,4.667,444,4.102,445,3.01,446,4.102,447,4.102,448,4.667,449,3.01,450,3.01,451,3.01,452,4.102,453,4.102,454,4.102,455,4.667,456,4.102,457,3.01,458,4.102,459,2.485,460,2.485,461,3.01]],["title/interfaces/TotalPrice.html",[171,0.484,197,1.356]],["body/interfaces/TotalPrice.html",[3,0.398,4,0.237,5,0.237,7,0.537,12,0.28,16,0.039,22,0.937,23,0.531,27,0.504,34,0.016,35,0.023,36,0.016,58,1.622,70,0.591,79,1.029,95,1.135,96,0.755,99,1.761,100,1.376,105,1.747,171,0.759,172,1.681,173,1.071,174,1.462,175,1.462,176,2.034,177,1.462,178,1.622,179,1.788,180,1.864,181,1.462,182,1.437,183,1.462,184,1.955,185,1.926,186,1.643,187,1.955,188,1.184,189,2.077,190,1.643,191,1.521,192,1.462,193,2.884,194,2.333,195,1.643,196,1.029,197,2.128,198,2.953,199,1.462,200,1.312,201,1.184,202,1.643,203,0.725,204,1.643,205,1.462,206,1.462]],["title/coverage.html",[462,2.916]],["body/coverage.html",[0,2.117,1,1.91,5,0.276,6,2.524,16,0.038,20,2.172,25,1.526,28,0.501,34,0.019,35,0.026,36,0.019,43,1.526,59,2.306,61,1.863,63,2.524,69,1.526,70,1.315,71,2.524,75,2.172,96,0.618,122,1.91,134,1.91,171,0.893,172,1.376,174,2.805,175,2.805,179,1.025,184,1.376,191,1.245,197,1.376,201,1.376,207,2.524,208,2.524,215,1.376,217,2.946,237,1.91,238,2.524,242,1.376,270,2.524,291,1.91,292,2.524,303,1.7,311,1.526,317,1.526,323,2.616,324,2.946,327,1.7,342,2.524,441,2.524,462,2.172,463,3.057,464,3.057,465,3.057,466,6.066,467,5.044,468,2.524,469,3.057,470,3.057,471,5.044,472,3.057,473,3.057,474,5.044,475,3.057,476,3.057,477,3.057,478,3.057]],["title/dependencies.html",[40,1.807,479,2.518]],["body/dependencies.html",[16,0.038,24,1.297,28,0.547,34,0.026,35,0.032,36,0.026,40,2.128,339,3.52,459,3.52,460,3.52,480,5.504,481,4.265,482,4.265,483,4.265,484,4.265,485,4.265,486,4.265,487,4.265,488,4.265,489,4.265,490,4.265,491,4.265,492,4.265,493,4.265]],["title/miscellaneous/enumerations.html",[494,1.573,495,2.989]],["body/miscellaneous/enumerations.html",[12,0.479,16,0.036,34,0.028,35,0.033,36,0.028,70,1.011,99,1.61,306,3.761,307,3.761,323,2.499,381,3.761,494,2.808,495,3.71,496,4.495,497,5.294]],["title/miscellaneous/functions.html",[494,1.573,498,2.989]],["body/miscellaneous/functions.html",[9,2.897,12,0.494,16,0.033,34,0.029,35,0.033,36,0.029,43,2.929,468,3.828,494,2.897,498,3.828,499,4.638]],["title/index.html",[12,0.268,500,2.518,501,2.518]],["body/index.html",[4,0.313,7,0.428,9,2.165,16,0.037,19,3.202,34,0.021,35,0.028,36,0.021,462,2.463,502,3.466,503,3.466,504,4.507,505,3.466,506,3.466,507,3.466,508,3.466,509,3.466,510,3.466,511,3.466,512,3.466,513,3.466,514,5.007,515,3.466,516,3.466,517,3.466,518,3.466,519,5.736,520,3.466,521,3.466,522,5.634,523,3.466,524,3.466,525,4.507,526,3.466,527,3.466,528,3.466,529,3.466,530,4.507,531,3.466,532,3.466,533,3.466,534,4.507,535,4.507,536,3.466,537,3.466,538,3.466,539,3.466,540,3.466,541,2.861,542,3.466,543,3.466,544,3.466,545,3.466,546,3.466,547,3.466,548,3.466,549,3.466,550,3.466,551,3.466,552,3.466,553,3.466,554,3.466,555,3.466,556,3.466,557,3.466,558,3.466,559,3.466]],["title/modules.html",[39,2.048]],["body/modules.html",[16,0.033,34,0.028,35,0.033,36,0.028,38,2.829,39,2.26,49,2.26,50,2.519,541,4.66,560,5.646,561,5.646,562,5.646]],["title/overview.html",[563,3.388]],["body/overview.html",[2,1.643,16,0.037,25,2.561,34,0.022,35,0.029,36,0.022,37,1.643,38,3.671,39,1.822,40,1.822,41,2.28,42,2.28,43,1.822,44,2.28,45,2.28,46,3.014,47,3.014,48,3.014,49,2.897,50,3.3,51,2.911,52,2.28,53,2.28,62,2.03,69,2.561,173,1.487,216,2.28,242,2.613,246,3.014,247,3.014,248,3.014,264,3.014,311,2.561,330,3.014,332,3.014,563,3.014,564,5.132,565,3.651]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":435,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["0.1.13",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["0.11.1",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0.19.2",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":129,"title":{},"body":{"injectables/CurrenciesService.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{}}}],["1/1",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":257,"title":{},"body":{"modules/ProductsModule.html":{}}}],["100",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":127,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["13/13",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":260,"title":{},"body":{"modules/ProductsModule.html":{}}}],["150",{"_index":269,"title":{},"body":{"modules/ProductsModule.html":{}}}],["2/2",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":160,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["3",{"_index":564,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":264,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["4/4",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["6.5.4",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":126,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["7",{"_index":565,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["action",{"_index":443,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["add",{"_index":306,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["add/remove",{"_index":452,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["added",{"_index":187,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["addproductstolist",{"_index":346,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["addproductstolist(productslist",{"_index":355,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["allow",{"_index":297,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["amazing",{"_index":542,"title":{},"body":{"index.html":{}}}],["angular",{"_index":513,"title":{},"body":{"index.html":{}}}],["another",{"_index":106,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["app",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":510,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":38,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assert",{"_index":360,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertproduct",{"_index":347,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertproduct(productid",{"_index":358,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertshoppingcart",{"_index":348,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["assertshoppingcart(id",{"_index":361,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["async",{"_index":85,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}}}],["author",{"_index":552,"title":{},"body":{"index.html":{}}}],["auto",{"_index":454,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["available",{"_index":218,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"controllers/ProductsController.html":{}}}],["await",{"_index":141,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["awsome",{"_index":265,"title":{},"body":{"modules/ProductsModule.html":{}}}],["axios",{"_index":339,"title":{},"body":{"modules/ShoppingCartModule.html":{},"dependencies.html":{}}}],["axios_instance_token",{"_index":337,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["backers",{"_index":543,"title":{},"body":{"index.html":{}}}],["base",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["basecurrency",{"_index":81,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["body",{"_index":308,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["bootstrap",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":404,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["browse",{"_index":562,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":560,"title":{},"body":{"modules.html":{}}}],["builddetailedproductitem",{"_index":349,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["builddetailedproductitem(product",{"_index":364,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["building",{"_index":505,"title":{},"body":{"index.html":{}}}],["cache",{"_index":111,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["calculate",{"_index":369,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculatetotalrequestedprice",{"_index":350,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculatetotalrequestedprice(detailedproductslist",{"_index":367,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["calculations",{"_index":116,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["car",{"_index":363,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart",{"_index":179,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["cart.action",{"_index":382,"title":{},"body":{"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["cart.action.ts",{"_index":497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cart.controller",{"_index":335,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["cart.controller.ts",{"_index":292,"title":{},"body":{"controllers/ShoppingCartController.html":{},"coverage.html":{}}}],["cart.controller.ts:29",{"_index":299,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["cart.controller.ts:40",{"_index":305,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["cart.controller.ts:54",{"_index":296,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["cart.dto",{"_index":380,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.dto.ts",{"_index":324,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"coverage.html":{}}}],["cart.dto.ts:12",{"_index":328,"title":{},"body":{"classes/ShoppingCartDto.html":{}}}],["cart.dto.ts:8",{"_index":326,"title":{},"body":{"classes/ShoppingCartDto.html":{}}}],["cart.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["cart.module.ts",{"_index":333,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["cart.service",{"_index":312,"title":{},"body":{"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{}}}],["cart.service.ts",{"_index":342,"title":{},"body":{"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["cart.service.ts:146",{"_index":366,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:186",{"_index":377,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:201",{"_index":362,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:214",{"_index":359,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:229",{"_index":357,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:267",{"_index":374,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:297",{"_index":368,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:32",{"_index":354,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:48",{"_index":372,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:63",{"_index":375,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart.service.ts:98",{"_index":370,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["cart/currencies.service.ts",{"_index":71,"title":{},"body":{"injectables/CurrenciesService.html":{},"coverage.html":{}}}],["cart/currencies.service.ts:18",{"_index":118,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:22",{"_index":115,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:27",{"_index":124,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:33",{"_index":93,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:53",{"_index":101,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:69",{"_index":109,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/currencies.service.ts:83",{"_index":107,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["cart/interfaces/external",{"_index":207,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["cart/interfaces/order",{"_index":174,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["cart/interfaces/shopping",{"_index":323,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cart/shopping",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["carts",{"_index":345,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["case",{"_index":399,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["change",{"_index":453,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["checkout",{"_index":180,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["checkout(@param('id",{"_index":320,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["checkout(id",{"_index":294,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["checkout.dto",{"_index":388,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["checkout.dto.ts",{"_index":175,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["class",{"_index":28,"title":{"classes/ProductDto.html":{},"classes/ShoppingCartDto.html":{},"classes/ShoppingCartUpdateDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":216,"title":{},"body":{"classes/ProductDto.html":{},"classes/ShoppingCartDto.html":{},"classes/ShoppingCartUpdateDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":246,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_exports",{"_index":247,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":248,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_shoppingcartmodule",{"_index":330,"title":{},"body":{"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["cluster_shoppingcartmodule_imports",{"_index":331,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["cluster_shoppingcartmodule_providers",{"_index":332,"title":{},"body":{"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["combinedquantity",{"_index":431,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["const",{"_index":139,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["constructor",{"_index":89,"title":{},"body":{"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["constructor(@inject('products",{"_index":285,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(httpservice",{"_index":90,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["constructor(input",{"_index":220,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["constructor(private",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}}}],["constructor(products",{"_index":275,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(productsservice",{"_index":353,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{},"coverage.html":{}}}],["controller('products",{"_index":244,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('shopping",{"_index":315,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["convert",{"_index":86,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["convert(from",{"_index":98,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["converting",{"_index":77,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["converts",{"_index":102,"title":{},"body":{"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["coverage",{"_index":462,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":293,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["creates",{"_index":300,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["currencies",{"_index":78,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currencies.service",{"_index":336,"title":{},"body":{"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{}}}],["currenciesmap",{"_index":166,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currenciesmap.set",{"_index":168,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currenciesservice",{"_index":69,"title":{"injectables/CurrenciesService.html":{}},"body":{"injectables/CurrenciesService.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{},"overview.html":{}}}],["currency",{"_index":105,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["currencyname",{"_index":167,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currencynames",{"_index":163,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["currencynames.reduce",{"_index":165,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["current",{"_index":74,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["data",{"_index":112,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["database",{"_index":188,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"interfaces/TotalPrice.html":{}}}],["date",{"_index":117,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["date.now",{"_index":151,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["declarations",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["default",{"_index":121,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["defines",{"_index":446,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["dependencies",{"_index":40,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"index.html":{}}}],["detailed",{"_index":177,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["detailedproductlistitem",{"_index":172,"title":{"interfaces/DetailedProductListItem.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["detailedproductslist",{"_index":206,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["detailedproductslist.reduce((sum",{"_index":438,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["determinates",{"_index":235,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["development",{"_index":521,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":531,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":506,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":495,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eur",{"_index":261,"title":{},"body":{"modules/ProductsModule.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["exchagerateslastsync",{"_index":82,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchange",{"_index":75,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["exchange_rates_api_url",{"_index":340,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["exchangerates",{"_index":140,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangerates.get(from",{"_index":144,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangerates.get(to",{"_index":146,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangeratesapiurl",{"_index":92,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["exchangeratescache",{"_index":83,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["exports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["express",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":195,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["external",{"_index":108,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["externalexchangerates",{"_index":134,"title":{"interfaces/ExternalExchangeRates.html":{}},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["externalexchangerates.data.base",{"_index":162,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["externalexchangerates.data.rates[currencyname",{"_index":169,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["externalexchangerates.status",{"_index":159,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["fetches",{"_index":73,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["findall",{"_index":240,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findbyid",{"_index":273,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyid(id",{"_index":279,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyids",{"_index":274,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyids(ids",{"_index":282,"title":{},"body":{"injectables/ProductsService.html":{}}}],["form",{"_index":278,"title":{},"body":{"injectables/ProductsService.html":{}}}],["found",{"_index":425,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["framework",{"_index":504,"title":{},"body":{"index.html":{}}}],["fresh",{"_index":113,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["fromrate",{"_index":143,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["function",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["functions",{"_index":498,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator.util",{"_index":385,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["get(':id",{"_index":295,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["get(this.exchangeratesapiurl",{"_index":157,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["getcurrentrates",{"_index":87,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["getexchangerates",{"_index":88,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["gethello",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":500,"title":{"index.html":{}},"body":{}}],["given",{"_index":103,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["grow",{"_index":538,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":511,"title":{},"body":{"index.html":{}}}],["hello",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["helper",{"_index":128,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["here",{"_index":549,"title":{},"body":{"index.html":{}}}],["hour",{"_index":114,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["httpmodule",{"_index":334,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["https://api.exchangeratesapi.io/latest",{"_index":341,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["https://nestjs.com",{"_index":556,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":91,"title":{},"body":{"injectables/CurrenciesService.html":{},"modules/ShoppingCartModule.html":{}}}],["id",{"_index":203,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["identifier",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":284,"title":{},"body":{"injectables/ProductsService.html":{}}}],["ids.includes(product.id",{"_index":288,"title":{},"body":{"injectables/ProductsService.html":{}}}],["import",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["imports",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingCartModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["inject",{"_index":131,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{}}}],["inject('exchange_rates_api_url",{"_index":137,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["injectable",{"_index":61,"title":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["injectables",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"overview.html":{}}}],["input",{"_index":226,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["inspired",{"_index":512,"title":{},"body":{"index.html":{}}}],["installation",{"_index":518,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":520,"title":{},"body":{"index.html":{}}}],["insufficientquantityproducts",{"_index":410,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["interface",{"_index":171,"title":{"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["interfaces",{"_index":173,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{},"overview.html":{}}}],["interfaces/external",{"_index":135,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["interfaces/order",{"_index":387,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["interfaces/product.dto",{"_index":251,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["interfaces/shopping",{"_index":313,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["isenum",{"_index":457,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["isenum(shoppingcartaction",{"_index":444,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["isnumber",{"_index":458,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["isstring",{"_index":448,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["item",{"_index":255,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{}}}],["item.requestedcurrencyprice.total",{"_index":440,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["join",{"_index":545,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":553,"title":{},"body":{"index.html":{}}}],["key",{"_index":214,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["last",{"_index":119,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["legend",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["license",{"_index":559,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":535,"title":{},"body":{"index.html":{}}}],["list",{"_index":205,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["literal",{"_index":211,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["main",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["manage",{"_index":344,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["map",{"_index":123,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"injectables/ShoppingCartService.html":{}}}],["map([[this.basecurrency",{"_index":170,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["milliseconds",{"_index":130,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["miscellaneous",{"_index":494,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":534,"title":{},"body":{"index.html":{}}}],["mode",{"_index":525,"title":{},"body":{"index.html":{}}}],["module",{"_index":37,"title":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["modules",{"_index":39,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"modules.html":{},"overview.html":{}}}],["money",{"_index":198,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["more",{"_index":548,"title":{},"body":{"index.html":{}}}],["multiplied",{"_index":194,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["myśliwiec",{"_index":554,"title":{},"body":{"index.html":{}}}],["name",{"_index":95,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["nest",{"_index":514,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":558,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"dependencies.html":{}}}],["nestjs/common/http/http.constants",{"_index":338,"title":{},"body":{"modules/ShoppingCartModule.html":{}}}],["nestjs/common/utils/random",{"_index":384,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["nestjs/core",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":122,"title":{},"body":{"injectables/CurrenciesService.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["newlist",{"_index":437,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newlist.concat(productlistitem",{"_index":436,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart",{"_index":389,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.id",{"_index":390,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["newshoppingcart.productslist",{"_index":391,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["nice",{"_index":259,"title":{},"body":{"modules/ProductsModule.html":{}}}],["node.js",{"_index":503,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":379,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["notfoundexception('shopping",{"_index":424,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["npm",{"_index":519,"title":{},"body":{"index.html":{}}}],["number",{"_index":100,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["object",{"_index":225,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["object.assign(this",{"_index":232,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["object.freeze(this",{"_index":234,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["object.freeze(this.price",{"_index":233,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["object.keys(externalexchangerates.data.rates",{"_index":164,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["one",{"_index":104,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["one_hour",{"_index":84,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["open",{"_index":536,"title":{},"body":{"index.html":{}}}],["optional",{"_index":97,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["order",{"_index":199,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["ordercheckoutdto",{"_index":201,"title":{"interfaces/OrderCheckoutDto.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["original",{"_index":186,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["originalprice",{"_index":181,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["out",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["overview",{"_index":563,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p1",{"_index":254,"title":{},"body":{"modules/ProductsModule.html":{}}}],["p2",{"_index":262,"title":{},"body":{"modules/ProductsModule.html":{}}}],["p3",{"_index":267,"title":{},"body":{"modules/ProductsModule.html":{}}}],["package",{"_index":479,"title":{"dependencies.html":{}},"body":{}}],["pairs",{"_index":212,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["param",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["param('id",{"_index":318,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"injectables/CurrenciesService.html":{},"classes/ProductDto.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["patch",{"_index":309,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["patch(':id",{"_index":304,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["pick",{"_index":221,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["plain",{"_index":224,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["please",{"_index":546,"title":{},"body":{"index.html":{}}}],["pln",{"_index":266,"title":{},"body":{"modules/ProductsModule.html":{}}}],["possible",{"_index":456,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["post",{"_index":298,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["prefix",{"_index":239,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}}}],["price",{"_index":185,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["private",{"_index":80,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}}}],["product",{"_index":178,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["product.description",{"_index":422,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.id",{"_index":290,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{}}}],["product.name",{"_index":421,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.price",{"_index":416,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.price.currency",{"_index":418,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.price.value",{"_index":417,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["product.quantity",{"_index":415,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productdto",{"_index":215,"title":{"classes/ProductDto.html":{}},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["productid",{"_index":329,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["productindex",{"_index":428,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["production",{"_index":527,"title":{},"body":{"index.html":{}}}],["productlistitem",{"_index":413,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productlistitem.productid",{"_index":430,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productlistitem.quantity",{"_index":434,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productpricedto",{"_index":191,"title":{"interfaces/ProductPriceDto.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["productpricewithtotal",{"_index":184,"title":{"interfaces/ProductPriceWithTotal.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["products",{"_index":196,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["products.controller",{"_index":250,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":243,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/interfaces/product.dto",{"_index":192,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["products/products.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingCartModule.html":{}}}],["products/products.service",{"_index":386,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["productscontroller",{"_index":237,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productslist",{"_index":325,"title":{},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{}}}],["productsmodule",{"_index":49,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":242,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":502,"title":{},"body":{"index.html":{}}}],["project",{"_index":537,"title":{},"body":{"index.html":{}}}],["promise",{"_index":138,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["promise.all",{"_index":411,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["promise.resolve(this.products",{"_index":286,"title":{},"body":{"injectables/ProductsService.html":{}}}],["properties",{"_index":79,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["provide",{"_index":252,"title":{},"body":{"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["quantity",{"_index":182,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["quantitytoadd",{"_index":356,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["query",{"_index":310,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["query('currency",{"_index":321,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["randomstringgenerator",{"_index":383,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["rates",{"_index":76,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{}}}],["rates.interface",{"_index":136,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["rates.interface.ts",{"_index":208,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{},"coverage.html":{}}}],["read",{"_index":547,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["reference",{"_index":213,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["reflect",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":202,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["remove",{"_index":307,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"miscellaneous/enumerations.html":{}}}],["removed",{"_index":447,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["removeproductsfromlist",{"_index":351,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["removeproductsfromlist(productslist",{"_index":373,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["repository",{"_index":517,"title":{},"body":{"index.html":{}}}],["representation",{"_index":200,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"interfaces/TotalPrice.html":{}}}],["represents",{"_index":176,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"classes/ShoppingCartDto.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["requested",{"_index":189,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"interfaces/TotalPrice.html":{}}}],["requestedcurrency",{"_index":365,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["requestedcurrencyprice",{"_index":183,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["required",{"_index":210,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["reset",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}],["resolves",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"injectables/ProductsService.html":{}}}],["resolving",{"_index":272,"title":{},"body":{"injectables/ProductsService.html":{}}}],["responsible",{"_index":72,"title":{},"body":{"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{}}}],["result",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["rimraf",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProductsController.html":{},"controllers/ShoppingCartController.html":{}}}],["routes",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["run",{"_index":522,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":507,"title":{},"body":{"index.html":{}}}],["selected",{"_index":281,"title":{},"body":{"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["server",{"_index":508,"title":{},"body":{"index.html":{}}}],["service",{"_index":271,"title":{},"body":{"injectables/ProductsService.html":{}}}],["serviceunavailableexception",{"_index":132,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["shop",{"_index":219,"title":{},"body":{"classes/ProductDto.html":{}}}],["shopping",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["shoppingcart",{"_index":393,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.productslist",{"_index":402,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcart.productslist.map(async",{"_index":412,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartaction",{"_index":381,"title":{},"body":{"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["shoppingcartaction.add",{"_index":400,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartaction.remove",{"_index":405,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartcontroller",{"_index":291,"title":{"controllers/ShoppingCartController.html":{}},"body":{"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"coverage.html":{}}}],["shoppingcartdto",{"_index":317,"title":{"classes/ShoppingCartDto.html":{}},"body":{"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcartid",{"_index":204,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["shoppingcartmodule",{"_index":50,"title":{"modules/ShoppingCartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShoppingCartModule.html":{},"modules.html":{},"overview.html":{}}}],["shoppingcartproductlistitem",{"_index":327,"title":{"interfaces/ShoppingCartProductListItem.html":{}},"body":{"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{}}}],["shoppingcartservice",{"_index":311,"title":{"injectables/ShoppingCartService.html":{}},"body":{"controllers/ShoppingCartController.html":{},"modules/ShoppingCartModule.html":{},"injectables/ShoppingCartService.html":{},"coverage.html":{},"overview.html":{}}}],["shoppingcartupdate",{"_index":302,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdate.action",{"_index":398,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdate.productid",{"_index":407,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdate.quantity",{"_index":403,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["shoppingcartupdatedto",{"_index":303,"title":{"classes/ShoppingCartUpdateDto.html":{}},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{}}}],["side",{"_index":509,"title":{},"body":{"index.html":{}}}],["singleitemprice",{"_index":419,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"index.html":{}}}],["sponsors",{"_index":540,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../shopping",{"_index":496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:19",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/interfaces/product.dto.ts",{"_index":217,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"coverage.html":{}}}],["src/products/interfaces/product.dto.ts:12",{"_index":228,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:16",{"_index":229,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:20",{"_index":230,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:24",{"_index":222,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/interfaces/product.dto.ts:8",{"_index":227,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/products/products.controller.ts",{"_index":238,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:20",{"_index":241,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":249,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":270,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:19",{"_index":277,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:28",{"_index":283,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:37",{"_index":280,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:8",{"_index":276,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/shopping",{"_index":70,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"modules/ShoppingCartModule.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["start",{"_index":523,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":526,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":528,"title":{},"body":{"index.html":{}}}],["started",{"_index":501,"title":{"index.html":{}},"body":{}}],["starter",{"_index":516,"title":{},"body":{"index.html":{}}}],["statements",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":550,"title":{},"body":{"index.html":{}}}],["storage",{"_index":125,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["stored",{"_index":236,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["string",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{}}}],["structure",{"_index":209,"title":{},"body":{"interfaces/ExternalExchangeRates.html":{}}}],["sum",{"_index":439,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["summary",{"_index":371,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["support",{"_index":541,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":149,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["svg",{"_index":561,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":397,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["table",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":223,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["test",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["test:covsupport",{"_index":533,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":532,"title":{},"body":{"index.html":{}}}],["tests",{"_index":530,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":539,"title":{},"body":{"index.html":{}}}],["this.addproductstolist",{"_index":401,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.appservice.gethello",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["this.assertproduct(productlistitem.productid",{"_index":414,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.assertproduct(shoppingcartupdate.productid",{"_index":395,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.assertshoppingcart(id",{"_index":394,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.basecurrency",{"_index":161,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.carts.get(id",{"_index":409,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carts.set(cart.id",{"_index":423,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.carts.set(newshoppingcart.id",{"_index":392,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.currenciesservice.convert",{"_index":420,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.exchagerateslastsync",{"_index":150,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.exchagerateslastsync.gettime",{"_index":152,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.exchangeratescache",{"_index":155,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.getcurrentrates",{"_index":154,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.getexchangerates",{"_index":142,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.httpservice",{"_index":156,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.one_hour",{"_index":153,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["this.products.filter(product",{"_index":287,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.products.find(product",{"_index":289,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.findall",{"_index":245,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbyid(productid",{"_index":426,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.removeproductsfromlist",{"_index":406,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["this.shoppingcartservice.checkout(id",{"_index":322,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["this.shoppingcartservice.create",{"_index":316,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["this.shoppingcartservice.update(id",{"_index":319,"title":{},"body":{"controllers/ShoppingCartController.html":{}}}],["this.updatecartlist(shoppingcart",{"_index":408,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["throw",{"_index":147,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["topromise",{"_index":158,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["torate",{"_index":145,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["total",{"_index":193,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{}}}],["totalprice",{"_index":197,"title":{"interfaces/TotalPrice.html":{}},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["touch",{"_index":551,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":442,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transform",{"_index":455,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transform(quantity",{"_index":461,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transform(undefined)@isnumber",{"_index":450,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["transformer",{"_index":460,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{},"dependencies.html":{}}}],["twitter",{"_index":557,"title":{},"body":{"index.html":{}}}],["type",{"_index":96,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"injectables/ProductsService.html":{},"controllers/ShoppingCartController.html":{},"classes/ShoppingCartDto.html":{},"interfaces/ShoppingCartProductListItem.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{},"interfaces/TotalPrice.html":{},"coverage.html":{}}}],["typescript",{"_index":515,"title":{},"body":{"index.html":{}}}],["unit",{"_index":529,"title":{},"body":{"index.html":{}}}],["unprocessableentityexception",{"_index":133,"title":{},"body":{"injectables/CurrenciesService.html":{},"injectables/ShoppingCartService.html":{}}}],["unprocessableentityexception('not",{"_index":148,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["unprocessableentityexception('product",{"_index":427,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["update",{"_index":120,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/ExternalExchangeRates.html":{},"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{},"classes/ShoppingCartUpdateDto.html":{}}}],["update(id",{"_index":301,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["update.dto",{"_index":314,"title":{},"body":{"controllers/ShoppingCartController.html":{},"injectables/ShoppingCartService.html":{}}}],["update.dto.ts",{"_index":441,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{},"coverage.html":{}}}],["update.dto.ts:13",{"_index":445,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["update.dto.ts:19",{"_index":449,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["update.dto.ts:27",{"_index":451,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{}}}],["updatecartlist",{"_index":352,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatecartlist(cart",{"_index":376,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist",{"_index":396,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist.findindex",{"_index":429,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist.push",{"_index":433,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["updatedproductslist[productindex].quantity",{"_index":432,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["used",{"_index":343,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["user",{"_index":190,"title":{},"body":{"interfaces/DetailedProductListItem.html":{},"interfaces/OrderCheckoutDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"interfaces/TotalPrice.html":{}}}],["usevalue",{"_index":253,"title":{},"body":{"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{}}}],["using",{"_index":110,"title":{},"body":{"injectables/CurrenciesService.html":{}}}],["validator",{"_index":459,"title":{},"body":{"classes/ShoppingCartUpdateDto.html":{},"dependencies.html":{}}}],["value",{"_index":99,"title":{},"body":{"injectables/CurrenciesService.html":{},"interfaces/DetailedProductListItem.html":{},"interfaces/ExternalExchangeRates.html":{},"interfaces/OrderCheckoutDto.html":{},"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{},"interfaces/ProductPriceWithTotal.html":{},"modules/ProductsModule.html":{},"injectables/ShoppingCartService.html":{},"interfaces/TotalPrice.html":{},"miscellaneous/enumerations.html":{}}}],["very",{"_index":258,"title":{},"body":{"modules/ProductsModule.html":{}}}],["void",{"_index":378,"title":{},"body":{"injectables/ShoppingCartService.html":{}}}],["warehouse",{"_index":231,"title":{},"body":{"classes/ProductDto.html":{},"interfaces/ProductPriceDto.html":{}}}],["watch",{"_index":524,"title":{},"body":{"index.html":{}}}],["website",{"_index":555,"title":{},"body":{"index.html":{}}}],["world",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":256,"title":{},"body":{"modules/ProductsModule.html":{}}}],["y",{"_index":263,"title":{},"body":{"modules/ProductsModule.html":{}}}],["you'd",{"_index":544,"title":{},"body":{"index.html":{}}}],["z",{"_index":268,"title":{},"body":{"modules/ProductsModule.html":{}}}],["zoom",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules/ShoppingCartModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Main app controller, base route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n                    Test function\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n/**\n * Main app controller, base route\n */\n@Controller()\nexport class AppController {\n  /**\n   * AppController\n   * @param appService\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Test function\n   * @returns {string}\n   */\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nShoppingCartModule\n\nShoppingCartModule\n\nAppModule -->\n\nShoppingCartModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                        \n                            ShoppingCartModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProductsModule } from './products/products.module';\nimport { ShoppingCartModule } from './shopping-cart/shopping-cart.module';\n\n@Module({\n  imports: [ProductsModule, ShoppingCartModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                resolves main app routes\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:12\n                \n            \n\n\n            \n                \n                    Test function\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * resolves main app routes\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Test function\n   * @returns {string}\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrenciesService.html":{"url":"injectables/CurrenciesService.html","title":"injectable - CurrenciesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CurrenciesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/currencies.service.ts\n        \n\n            \n                Description\n            \n            \n                Responsible for fetches current exchange rates and converting currencies\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseCurrency\n                            \n                            \n                                    Private\n                                exchageRatesLastSync\n                            \n                            \n                                    Private\n                                exchangeRatesCache\n                            \n                            \n                                    Private\n                                    Readonly\n                                ONE_HOUR\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                convert\n                            \n                            \n                                    Private\n                                    Async\n                                getCurrentRates\n                            \n                            \n                                    Private\n                                    Async\n                                getExchangeRates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, exchangeRatesApiUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/shopping-cart/currencies.service.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exchangeRatesApiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(from: string, to: string, value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/currencies.service.ts:53\n                \n            \n\n\n            \n                \n                    Converts given value from one currency to another\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getCurrentRates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentRates()\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/currencies.service.ts:83\n                \n            \n\n\n            \n                \n                    Fetches current exchange rates from external source\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getExchangeRates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getExchangeRates()\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/currencies.service.ts:69\n                \n            \n\n\n            \n                \n                    Resolves exchange rates using cache if data is fresh (one hour)\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseCurrency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:22\n                            \n                        \n\n                \n                    \n                        Base currency for exchange calculations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            exchageRatesLastSync\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:18\n                            \n                        \n\n                \n                    \n                        Date of last exchange rates update\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            exchangeRatesCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:27\n                            \n                        \n\n                \n                    \n                        Current exchange rates storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            ONE_HOUR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 60 * 60 * 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/currencies.service.ts:33\n                            \n                        \n\n                \n                    \n                        Helper - 1 hour in milliseconds\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpService,\n  Inject,\n  Injectable,\n  ServiceUnavailableException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { ExternalExchangeRates } from './interfaces/external-exchange-rates.interface';\n\n/**\n * Responsible for fetches current exchange rates and converting currencies\n */\n@Injectable()\nexport class CurrenciesService {\n  /**\n   * Date of last exchange rates update\n   */\n  private exchageRatesLastSync: Date;\n  /**\n   * Base currency for exchange calculations\n   */\n  private baseCurrency: string;\n  /**\n   * Current exchange rates storage\n   * @type {Map}\n   */\n  private exchangeRatesCache = new Map();\n\n  /**\n   * Helper - 1 hour in milliseconds\n   * @type {number}\n   */\n  private readonly ONE_HOUR = 60 * 60 * 1000;\n\n  /**\n   * Constructor\n   * @param httpService\n   * @param exchangeRatesApiUrl\n   */\n  constructor(\n    private readonly httpService: HttpService,\n    @Inject('EXCHANGE_RATES_API_URL')\n    private readonly exchangeRatesApiUrl: string,\n  ) {}\n\n  /**\n   * Converts given value from one currency to another\n   * @param from\n   * @param to\n   * @param value\n   * @returns {Promise}\n   */\n  async convert(from: string, to: string, value: number) {\n    const exchangeRates = await this.getExchangeRates();\n    const fromRate = exchangeRates.get(from);\n    const toRate = exchangeRates.get(to);\n\n    if (!fromRate || !toRate) {\n      throw new UnprocessableEntityException('Not supported currency');\n    }\n\n    return value * (toRate / fromRate);\n  }\n\n  /**\n   * Resolves exchange rates using cache if data is fresh (one hour)\n   * @returns {Promise>}\n   */\n  private async getExchangeRates() {\n    if (\n      !this.exchageRatesLastSync ||\n      Date.now() - this.exchageRatesLastSync.getTime() > this.ONE_HOUR\n    ) {\n      return this.getCurrentRates();\n    }\n    return this.exchangeRatesCache;\n  }\n\n  /**\n   * Fetches current exchange rates from external source\n   * @returns {Promise>}\n   */\n  private async getCurrentRates() {\n    const externalExchangeRates = await this.httpService\n      .get(this.exchangeRatesApiUrl)\n      .toPromise();\n\n    if (externalExchangeRates.status !== 200) {\n      throw new ServiceUnavailableException();\n    }\n\n    this.baseCurrency = externalExchangeRates.data.base;\n    this.exchageRatesLastSync = new Date();\n\n    const currencyNames = Object.keys(externalExchangeRates.data.rates);\n    this.exchangeRatesCache = currencyNames.reduce(\n      (currenciesMap, currencyName) => {\n        currenciesMap.set(\n          currencyName,\n          externalExchangeRates.data.rates[currencyName],\n        );\n        return currenciesMap;\n      },\n      new Map([[this.baseCurrency, 1]]),\n    );\n\n    return this.exchangeRatesCache;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailedProductListItem.html":{"url":"interfaces/DetailedProductListItem.html","title":"interface - DetailedProductListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailedProductListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents detailed product info for shopping cart checkout\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        originalPrice\n                                \n                                \n                                        quantity\n                                \n                                \n                                        requestedCurrencyPrice\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    product description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalPrice\n                                    \n                                \n                                \n                                    \n                                        originalPrice:         ProductPriceWithTotal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductPriceWithTotal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product price in original currency (as added to database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product quantity added to shopping cart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestedCurrencyPrice\n                                    \n                                \n                                \n                                    \n                                        requestedCurrencyPrice:         ProductPriceWithTotal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductPriceWithTotal\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product price in requested by user currency\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExternalExchangeRates.html":{"url":"interfaces/ExternalExchangeRates.html","title":"interface - ExternalExchangeRates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExternalExchangeRates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/external-exchange-rates.interface.ts\n        \n\n            \n                Description\n            \n            \n                External source data structure for exchange rates\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        base\n                                \n                                \n                                        date\n                                \n                                \n                                        rates\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base\n                                    \n                                \n                                \n                                    \n                                        base:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base currency, required for exchange calculations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date of exchange rates update\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rates\n                                    \n                                \n                                \n                                    \n                                        rates:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    map of pairs currency - value in reference to base currency\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ExternalExchangeRates {\n  /**\n   * map of pairs currency - value in reference to base currency\n   */\n  rates: { [key: string]: number };\n  /**\n   * Base currency, required for exchange calculations\n   */\n  base: string;\n  /**\n   * Date of exchange rates update\n   */\n  date: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderCheckoutDto.html":{"url":"interfaces/OrderCheckoutDto.html","title":"interface - OrderCheckoutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderCheckoutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                order checkout representation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        detailedProductsList\n                                \n                                \n                                        shoppingCartId\n                                \n                                \n                                        totalPrice\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detailedProductsList\n                                    \n                                \n                                \n                                    \n                                        detailedProductsList:         DetailedProductListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DetailedProductListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    list of products added to shopping cart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shoppingCartId\n                                    \n                                \n                                \n                                    \n                                        shoppingCartId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    related shopping cart id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                    \n                                \n                                \n                                    \n                                        totalPrice:         TotalPrice\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TotalPrice\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    total price of shopping cart in requested currency\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDto.html":{"url":"classes/ProductDto.html","title":"class - ProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/product.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents product available in shop\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: Pick)\n                    \n                \n                        \n                            \n                                Defined in src/products/interfaces/product.dto.ts:24\n                            \n                        \n\n                \n                    \n                            Takes plain object and converts to ProductDto\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        Pick\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:24\n                            \n                        \n\n                \n                    \n                        optional product description\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:8\n                            \n                        \n\n                \n                    \n                        product id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:12\n                            \n                        \n\n                \n                    \n                        product name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductPriceDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:16\n                            \n                        \n\n                \n                    \n                        product price - currency and value\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/products/interfaces/product.dto.ts:20\n                            \n                        \n\n                \n                    \n                        product quantity available in warehouse\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductDto {\n  /**\n   * product id\n   */\n  id: string;\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price - currency and value\n   */\n  price: ProductPriceDto;\n  /**\n   * product quantity available in warehouse\n   */\n  quantity: number;\n  /**\n   * optional product description\n   */\n  description?: string;\n\n  /**\n   * Takes plain object and converts to ProductDto\n   * @param input\n   */\n  constructor(input: Pick) {\n    Object.assign(this, input);\n    Object.freeze(this.price);\n    Object.freeze(this);\n  }\n}\n\n/**\n * Represents product price (value and currency)\n */\nexport interface ProductPriceDto {\n  /**\n   * Product value\n   */\n  value: number;\n  /**\n   * Determinates in what currency product is stored in database\n   */\n  currency: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductPriceDto.html":{"url":"interfaces/ProductPriceDto.html","title":"interface - ProductPriceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProductPriceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/product.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents product price (value and currency)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currency\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Determinates in what currency product is stored in database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Product value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export class ProductDto {\n  /**\n   * product id\n   */\n  id: string;\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price - currency and value\n   */\n  price: ProductPriceDto;\n  /**\n   * product quantity available in warehouse\n   */\n  quantity: number;\n  /**\n   * optional product description\n   */\n  description?: string;\n\n  /**\n   * Takes plain object and converts to ProductDto\n   * @param input\n   */\n  constructor(input: Pick) {\n    Object.assign(this, input);\n    Object.freeze(this.price);\n    Object.freeze(this);\n  }\n}\n\n/**\n * Represents product price (value and currency)\n */\nexport interface ProductPriceDto {\n  /**\n   * Product value\n   */\n  value: number;\n  /**\n   * Determinates in what currency product is stored in database\n   */\n  currency: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductPriceWithTotal.html":{"url":"interfaces/ProductPriceWithTotal.html","title":"interface - ProductPriceWithTotal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProductPriceWithTotal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents product price (value and currency) and total value (value multiplied by quantity)\n\n            \n\n            \n                Extends\n            \n            \n                        ProductPriceDto\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents products total value (value multiplied by quantity)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n            \n                Description\n            \n            \n                Controller responsible for /products route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:20\n                \n            \n\n\n            \n                \n                    Returns all available products\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ProductsService } from './products.service';\n\n/**\n * Controller responsible for /products route\n */\n@Controller('products')\nexport class ProductsController {\n  /**\n   * Constructor\n   * @param productsService\n   */\n  constructor(private productsService: ProductsService) {}\n\n  /**\n   * Returns all available products\n   * @returns {Promise}\n   */\n  @Get()\n  findAll() {\n    return this.productsService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService \n\nProductsService \n\n\n\nProductsModule\n\nProductsModule\n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\nimport { ProductDto } from './interfaces/product.dto';\n\n@Module({\n  controllers: [ProductsController],\n  providers: [\n    ProductsService,\n    {\n      provide: 'PRODUCTS',\n      useValue: [\n        new ProductDto({\n          id: 'p1',\n          name: 'Item X',\n          quantity: 10,\n          description: 'Very nice item X',\n          price: {\n            value: 15,\n            currency: 'EUR',\n          },\n        }),\n        new ProductDto({\n          id: 'p2',\n          name: 'Item Y',\n          quantity: 4,\n          description: 'Awsome item Y',\n          price: {\n            value: 4,\n            currency: 'PLN',\n          },\n        }),\n        new ProductDto({\n          id: 'p3',\n          name: 'Item Z',\n          quantity: 1,\n          price: {\n            value: 150,\n            currency: 'EUR',\n          },\n        }),\n      ],\n    },\n  ],\n  exports: [ProductsService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n            \n                Description\n            \n            \n                Service responsible for products resolving\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(products: ProductDto[])\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        products\n                                                  \n                                                        \n                                                                        ProductDto[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:19\n                \n            \n\n\n            \n                \n                    Resolves all products form database\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:37\n                \n            \n\n\n            \n                \n                    Returns selected product from database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByIds\n                        \n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:28\n                \n            \n\n\n            \n                \n                    Returns selected products from database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ProductDto } from './interfaces/product.dto';\n\n/**\n * Service responsible for products resolving\n */\n@Injectable()\nexport class ProductsService {\n  /**\n   * Constructor\n   * @param products\n   */\n  constructor(@Inject('PRODUCTS') private readonly products: ProductDto[]) {}\n\n  /**\n   * Resolves all products form database\n   * @returns {Promise}\n   */\n  async findAll() {\n    return Promise.resolve(this.products);\n  }\n\n  /**\n   * Returns selected products from database\n   * @param ids\n   * @returns {ProductDto[]}\n   */\n  findByIds(ids: string[]) {\n    return this.products.filter(product => ids.includes(product.id));\n  }\n\n  /**\n   * Returns selected product from database\n   * @param id\n   * @returns {ProductDto}\n   */\n  findById(id: string) {\n    return this.products.find(product => product.id === id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShoppingCartController.html":{"url":"controllers/ShoppingCartController.html","title":"controller - ShoppingCartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShoppingCartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/shopping-cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shopping-cart\n            \n\n            \n                Description\n            \n            \n                Controller responsible for /shopping-cart route\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkout\n                            \n                            \n                                create\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkout\n                        \n                        \n                    \n                \n            \n            \n                \ncheckout(id: string, currency: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.controller.ts:54\n                \n            \n\n\n            \n                \n                    Allow to checkout selected shopping cart with optional requested currency, default EUR\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.controller.ts:29\n                \n            \n\n\n            \n                \n                    Creates shopping cart\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, shoppingCartUpdate: ShoppingCartUpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.controller.ts:40\n                \n            \n\n\n            \n                \n                    Allow to add and remove products from shopping cart\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingCartUpdate\n                                    \n                                                ShoppingCartUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { ShoppingCartUpdateDto } from './interfaces/shopping-cart-update.dto';\n\n/**\n * Controller responsible for /shopping-cart route\n */\n@Controller('shopping-cart')\nexport class ShoppingCartController {\n  /**\n   * Constructor\n   * @param shoppingCartService\n   */\n  constructor(private readonly shoppingCartService: ShoppingCartService) {}\n\n  /**\n   * Creates shopping cart\n   * @returns {string}\n   */\n  @Post()\n  create() {\n    return this.shoppingCartService.create();\n  }\n\n  /**\n   * Allow to add and remove products from shopping cart\n   * @param id\n   * @param shoppingCartUpdate\n   * @returns {ShoppingCartDto}\n   */\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() shoppingCartUpdate: ShoppingCartUpdateDto,\n  ) {\n    return this.shoppingCartService.update(id, shoppingCartUpdate);\n  }\n\n  /**\n   * Allow to checkout selected shopping cart with optional requested currency, default EUR\n   * @param id\n   * @param currency\n   * @returns {Promise}\n   */\n  @Get(':id')\n  checkout(@Param('id') id: string, @Query('currency') currency: string) {\n    return this.shoppingCartService.checkout(id, currency);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingCartDto.html":{"url":"classes/ShoppingCartDto.html","title":"class - ShoppingCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/shopping-cart.dto.ts\n        \n\n            \n                Description\n            \n            \n                represents shopping cart\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                productsList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart.dto.ts:8\n                            \n                        \n\n                \n                    \n                        shopping cart id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ShoppingCartProductListItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart.dto.ts:12\n                            \n                        \n\n                \n                    \n                        products added to shopping cart\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ShoppingCartDto {\n  /**\n   * shopping cart id\n   */\n  id: string;\n  /**\n   * products added to shopping cart\n   */\n  productsList: ShoppingCartProductListItem[];\n}\n\n/**\n * representation of product and quantity in shopping cart\n */\nexport interface ShoppingCartProductListItem {\n  /**\n   * product id\n   */\n  productId: string;\n  /**\n   * product quantity in shopping cart\n   */\n  quantity: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShoppingCartModule.html":{"url":"modules/ShoppingCartModule.html","title":"module - ShoppingCartModule","body":"\n                   \n\n\n\n\n    Modules\n    ShoppingCartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShoppingCartModule\n\n\n\ncluster_ShoppingCartModule_imports\n\n\n\ncluster_ShoppingCartModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nShoppingCartModule\n\nShoppingCartModule\n\nShoppingCartModule -->\n\nProductsModule->ShoppingCartModule\n\n\n\n\n\nCurrenciesService\n\nCurrenciesService\n\nShoppingCartModule -->\n\nCurrenciesService->ShoppingCartModule\n\n\n\n\n\nShoppingCartService\n\nShoppingCartService\n\nShoppingCartModule -->\n\nShoppingCartService->ShoppingCartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shopping-cart/shopping-cart.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CurrenciesService\n                        \n                        \n                            ShoppingCartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ShoppingCartController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, HttpService, Module } from '@nestjs/common';\nimport { ShoppingCartController } from './shopping-cart.controller';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { ProductsModule } from '../products/products.module';\nimport { CurrenciesService } from './currencies.service';\nimport { AXIOS_INSTANCE_TOKEN } from '@nestjs/common/http/http.constants';\nimport axios from 'axios';\n\n@Module({\n  imports: [ProductsModule, HttpModule],\n  controllers: [ShoppingCartController],\n  providers: [\n    ShoppingCartService,\n    CurrenciesService,\n    HttpService,\n    {\n      provide: 'EXCHANGE_RATES_API_URL',\n      useValue: 'https://api.exchangeratesapi.io/latest',\n    },\n    {\n      provide: AXIOS_INSTANCE_TOKEN,\n      useValue: axios,\n    },\n  ],\n})\nexport class ShoppingCartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingCartProductListItem.html":{"url":"interfaces/ShoppingCartProductListItem.html","title":"interface - ShoppingCartProductListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ShoppingCartProductListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/shopping-cart.dto.ts\n        \n\n            \n                Description\n            \n            \n                representation of product and quantity in shopping cart\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        productId\n                                \n                                \n                                        quantity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    product quantity in shopping cart\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export class ShoppingCartDto {\n  /**\n   * shopping cart id\n   */\n  id: string;\n  /**\n   * products added to shopping cart\n   */\n  productsList: ShoppingCartProductListItem[];\n}\n\n/**\n * representation of product and quantity in shopping cart\n */\nexport interface ShoppingCartProductListItem {\n  /**\n   * product id\n   */\n  productId: string;\n  /**\n   * product quantity in shopping cart\n   */\n  quantity: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingCartService.html":{"url":"injectables/ShoppingCartService.html","title":"injectable - ShoppingCartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/shopping-cart.service.ts\n        \n\n            \n                Description\n            \n            \n                Used for manage shopping carts\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                carts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addProductsToList\n                            \n                            \n                                    Private\n                                assertProduct\n                            \n                            \n                                    Private\n                                assertShoppingCart\n                            \n                            \n                                    Private\n                                    Async\n                                buildDetailedProductItem\n                            \n                            \n                                    Private\n                                calculateTotalRequestedPrice\n                            \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                create\n                            \n                            \n                                    Private\n                                removeProductsFromList\n                            \n                            \n                                update\n                            \n                            \n                                    Private\n                                updateCartList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductsService, currenciesService: CurrenciesService)\n                    \n                \n                        \n                            \n                                Defined in src/shopping-cart/shopping-cart.service.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currenciesService\n                                                  \n                                                        \n                                                                        CurrenciesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addProductsToList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductsToList(productsList: ShoppingCartProductListItem[], product: ProductDto, quantityToAdd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:229\n                \n            \n\n\n            \n                \n                    Add products to shopping cart list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsList\n                                    \n                                                ShoppingCartProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantityToAdd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:214\n                \n            \n\n\n            \n                \n                    Assert product\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProductDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertShoppingCart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertShoppingCart(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:201\n                \n            \n\n\n            \n                \n                    Assert shopping car\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ShoppingCartDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            buildDetailedProductItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildDetailedProductItem(product: ProductDto, quantity: number, requestedCurrency: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:146\n                \n            \n\n\n            \n                \n                    Create detailed product info for order checkout\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requestedCurrency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateTotalRequestedPrice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTotalRequestedPrice(detailedProductsList: DetailedProductListItem[])\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:297\n                \n            \n\n\n            \n                \n                    Calculate total products price\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detailedProductsList\n                                    \n                                                DetailedProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkout(id: string, requestedCurrency: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:98\n                \n            \n\n\n            \n                \n                    Get summary of shopping cart\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    requestedCurrency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'EUR'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:48\n                \n            \n\n\n            \n                \n                    Create shopping cart\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeProductsFromList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeProductsFromList(productsList: ShoppingCartProductListItem[], productId: string, quantity: number)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:267\n                \n            \n\n\n            \n                \n                    Remove products from shopping cart list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsList\n                                    \n                                                ShoppingCartProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, shoppingCartUpdate: ShoppingCartUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:63\n                \n            \n\n\n            \n                \n                    Update shopping cart\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    shoppingCartUpdate\n                                    \n                                                ShoppingCartUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateCartList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCartList(cart: ShoppingCartDto, productsList: ShoppingCartProductListItem[])\n                \n            \n\n\n            \n                \n                    Defined in src/shopping-cart/shopping-cart.service.ts:186\n                \n            \n\n\n            \n                \n                    Update shopping cart products list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cart\n                                    \n                                                ShoppingCartDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productsList\n                                    \n                                                ShoppingCartProductListItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            carts\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/shopping-cart.service.ts:32\n                            \n                        \n\n                \n                    \n                        Storage for shopping carts\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport {\n  ShoppingCartDto,\n  ShoppingCartProductListItem,\n} from './interfaces/shopping-cart.dto';\nimport { ShoppingCartAction } from './interfaces/shopping-cart.action';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\nimport { ProductsService } from '../products/products.service';\nimport { ShoppingCartUpdateDto } from './interfaces/shopping-cart-update.dto';\nimport { ProductDto } from '../products/interfaces/product.dto';\nimport {\n  DetailedProductListItem,\n  OrderCheckoutDto,\n  ProductPriceWithTotal,\n  TotalPrice,\n} from './interfaces/order-checkout.dto';\nimport { CurrenciesService } from './currencies.service';\n\n/**\n * Used for manage shopping carts\n */\n@Injectable()\nexport class ShoppingCartService {\n  /**\n   * Storage for shopping carts\n   * @type {Map}\n   */\n  private readonly carts = new Map();\n\n  /**\n   * Constructor\n   * @param productsService\n   * @param currenciesService\n   */\n  constructor(\n    private readonly productsService: ProductsService,\n    private readonly currenciesService: CurrenciesService,\n  ) {}\n\n  /**\n   * Create shopping cart\n   * @returns {string}\n   */\n  create(): string {\n    const newShoppingCart = new ShoppingCartDto();\n    newShoppingCart.id = randomStringGenerator();\n    newShoppingCart.productsList = [];\n\n    this.carts.set(newShoppingCart.id, newShoppingCart);\n    return newShoppingCart.id;\n  }\n\n  /**\n   * Update shopping cart\n   * @param {string} id\n   * @param {ShoppingCartUpdateDto} shoppingCartUpdate\n   * @returns {ShoppingCartDto}\n   */\n  update(id: string, shoppingCartUpdate: ShoppingCartUpdateDto) {\n    const shoppingCart = this.assertShoppingCart(id);\n    const product = this.assertProduct(shoppingCartUpdate.productId);\n    let updatedProductsList: ShoppingCartProductListItem[];\n\n    switch (shoppingCartUpdate.action) {\n      case ShoppingCartAction.ADD:\n        updatedProductsList = this.addProductsToList(\n          shoppingCart.productsList,\n          product,\n          shoppingCartUpdate.quantity,\n        );\n        break;\n      case ShoppingCartAction.REMOVE:\n        updatedProductsList = this.removeProductsFromList(\n          shoppingCart.productsList,\n          shoppingCartUpdate.productId,\n          shoppingCartUpdate.quantity,\n        );\n        break;\n    }\n\n    if (updatedProductsList) {\n      this.updateCartList(shoppingCart, updatedProductsList);\n    }\n\n    return this.carts.get(id);\n  }\n\n  /**\n   * Get summary of shopping cart\n   * @param id\n   * @param requestedCurrency\n   * @returns {Promise}\n   */\n  async checkout(\n    id: string,\n    requestedCurrency = 'EUR',\n  ): Promise {\n    const shoppingCart = this.assertShoppingCart(id);\n    const insufficientQuantityProducts = [];\n\n    const detailedProductsList = await Promise.all(\n      shoppingCart.productsList.map(async productListItem => {\n        const product = this.assertProduct(productListItem.productId);\n\n        if (product.quantity }\n   */\n  private async buildDetailedProductItem(\n    product: ProductDto,\n    quantity: number,\n    requestedCurrency: string,\n  ): Promise {\n    let requestedCurrencyPrice: ProductPriceWithTotal;\n    const originalPrice: ProductPriceWithTotal = {\n      ...product.price,\n      total: quantity * product.price.value,\n    };\n\n    if (requestedCurrency !== product.price.currency) {\n      const singleItemPrice = await this.currenciesService.convert(\n        product.price.currency,\n        requestedCurrency,\n        product.price.value,\n      );\n      requestedCurrencyPrice = {\n        currency: requestedCurrency,\n        value: singleItemPrice,\n        total: quantity * singleItemPrice,\n      };\n    } else {\n      requestedCurrencyPrice = { ...originalPrice };\n    }\n\n    return {\n      name: product.name,\n      quantity,\n      description: product.description,\n      originalPrice,\n      requestedCurrencyPrice,\n    };\n  }\n\n  /**\n   * Update shopping cart products list\n   * @param cart\n   * @param productsList\n   */\n  private updateCartList(\n    cart: ShoppingCartDto,\n    productsList: ShoppingCartProductListItem[],\n  ) {\n    this.carts.set(cart.id, {\n      ...cart,\n      productsList,\n    });\n  }\n\n  /**\n   * Assert shopping car\n   * @param id\n   * @returns {ShoppingCartDto}\n   */\n  private assertShoppingCart(id: string): ShoppingCartDto {\n    const shoppingCart = this.carts.get(id);\n    if (!shoppingCart) {\n      throw new NotFoundException('Shopping cart not found');\n    }\n    return shoppingCart;\n  }\n\n  /**\n   * Assert product\n   * @param productId\n   * @returns {ProductDto}\n   */\n  private assertProduct(productId: string): ProductDto {\n    const product = this.productsService.findById(productId);\n    if (!product) {\n      throw new UnprocessableEntityException('Product not found');\n    }\n    return product;\n  }\n\n  /**\n   * Add products to shopping cart list\n   * @param productsList\n   * @param product\n   * @param quantityToAdd\n   * @returns {ShoppingCartProductListItem[]}\n   */\n  private addProductsToList(\n    productsList: ShoppingCartProductListItem[],\n    product: ProductDto,\n    quantityToAdd: number,\n  ) {\n    const updatedProductsList = [...productsList];\n    const productIndex = updatedProductsList.findIndex(\n      productListItem => productListItem.productId === product.id,\n    );\n    let combinedQuantity: number;\n    if (productIndex !== -1) {\n      combinedQuantity =\n        updatedProductsList[productIndex].quantity + quantityToAdd;\n      updatedProductsList[productIndex].quantity = combinedQuantity;\n    } else {\n      combinedQuantity = quantityToAdd;\n      updatedProductsList.push({\n        productId: product.id,\n        quantity: combinedQuantity,\n      });\n    }\n\n    if (product.quantity  {\n        if (productListItem.productId === productId) {\n          productListItem.quantity =\n            productListItem.quantity > quantity\n              ? productListItem.quantity - quantity\n              : 0;\n          if (productListItem.quantity > 0) {\n            return newList.concat(productListItem);\n          }\n        }\n        return newList;\n      },\n      [],\n    );\n  }\n\n  /**\n   * Calculate total products price\n   * @param detailedProductsList\n   * @returns {number}\n   */\n  private calculateTotalRequestedPrice(\n    detailedProductsList: DetailedProductListItem[],\n  ): number {\n    return detailedProductsList.reduce((sum, item) => {\n      return sum + item.requestedCurrencyPrice.total;\n    }, 0);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingCartUpdateDto.html":{"url":"classes/ShoppingCartUpdateDto.html","title":"class - ShoppingCartUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingCartUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/shopping-cart-update.dto.ts\n        \n\n            \n                Description\n            \n            \n                data transfer object for shopping cart update\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ShoppingCartAction\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(ShoppingCartAction)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart-update.dto.ts:13\n                            \n                        \n\n                \n                    \n                        defines if products should be added or removed from cart\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart-update.dto.ts:19\n                            \n                        \n\n                \n                    \n                        represents selected product\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(undefined)@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shopping-cart/interfaces/shopping-cart-update.dto.ts:27\n                            \n                        \n\n                \n                    \n                        product add/remove quantity change\nAuto transform to number if possible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ShoppingCartAction } from './shopping-cart.action';\nimport { IsEnum, IsNumber, IsString } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\n/**\n * data transfer object for shopping cart update\n */\nexport class ShoppingCartUpdateDto {\n  /**\n   * defines if products should be added or removed from cart\n   */\n  @IsEnum(ShoppingCartAction)\n  action: ShoppingCartAction;\n\n  /**\n   * represents selected product\n   */\n  @IsString()\n  productId: string;\n\n  /**\n   * product add/remove quantity change\n   * Auto transform to number if possible\n   */\n  @Transform(quantity => +quantity)\n  @IsNumber()\n  quantity: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TotalPrice.html":{"url":"interfaces/TotalPrice.html","title":"interface - TotalPrice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TotalPrice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shopping-cart/interfaces/order-checkout.dto.ts\n        \n\n            \n                Description\n            \n            \n                Represents shopping cart total value and currency\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currency\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    money currency\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    money value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProductPriceDto } from '../../products/interfaces/product.dto';\n\n/**\n * Represents product price (value and currency) and total value (value multiplied by quantity)\n */\nexport interface ProductPriceWithTotal extends ProductPriceDto {\n  /**\n   * Represents products total value (value multiplied by quantity)\n   */\n  total: number;\n}\n\n/**\n * Represents shopping cart total value and currency\n */\nexport interface TotalPrice {\n  /**\n   * money value\n   */\n  value: number;\n  /**\n   * money currency\n   */\n  currency: string;\n}\n\n/**\n * Represents detailed product info for shopping cart checkout\n */\nexport interface DetailedProductListItem {\n  /**\n   * product name\n   */\n  name: string;\n  /**\n   * product price in original currency (as added to database)\n   */\n  originalPrice: ProductPriceWithTotal;\n  /**\n   * product price in requested by user currency\n   */\n  requestedCurrencyPrice: ProductPriceWithTotal;\n  /**\n   * product quantity added to shopping cart\n   */\n  quantity: number;\n  /**\n   * product description\n   */\n  description?: string;\n}\n\n/**\n * order checkout representation\n */\nexport interface OrderCheckoutDto {\n  /**\n   * related shopping cart id\n   */\n  shoppingCartId: string;\n  /**\n   * total price of shopping cart in requested currency\n   */\n  totalPrice: TotalPrice;\n  /**\n   * list of products added to shopping cart\n   */\n  detailedProductsList: DetailedProductListItem[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/interfaces/product.dto.ts\n            \n            class\n            ProductDto\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/products/interfaces/product.dto.ts\n            \n            interface\n            ProductPriceDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/shopping-cart/currencies.service.ts\n            \n            injectable\n            CurrenciesService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/external-exchange-rates.interface.ts\n            \n            interface\n            ExternalExchangeRates\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            DetailedProductListItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            OrderCheckoutDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            ProductPriceWithTotal\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/order-checkout.dto.ts\n            \n            interface\n            TotalPrice\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/shopping-cart-update.dto.ts\n            \n            class\n            ShoppingCartUpdateDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/shopping-cart.dto.ts\n            \n            class\n            ShoppingCartDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/shopping-cart/interfaces/shopping-cart.dto.ts\n            \n            interface\n            ShoppingCartProductListItem\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/shopping-cart/shopping-cart.controller.ts\n            \n            controller\n            ShoppingCartController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shopping-cart/shopping-cart.service.ts\n            \n            injectable\n            ShoppingCartService\n            \n                100 %\n                (13/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            axios : ^0.19.2\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ShoppingCartAction   (src/.../shopping-cart.action.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shopping-cart/interfaces/shopping-cart.action.ts\n    \n        \n            \n                \n                    \n                        \n                        ShoppingCartAction\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                Value : add\n                            \n                        \n                        \n                            \n                                 REMOVE\n                            \n                        \n                        \n                            \n                                Value : remove\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Bootstrap app\n\n\n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShoppingCartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_exports\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ShoppingCartModule\n\n\n\ncluster_ShoppingCartModule_providers\n\n\n\n\nProductsModule\n\nProductsModule\n\n\n\nShoppingCartModule\n\nShoppingCartModule\n\nShoppingCartModule -->\n\nProductsModule->ShoppingCartModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nProductsService \n\nProductsService \n\nProductsService  -->\n\nProductsModule->ProductsService \n\n\n\nAppModule -->\n\nShoppingCartModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nCurrenciesService\n\nCurrenciesService\n\nShoppingCartModule -->\n\nCurrenciesService->ShoppingCartModule\n\n\n\n\n\nShoppingCartService\n\nShoppingCartService\n\nShoppingCartModule -->\n\nShoppingCartService->ShoppingCartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
